[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"17","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"18","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"20","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"21","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"22"},{"size":500,"mtime":1637982889584,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1637982890529,"results":"25","hashOfConfig":"24"},{"size":1305,"mtime":1641544222211,"results":"26","hashOfConfig":"24"},{"size":1121,"mtime":1638940046010,"results":"27","hashOfConfig":"24"},{"size":526,"mtime":1637982889175,"results":"28","hashOfConfig":"24"},{"size":2096,"mtime":1638946933869,"results":"29","hashOfConfig":"24"},{"size":3154,"mtime":1638946971310,"results":"30","hashOfConfig":"24"},{"size":233,"mtime":1637982889459,"results":"31","hashOfConfig":"24"},{"size":810,"mtime":1641573120662,"results":"32","hashOfConfig":"24"},{"size":3391,"mtime":1641573120887,"results":"33","hashOfConfig":"24"},{"size":3266,"mtime":1641573120738,"results":"34","hashOfConfig":"24"},{"size":223,"mtime":1637982890092,"results":"35","hashOfConfig":"24"},{"size":1064,"mtime":1641544222546,"results":"36","hashOfConfig":"24"},{"size":995,"mtime":1641544222666,"results":"37","hashOfConfig":"24"},{"size":1490,"mtime":1641544223294,"results":"38","hashOfConfig":"24"},{"size":18816,"mtime":1641573121549,"results":"39","hashOfConfig":"24"},{"size":1783,"mtime":1638946649289,"results":"40","hashOfConfig":"24"},{"size":971,"mtime":1637982889426,"results":"41","hashOfConfig":"24"},{"size":12289,"mtime":1639453820425,"results":"42","hashOfConfig":"24"},{"size":1671,"mtime":1641552092793,"results":"43","hashOfConfig":"24"},{"size":4849,"mtime":1641552291913,"results":"44","hashOfConfig":"24"},{"size":1730,"mtime":1641544223339,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h0escr",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["94","95"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["96","97"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["98","99","100","101","102"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["103","104","105"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["106","107"],"import { useState } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport { useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport qr from \"../../images/qrcode.png\";\nimport up from \"../../images/upload-btn.png\";\n\nexport default function Upload() {\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [qrTop, setqrTop] = useState<number>(0);\n  const [qrLeft, setqrLeft] = useState<number>(0);\n  const [qrW, setqrW] = useState<number>(0);\n  const [qrH, setqrH] = useState<number>(0);\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n  const [nameW, setNameW] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n  const [eventW, setEventW] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n  const [dateW, setDateW] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n  const [positionW, setPositionW] = useState<number>(0);\n\n  const [alert, setAlert] = useState<boolean>(false);\n\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionqrTop(e) {\n    setqrTop(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionqrLeft(e) {\n    setqrLeft(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function qrWidth(e) {\n    setqrW(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrHeight(e) {\n    setqrH(parseInt(e.target.value));\n\n    const q = document.getElementById(\"qrc\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionNameTop(e) {\n    setNameTop(parseInt(e.target.value));\n\n    const name = document.getElementById(\"name\");\n    name.style.top = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft(e) {\n    setNameLeft(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function NameW(e) {\n    setNameW(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.width = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop(e) {\n    setEventTop(parseInt(e.target.value));\n    const event = document.getElementById(\"event\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function positionEventLeft(e) {\n    setEventLeft(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.left = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function EventW(e) {\n    setEventW(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.width = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function positionEventDateTop(e) {\n    setDateTop(parseInt(e.target.value));\n    const event = document.getElementById(\"e-date\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft(e) {\n    setDateLeft(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateW(e) {\n    setDateW(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.width = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n\n  function positionPosTop(e) {\n    setPositionTop(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.top = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft(e) {\n    setPositionLeft(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.left = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionW(e) {\n    setPositionLeft(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.width = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  const coordinates = {\n    name: [nameTop, nameLeft, nameW],\n    event: [eventTop, eventLeft, eventW],\n    date: [dateTop, dateLeft, dateW],\n    position: [positionTop, positionLeft, positionW],\n    qr: [qrTop, qrLeft, qrH, qrW],\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            // window.alert(\"Certificate Uploaded Successfully\");\n            setAlert(true);\n            setTimeout(function () {\n              window.location.reload();\n            }, 2000);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n\n  console.log(userId);\n  return (\n    <div className={type === \"comp\" ? \"container cont2\" : \"container\"}>\n      {alert && (\n        <div className=\"alert\">\n          Congratulations! Certifcate has been uploaded successfully!!\n        </div>\n      )}\n\n      <Navbar2 />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            <img src={up} />\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n        <div className={type === \"comp\" ? \"upload-info info2\" : \"upload-info\"}>\n          <span style={{ fontWeight: 800, marginRight: \"10px\" }}>Note:</span>\n          The dimmensions of the certificate are 700px x 500px, please enter all\n          coordinates in px keeping this height and width in mind.\n        </div>\n      </div>\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div className=\"up-box\">\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option id=\"op\" value=\"\">\n                Purpose of Generating Certificate\n              </option>\n              <option id=\"op\" value=\"wc\">\n                WC Completion\n              </option>\n              <option id=\"op\" value=\"mc\">\n                MC Completion\n              </option>\n              <option id=\"op\" value=\"org\">\n                Organizing a Competition\n              </option>\n              <option id=\"op\" value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n            {type && (\n              <div className=\"type-container\">\n                <div>\n                  <div className=\"enter\">ENTER THE COORDINATES:</div>\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">1. Name:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => positionNameTop(e)}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => positionNameLeft(e)}\n                        ></input>\n                        <label>Width:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => NameW(e)}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">2. QRCODE:</label>\n                      <br />\n                      <div className=\"row qr-row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => positionqrTop(e)}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => positionqrLeft(e)}\n                        ></input>\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                        <label>Width:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => qrWidth(e)}\n                        ></input>\n\n                        {/* </div> */}\n                      </div>\n                      <label className=\"height\">Height:</label>\n                      <input\n                        className=\"type-input height\"\n                        type=\"number\"\n                        onChange={(e) => qrHeight(e)}\n                      ></input>\n                    </div>\n                  </div>\n                  {(type === \"wc\" || type === \"mc\") && <div></div>}\n                  {type === \"org\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">3. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventTop(e)}\n                          ></input>\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventLeft(e)}\n                          ></input>\n                          <label>Width:</label>\n\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => EventW(e)}\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">4. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventDateTop(e)}\n                          ></input>\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventDateLeft(e)}\n                          ></input>\n                          <label>Width:</label>\n\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => EventDateW(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                  )}{\" \"}\n                  {type === \"comp\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">3. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventTop(e)}\n                          ></input>\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventLeft(e)}\n                          ></input>\n                          <label>Width:</label>\n\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => EventW(e)}\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">4. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventDateTop(e)}\n                          ></input>\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionEventDateLeft(e)}\n                          ></input>\n                          <label>Width:</label>\n\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => EventDateW(e)}\n                          ></input>\n                        </div>\n                      </div>{\" \"}\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Positon Won:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionPosTop(e)}\n                          ></input>\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionPosLeft(e)}\n                          ></input>\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => PositionW(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div style={{ textAlign: \"right\" }}>\n                    <button type=\"submit\" className=\"submit-up\">\n                      Upload\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["108","109","110","111","112"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport QRCode from \"qrcode\";\nimport qrcode_1 from \"../../images/qrcode.png\";\nimport \"./singlecert.css\";\n\nexport default function SingleImage(props) {\n  const id = window.location.pathname.split(\"/\")[2];\n  QRCode.toDataURL(\"https://www.google.com/\")\n    .then((url) => {\n      // setLink(url);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n\n  // With async/await\n\n  const [csv, setCsv] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr2, setArr2] = useState([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState<any>([]);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [final, setFinal] = useState(false);\n  const [type, setType] = useState(\"\");\n\n  const canvasRef = useRef(null);\n\n  function onFileChange(e) {\n    setCsv(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\" + id)\n      .then((response: any) => {\n        setCertUrl(response.data.certUrl);\n        setCoordinates(response.data.coordinates);\n        setType(response.data.category);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      console.log(coordinates);\n      ctx.drawImage(background, 0, 0, 700, 500);\n      var img = new Image();\n      img.src = qrcode_1;\n      ctx.drawImage(\n        img,\n        coordinates.qr[1],\n        coordinates.qr[0],\n        coordinates.qr[3],\n        coordinates.qr[2]\n      );\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n      // ctx.drawImage(qr, 20, 422,50,50);\n      // ctx.fillText(\"Personffffff\", 200, 200);\n\n      if (type === \"wc\" || type === \"mc\") {\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n      }\n      if (type === \"org\") {\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n        ctx.fillText(\n          \"Event Name\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n      }\n      if (type === \"comp\") {\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n        ctx.fillText(\n          \"Event Name\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n        ctx.fillText(\n          \"1st\",\n          coordinates.position[1] + coordinates.position[2] / 2,\n          coordinates.position[0]\n        );\n      }\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    setShow(true);\n    console.log(certUrl);\n    // for (var i = 0; i < arr2.length; i++) {\n\n    //   var user = arr2[i]\n    //   console.log(\"Sending:\", user);\n    var data = {\n      subject,\n      content,\n      arr2,\n      certUrl,\n      type,\n      coordinates,\n    };\n    await axios\n      .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n      .then((res) => setEmailCount((c) => c + 1))\n      .catch((err) => console.log(err.message));\n\n    setShow(false);\n  };\n\n  const onSubmit = async (e) => {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    await axios\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\n      .then((res: any) => {\n        setArr2([]);\n        setArr2(res.data);\n        console.log(res.data);\n        const modalClose = document.getElementById(\"modalClose\");\n        modalClose.click();\n      });\n  };\n\n  function download() {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr2);\n    arr2.map((element) => {\n      console.log(element);\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n        if (type === \"wc\" || type === \"mc\") {\n          ctx.fillText(\n            element.name,\n            coordinates.name[1] + coordinates.name[2] / 2,\n            coordinates.name[0]\n          );\n        }\n\n        if (type === \"org\") {\n          ctx.fillText(\n            element.name,\n            coordinates.name[1] + coordinates.name[2] / 2,\n            coordinates.name[0]\n          );\n\n          ctx.fillText(\n            element.event,\n            coordinates.event[1] + coordinates.event[2] / 2,\n            coordinates.event[0]\n          );\n          ctx.fillText(\n            element.event_date,\n            coordinates.date[1] + coordinates.date[2] / 2,\n            coordinates.date[0]\n          );\n        }\n        if (type === \"comp\") {\n          ctx.fillText(\n            element.name,\n            coordinates.name[1] + coordinates.name[2] / 2,\n            coordinates.name[0]\n          );\n          ctx.fillText(\n            element.event,\n            coordinates.event[1] + coordinates.event[2] / 2,\n            coordinates.event[0]\n          );\n          ctx.fillText(\n            element.event_date,\n            coordinates.date[1] + coordinates.date[2] / 2,\n            coordinates.date[0]\n          );\n          ctx.fillText(\n            element.position,\n            coordinates.position[1] + coordinates.position[2] / 2,\n            coordinates.position[0]\n          );\n        }\n\n        var canvas2: any = document.getElementById(\"myCanvas\");\n        var url = canvas2.toDataURL(\"image/png\");\n\n        var link = document.createElement(\"a\");\n        link.download = `${element.name}.png`;\n        link.href = url;\n        link.click();\n      };\n    });\n    const elementCanvas = document.createElement(\"canvas\");\n    elementCanvas.classList.add(\"hide-canvas\");\n\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    canvasObj.width = 700;\n    canvasObj.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      if (type === \"wc\" || type === \"mc\") {\n        ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n      }\n    };\n  }\n  return (\n    <div className=\"container\">\n      <Navbar2 />\n      <div className=\"row\">\n        <a className=\"modal-open\" href=\"#modal\">\n          <button className=\"home-button\">Upload CSV File</button>\n        </a>\n        <button className=\"home-button\" onClick={download}>\n          Download All\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload CSV File</h3>\n            <div className=\"modal-area\">\n              <div className=\"row\">\n                <form onSubmit={onSubmit} id=\"csvForm\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"upload-input\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr2.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"form-group\">\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Subject\"\n                        required\n                        type=\"text\"\n                        onChange={(e) => setSubject(e.target.value)}\n                      ></input>\n                    </div>\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Content For Mail\"\n                        type=\"text\"\n                        onChange={(e) => setContent(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Send Mail\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"csv-inst\">\n        {(type === \"wc\" || type === \"mc\") && (\n          <div>\n            The csv uploaded should contain 2 columns only, one column with\n            heading <b>name</b> and one with heading <b>email</b>.{\" \"}\n          </div>\n        )}\n        {type === \"org\" && (\n          <div>\n            The csv uploaded should contain 4 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>.{\" \"}\n          </div>\n        )}\n        {type === \"comp\" && (\n          <div>\n            The csv uploaded should contain 5 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>,\n            <b>position</b>.{\" \"}\n          </div>\n        )}\n      </div>\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvas2\"\n          width=\"700\"\n          height=\"200\"\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["113"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["114","115"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst Verify = (props) => {\n  const current_url = window.location.href;\n  const param_array = current_url.split(\"/\");\n  const id = param_array[4];\n  console.log(id);\n  const url = \"http://localhost:5000\";\n  const data = {\n    id,\n  };\n\n  useEffect(() => {\n    axios\n      .patch(url + \"/api/auth/verifyacc\", data)\n      .then((res: any) =>\n        res.data.status === \"success\"\n          ? (console.log(res.data),\n            setMsg(\"Account Verrified Successfully!\"),\n            setTimeout(function () {\n              window.location.href = \"../login\";\n            }, 2000))\n          : setMsg(res.data.error)\n      )\n      .catch((err) => setMsg(err.message));\n  }, []);\n\n  const [msg, setMsg] = useState<string>(\"\");\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-h verify-msg\">\n          {\" \"}\n          {msg !== \"\" ? <div>{msg}</div> : null}\n        </div>\n\n        {/* <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"Enter new password\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n          </form> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":27,"nodeType":"122","messageId":"123","endLine":4,"endColumn":33},{"ruleId":"120","severity":1,"message":"124","line":7,"column":9,"nodeType":"122","messageId":"123","endLine":7,"endColumn":17},{"ruleId":"120","severity":1,"message":"125","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":9},{"ruleId":"120","severity":1,"message":"126","line":18,"column":11,"nodeType":"122","messageId":"123","endLine":18,"endColumn":18},{"ruleId":"120","severity":1,"message":"127","line":18,"column":20,"nodeType":"122","messageId":"123","endLine":18,"endColumn":35},{"ruleId":"120","severity":1,"message":"128","line":18,"column":37,"nodeType":"122","messageId":"123","endLine":18,"endColumn":53},{"ruleId":"120","severity":1,"message":"129","line":18,"column":55,"nodeType":"122","messageId":"123","endLine":18,"endColumn":69},{"ruleId":"120","severity":1,"message":"130","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"128","line":18,"column":35,"nodeType":"122","messageId":"123","endLine":18,"endColumn":51},{"ruleId":"120","severity":1,"message":"131","line":25,"column":11,"nodeType":"122","messageId":"123","endLine":25,"endColumn":14},{"ruleId":"120","severity":1,"message":"132","line":35,"column":21,"nodeType":"122","messageId":"123","endLine":35,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":266,"column":13,"nodeType":"135","endLine":266,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":51,"column":6,"nodeType":"138","endLine":51,"endColumn":8,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":132,"column":6,"nodeType":"138","endLine":132,"endColumn":13,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":190,"column":24,"nodeType":"144","messageId":"145","endLine":190,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":309,"column":13,"nodeType":"135","endLine":314,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":341,"column":13,"nodeType":"135","endLine":346,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":16,"column":18,"nodeType":"122","messageId":"123","endLine":16,"endColumn":33},{"ruleId":"120","severity":1,"message":"148","line":6,"column":11,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"149","line":31,"column":6,"nodeType":"138","endLine":31,"endColumn":8,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"@typescript-eslint/no-unused-vars","'logOut' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageLog' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'setPositionW' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["154"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Props' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [id]",{"range":"162","text":"163"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"164","text":"165"},"Update the dependencies array to be: [data]",{"range":"166","text":"167"},[1453,1455],"[id]",[3678,3685],"[certUrl, coordinates, final, type]",[812,814],"[data]"]