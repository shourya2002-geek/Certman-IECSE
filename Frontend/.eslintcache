[{"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"7","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"8","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"10","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"11","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"12","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx":"20","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx":"21","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx":"22","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"23","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"24","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"25","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"26","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"27","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"28","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"29","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"30","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Certificate\\Certificate.tsx":"31","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"32","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"33","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"34","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"35","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"36","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"37","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"38","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"39","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"40","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"41","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"42","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"43","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"44","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"45"},{"size":500,"mtime":1643927005779,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":1643927009020,"results":"48","hashOfConfig":"47"},{"size":1465,"mtime":1643927005163,"results":"49","hashOfConfig":"47"},{"size":1121,"mtime":1643927005316,"results":"50","hashOfConfig":"47"},{"size":526,"mtime":1643927005238,"results":"51","hashOfConfig":"47"},{"size":3154,"mtime":1643927006269,"results":"52","hashOfConfig":"47"},{"size":1730,"mtime":1643927008981,"results":"53","hashOfConfig":"47"},{"size":2206,"mtime":1643927006149,"results":"54","hashOfConfig":"47"},{"size":233,"mtime":1643927005601,"results":"55","hashOfConfig":"47"},{"size":4896,"mtime":1643927007034,"results":"56","hashOfConfig":"47"},{"size":810,"mtime":1643927006448,"results":"57","hashOfConfig":"47"},{"size":3391,"mtime":1643927006839,"results":"58","hashOfConfig":"47"},{"size":1064,"mtime":1643927005986,"results":"59","hashOfConfig":"47"},{"size":20454,"mtime":1643927007434,"results":"60","hashOfConfig":"47"},{"size":223,"mtime":1643927006886,"results":"61","hashOfConfig":"47"},{"size":3266,"mtime":1643927006594,"results":"62","hashOfConfig":"47"},{"size":995,"mtime":1643927006368,"results":"63","hashOfConfig":"47"},{"size":1490,"mtime":1643927008754,"results":"64","hashOfConfig":"47"},{"size":32875,"mtime":1643927008469,"results":"65","hashOfConfig":"47"},{"size":1783,"mtime":1643927005451,"results":"66","hashOfConfig":"47"},{"size":971,"mtime":1643927005508,"results":"67","hashOfConfig":"47"},{"size":1671,"mtime":1643927005703,"results":"68","hashOfConfig":"47"},{"size":517,"mtime":1643927691227,"results":"69","hashOfConfig":"70"},{"size":440,"mtime":1643927691228,"results":"71","hashOfConfig":"70"},{"size":1519,"mtime":1643927691192,"results":"72","hashOfConfig":"70"},{"size":1181,"mtime":1643927691193,"results":"73","hashOfConfig":"70"},{"size":549,"mtime":1643927691192,"results":"74","hashOfConfig":"70"},{"size":1799,"mtime":1643927691212,"results":"75","hashOfConfig":"70"},{"size":3273,"mtime":1643927691199,"results":"76","hashOfConfig":"70"},{"size":2291,"mtime":1643927691199,"results":"77","hashOfConfig":"70"},{"size":997,"mtime":1643927691197,"results":"78","hashOfConfig":"70"},{"size":244,"mtime":1643927691195,"results":"79","hashOfConfig":"70"},{"size":5054,"mtime":1643927691206,"results":"80","hashOfConfig":"70"},{"size":839,"mtime":1643927691201,"results":"81","hashOfConfig":"70"},{"size":3511,"mtime":1643927691204,"results":"82","hashOfConfig":"70"},{"size":3376,"mtime":1643927691202,"results":"83","hashOfConfig":"70"},{"size":1106,"mtime":1643927691198,"results":"84","hashOfConfig":"70"},{"size":1033,"mtime":1643927691200,"results":"85","hashOfConfig":"70"},{"size":21101,"mtime":1643927691208,"results":"86","hashOfConfig":"70"},{"size":235,"mtime":1643927691205,"results":"87","hashOfConfig":"70"},{"size":33744,"mtime":1643927691210,"results":"88","hashOfConfig":"70"},{"size":1543,"mtime":1643927691211,"results":"89","hashOfConfig":"70"},{"size":1006,"mtime":1643927691195,"results":"90","hashOfConfig":"70"},{"size":1852,"mtime":1643927691194,"results":"91","hashOfConfig":"70"},{"size":1741,"mtime":1643927691196,"results":"92","hashOfConfig":"70"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f3ftkz",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h0escr",{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts",[],["194","195"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["196","197"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\n\r\ninterface Props {}\r\n\r\nconst Verify = (props) => {\r\n  const current_url = window.location.href;\r\n  const param_array = current_url.split(\"/\");\r\n  const id = param_array[4];\r\n  console.log(id);\r\n  const url = \"http://localhost:5000\";\r\n  const data = {\r\n    id,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .patch(url + \"/api/auth/verifyacc\", data)\r\n      .then((res: any) =>\r\n        res.data.status === \"success\"\r\n          ? (console.log(res.data),\r\n            setMsg(\"Account Verrified Successfully!\"),\r\n            setTimeout(function () {\r\n              window.location.href = \"../login\";\r\n            }, 2000))\r\n          : setMsg(res.data.error)\r\n      )\r\n      .catch((err) => setMsg(err.message));\r\n  }, []);\r\n\r\n  const [msg, setMsg] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"login-h verify-msg\">\r\n          {\" \"}\r\n          {msg !== \"\" ? <div>{msg}</div> : null}\r\n        </div>\r\n\r\n        {/* <form className=\"log-form\">\r\n            <div>\r\n              <input\r\n                className=\"form-item\"\r\n                type=\"email\"\r\n                onChange={(e) => setPass(e.target.value)}\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"submit-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["198"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["199","200"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["201","202","203","204","205"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport QRCode from \"qrcode\";\nimport qrcode_1 from \"../../images/qrcode.png\";\nimport \"./singlecert.css\";\nimport sig from \"../../images/sig.png\";\nimport uploadImg from \"../../images/upload_icon.png\";\nimport downloadImg from \"../../images/download_icon.png\";\nimport mailImg from \"../../images/mail_icon.png\";\nimport mailBtn from \"../../images/mail_btn_img.png\";\nimport uploadBtn from \"../../images/uploadBtn.png\";\n\nexport default function SingleImage(props) {\n  const id = window.location.pathname.split(\"/\")[2];\n  QRCode.toDataURL(\"https://www.google.com/\")\n    .then((url) => {\n      // setLink(url);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n\n  // With async/await\n\n  const [csv, setCsv] = useState(\"\");\n  const [facSign, setFacSign] = useState(\"\");\n  const [chairSign, setChairSign] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr2, setArr2] = useState<any>([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState<any>([]);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [final, setFinal] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [faUrl, setFaUrl] = useState<any>();\n  const [cpUrl, setCpUrl] = useState<any>();\n\n  const canvasRef = useRef(null);\n\n  function onCsvChange(e) {\n    console.log(e.target.files[0]);\n    setCsv(e.target.files[0]);\n  }\n  function onChairChange(e) {\n    console.log(e.target.files[0]);\n    setChairSign(e.target.files[0]);\n  }\n  function onFacChange(e) {\n    console.log(e.target.files[0]);\n    setFacSign(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((response: any) => {\n        var certificate = response.data.filter((cert) => cert._id == id);\n        certificate = certificate[0];\n        console.log(certificate);\n        setCertUrl(certificate.certUrl);\n        setCoordinates(certificate.coordinates);\n        setType(certificate.category);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    // background.setAttribute(\"crossOrigin\", \"anonymous\");\n    console.log(certUrl);\n    background.src = certUrl;\n\n    background.onload = function () {\n      console.log(coordinates);\n      ctx.drawImage(background, 0, 0, 700, 500);\n      var img = new Image();\n      img.src = qrcode_1;\n      img.onload = function () {\n        ctx.drawImage(\n          img,\n          coordinates.qr[1],\n          coordinates.qr[0],\n          coordinates.qr[3],\n          coordinates.qr[2]\n        );\n      };\n\n      var SIG2 = new Image();\n      SIG2.src = sig;\n      SIG2.onload = function () {\n        ctx.drawImage(\n          SIG2,\n          coordinates.faSig[1],\n          coordinates.faSig[0],\n          coordinates.faSig[3],\n          coordinates.faSig[2]\n        );\n      };\n\n      var SIG1 = new Image();\n\n      SIG1.src = sig;\n      SIG1.onload = function () {\n        ctx.drawImage(\n          SIG1,\n          coordinates.cpSig[1],\n          coordinates.cpSig[0],\n          coordinates.cpSig[3],\n          coordinates.cpSig[2]\n        );\n      };\n\n      ctx.font = \"20px Arial \";\n\n      ctx.fillStyle = coordinates.color;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      // ctx.drawImage(qr, 20, 422,50,50);\n      // ctx.fillText(\"Personffffff\", 200, 200);\n\n      if (type === \"wc\" || type === \"mc\") {\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n      }\n      if (type === \"org\") {\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n        ctx.fillText(\n          \"in Event Name held on\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n      }\n      if (type === \"comp\") {\n        ctx.textAlign = \"center\";\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"Event Name\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n        ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"1st\",\n          coordinates.position[1] + coordinates.position[2] / 2,\n          coordinates.position[0]\n        );\n      }\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    setShow(true);\n    // for (var i = 0; i < arr2.length; i++) {\n\n    //   var user = arr2[i]\n    //   console.log(\"Sending:\", user);\n    var data = {\n      subject,\n      content,\n      arr2,\n      certUrl,\n      type,\n      coordinates,\n      faUrl,\n      cpUrl,\n    };\n    await axios\n      .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n      .then((res) => {\n        setEmailCount((c) => c + 1);\n        console.log(res);\n      })\n      .catch((err) => console.log(err.message));\n\n    setShow(false);\n  };\n\n  let one = \"http://localhost:5000/api/csv/csv-upload\";\n  let two = \"http://localhost:5000/api/csv/upload-facsign\";\n  let three = \"http://localhost:5000/api/csv/upload-chairsign\";\n\n  const onSubmit = async (e) => {\n    if (csv === \"\" || facSign === \"\" || chairSign === \"\") {\n      alert(\"Please upload everything!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    const requestOne = axios.post(one, formData, {});\n\n    formData.delete(\"csv\");\n    formData.append(\"facSign\", facSign);\n    const requestTwo = axios.post(two, formData, {});\n    formData.delete(\"facSign\");\n    formData.append(\"chairSign\", chairSign);\n    const requestThree = axios.post(three, formData, {});\n\n    axios\n      .all([requestOne, requestTwo, requestThree])\n      .then(\n        axios.spread((...responses) => {\n          const responseOne = responses[0];\n          const responseTwo = responses[1];\n          const responseThree = responses[2];\n\n          setArr2(responseOne.data);\n          console.log(responseOne.data);\n          console.log(responseTwo.data);\n          console.log(responseThree.data);\n\n          setCpUrl(responseTwo.data);\n          setFaUrl(responseThree.data);\n        })\n      )\n      .catch((errors) => {\n        // react on errors.\n      });\n\n    const modalClose = document.getElementById(\"modalClose\");\n    modalClose.click();\n  };\n\n  function download() {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr2);\n    arr2.map((element) => {\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n      background.onload = async function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = coordinates.color;\n        var img = new Image();\n        img.src = qrcode_1;\n        img.crossOrigin = \"anonymous\";\n        img.onload = function () {\n          ctx.drawImage(\n            img,\n            coordinates.qr[1],\n            coordinates.qr[0],\n            coordinates.qr[3],\n            coordinates.qr[2]\n          );\n          var SIG2 = new Image();\n          SIG2.src = faUrl;\n          SIG2.crossOrigin = \"anonymous\";\n          SIG2.onload = function () {\n            ctx.drawImage(\n              SIG2,\n              coordinates.faSig[1],\n              coordinates.faSig[0],\n              coordinates.faSig[3],\n              coordinates.faSig[2]\n            );\n            var SIG1 = new Image();\n            SIG1.src = cpUrl;\n            SIG1.crossOrigin = \"anonymous\";\n            SIG1.onload = function () {\n              ctx.drawImage(\n                SIG1,\n                coordinates.cpSig[1],\n                coordinates.cpSig[0],\n                coordinates.cpSig[3],\n                coordinates.cpSig[2]\n              );\n\n              if (type === \"wc\" || type === \"mc\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n              }\n\n              if (type === \"org\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n                ctx.fillText(\n                  element.event,\n                  coordinates.event[1] + coordinates.event[2] / 2,\n                  coordinates.event[0]\n                );\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event_date,\n                  coordinates.date[1] + coordinates.date[2] / 2,\n                  coordinates.date[0]\n                );\n              }\n              if (type === \"comp\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event,\n                  coordinates.event[1] + coordinates.event[2] / 2,\n                  coordinates.event[0]\n                );\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event_date,\n                  coordinates.date[1] + coordinates.date[2] / 2,\n                  coordinates.date[0]\n                );\n                ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.position,\n                  coordinates.position[1] + coordinates.position[2] / 2,\n                  coordinates.position[0]\n                );\n              }\n\n              var canvas2: any = document.getElementById(\"myCanvas\");\n              var url = canvas2.toDataURL(\"image/png\");\n\n              var link = document.createElement(\"a\");\n              link.download = `${element.name}.png`;\n              link.href = url;\n              link.click();\n            };\n          };\n        };\n      };\n    });\n\n    // const elementCanvas = document.createElement(\"canvas\");\n    // elementCanvas.classList.add(\"hide-canvas\");\n\n    // elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    // const canvasObj = canvasRef.current;\n    // const ctx = canvasObj.getContext(\"2d\");\n    // canvasObj.width = 700;\n    // canvasObj.height = 500;\n\n    // var background = new Image();\n    // // background.setAttribute(\"crossOrigin\", \"anonymous\");\n    // background.src = certUrl;\n\n    // background.onload = function () {\n    //   ctx.drawImage(background, 0, 0, 700, 500);\n\n    //   ctx.font = \"20px Arial\";\n    //   ctx.textAlign = \"left\";\n    //   ctx.textBaseline = \"top\";\n    //   ctx.fillStyle = coordinates.color;\n\n    //   if (type === \"wc\" || type === \"mc\") {\n    //     ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n    //     ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n    //   }\n    // };\n  }\n\n  function handle_upload(id) {\n    var input = document.getElementById(id);\n    input.click();\n  }\n\n  return (\n    <div className=\"container container_2\">\n      <Navbar2 />\n      <div className=\"row\">\n        {/* <a className=\"modal-open\" href=\"#modal\">\n          <button className=\"home-button\">Upload CSV File</button>\n        </a> */}\n        {/* <button className=\"home-button\" onClick={download}>\n          Download All\n        </button> */}\n        {/* <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a> */}\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content c-2\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload</h3>\n            <div className=\"modal-area area2\">\n              <div className=\"row\">\n                <form onSubmit={() => {}} id=\"csvForm\">\n                  <div className=\"csv-file\">\n                    <p className=\"h\">1.CSV File</p>\n                    <p>\n                      The CSV file should contain 2 columns only, one column\n                      with heading name and one with heading email.\n                    </p>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"csv\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onCsvChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"csv\")}\n                      >\n                        {csv != \"\" ? \"Uploaded\" : \"Choose CSV file\"}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"signatures\">\n                    <p className=\"h1\">2.Signatures</p>\n                    <p>\n                      The images of signatures should have a transparent\n                      background.\n                    </p>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"chairperson\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onChairChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"chairperson\")}\n                      >\n                        {chairSign != \"\"\n                          ? \"Uploaded\"\n                          : \"Choose signature for chairperson\"}\n                      </button>\n                    </div>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"faculty-advisor\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onFacChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"faculty-advisor\")}\n                      >\n                        {facSign != \"\"\n                          ? \"Uploaded\"\n                          : \"Choose signature for faculty advisor\"}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"upload-btn\"\n                      onClick={onSubmit}\n                      type=\"submit\"\n                    >\n                      <img className=\"upload-btn-img\" src={uploadBtn} />\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content c-2\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr2.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"mail-1\">\n                    <input\n                      type=\"text\"\n                      className=\"mail-inp\"\n                      placeholder=\"Subject\"\n                      onChange={(e) => setSubject(e.target.value)}\n                    />\n                    <input\n                      type=\"text\"\n                      className=\"mail-inp\"\n                      placeholder=\"Content\"\n                      onChange={(e) => setContent(e.target.value)}\n                    />\n                  </div>\n                  <button className=\"mail-btn\" type=\"submit\">\n                    <img className=\"mail-btn-img\" src={mailBtn} />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"csv-inst\">\n        {(type === \"wc\" || type === \"mc\") && (\n          <div>\n            The csv uploaded should contain 2 columns only, one column with\n            heading <b>name</b> and one with heading <b>email</b>.{\" \"}\n          </div>\n        )}\n        {type === \"org\" && (\n          <div>\n            The csv uploaded should contain 4 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>.{\" \"}\n          </div>\n        )}\n        {type === \"comp\" && (\n          <div>\n            The csv uploaded should contain 5 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>,\n            <b>position</b>.{\" \"}\n          </div>\n        )}\n      </div> */}\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvs\"\n          width=\"700\"\n          height=\"500\"\n        ></canvas>\n      </div>\n      <div className=\"row btn-c\">\n        <a className=\"modal-open\" href=\"#modal\">\n          <button className=\"row-btn\">\n            <img className=\"row-img\" src={uploadImg} />\n          </button>\n        </a>\n        <button className=\"row-btn\" onClick={download}>\n          <img className=\"row-img\" src={downloadImg} />\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"row-btn\">\n            <img className=\"row-img\" src={mailImg} />\n          </button>\n        </a>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["236","237","238"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["239"],"import { useState } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport { useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport qr from \"../../images/qrcode.png\";\nimport sig from \"../../images/sig.png\";\n\nimport up from \"../../images/upload-btn.png\";\n\nexport default function Upload() {\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [qrTop, setqrTop] = useState<number>(0);\n  const [qrLeft, setqrLeft] = useState<number>(0);\n  const [qrW, setqrW] = useState<number>(0);\n  const [qrH, setqrH] = useState<number>(0);\n\n  const [sig1Top, setsig1Top] = useState<number>(0);\n  const [sig1Left, setsig1Left] = useState<number>(0);\n  const [sig1W, setsig1W] = useState<number>(0);\n  const [sig1H, setsig1H] = useState<number>(0);\n\n  const [sig2Top, setsig2Top] = useState<number>(0);\n  const [sig2Left, setsig2Left] = useState<number>(0);\n  const [sig2W, setsig2W] = useState<number>(0);\n  const [sig2H, setsig2H] = useState<number>(0);\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n  const [nameW, setNameW] = useState<number>(0);\n  const [nameFont, setNameFont] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n  const [eventW, setEventW] = useState<number>(0);\n  const [eventFont, setEventFont] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n  const [dateW, setDateW] = useState<number>(0);\n  const [dateFont, setDateFont] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n  const [positionW, setPositionW] = useState<number>(0);\n  const [positionFont, setPositionFont] = useState<number>(0);\n\n  const [alert, setAlert] = useState<boolean>(false);\n  const [c, setC] = useState();\n\n  // const[color,setColor]=useState();\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionqrTop(e) {\n    setqrTop(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionqrLeft(e) {\n    setqrLeft(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrWidth(e) {\n    setqrW(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrHeight(e) {\n    setqrH(parseInt(e.target.value));\n\n    const q = document.getElementById(\"qrc\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig1Top(e) {\n    setsig1Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig1Left(e) {\n    setsig1Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Width(e) {\n    setsig1W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Height(e) {\n    setsig1H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig1\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig2Top(e) {\n    setsig2Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig2Left(e) {\n    setsig2Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Width(e) {\n    setsig2W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Height(e) {\n    setsig2H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig2\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionNameTop(e) {\n    setNameTop(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.top = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft(e) {\n    setNameLeft(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameW(e) {\n    setNameW(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.width = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameFont(e) {\n    setNameFont(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.fontSize = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop(e) {\n    setEventTop(parseInt(e.target.value));\n    const event = document.getElementById(\"event\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function positionEventLeft(e) {\n    setEventLeft(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.left = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function EventW(e) {\n    setEventW(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.width = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function EventFont(e) {\n    setEventFont(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.fontSize = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function positionEventDateTop(e) {\n    setDateTop(parseInt(e.target.value));\n    const event = document.getElementById(\"e-date\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft(e) {\n    setDateLeft(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateW(e) {\n    setDateW(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.width = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateFont(e) {\n    setDateFont(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.fontSize = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n\n  function positionPosTop(e) {\n    setPositionTop(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.top = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft(e) {\n    setPositionLeft(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.left = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionW(e) {\n    setPositionW(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.width = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionFont(e) {\n    setPositionFont(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.fontSize = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n\n  const coordinates = {\n    name: [nameTop, nameLeft, nameW, nameFont],\n    event: [eventTop, eventLeft, eventW, eventFont],\n    date: [dateTop, dateLeft, dateW, dateFont],\n    position: [positionTop, positionLeft, positionW, positionFont],\n    qr: [qrTop, qrLeft, qrH, qrW],\n    cpSig: [sig1Top, sig1Left, sig1H, sig1W],\n    faSig: [sig2Top, sig2Left, sig2H, sig2W],\n    color: c,\n  };\n  function setColor(value) {\n    setC(value);\n    var name = document.getElementById(\"name\");\n    var event = document.getElementById(\"event\");\n    var eDate = document.getElementById(\"e-date\");\n    var position = document.getElementById(\"position\");\n\n    name.style.color = value;\n    event.style.color = value;\n    eDate.style.color = value;\n    position.style.color = value;\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            // window.alert(\"Certificate Uploaded Successfully\");\n            setAlert(true);\n            setTimeout(function () {\n              window.location.reload();\n            }, 2000);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n\n  console.log(userId);\n  return (\n    <div\n      className={\n        type === \"comp\"\n          ? \"container cont3\"\n          : type === \"org\"\n          ? \"container cont2\"\n          : \"container cont1\"\n      }\n    >\n      {alert && (\n        <div className=\"alert\">\n          Congratulations! Certifcate has been uploaded successfully!!\n        </div>\n      )}\n\n      <Navbar2 />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig1\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig2\"></img>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            <img src={up} />\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n      </div>\n\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div className=\"up-box\">\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option id=\"op\" value=\"\">\n                Purpose of Generating Certificate\n              </option>\n              <option id=\"op\" value=\"wc\">\n                WC Completion\n              </option>\n              <option id=\"op\" value=\"mc\">\n                MC Completion\n              </option>\n              <option id=\"op\" value=\"org\">\n                Organizing a Competition\n              </option>\n              <option id=\"op\" value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n\n            {type && (\n              <div className=\"type-container\">\n                <div>\n                  <div className=\"enter\">ENTER THE SPECIFICATIONS:</div>\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\" id=\"c-label\">\n                        Font Colour:\n                      </label>\n                      <input\n                        type={\"color\"}\n                        id=\"color\"\n                        onChange={(e) => setColor(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">1. Name:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameLeft(e)}\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameW(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Font:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameFont(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">2. QRCODE:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrLeft(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrWidth(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrHeight(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        3. Faculty Advisor Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        4. Chairperson Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {type === \"org\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}{\" \"}\n                  {type === \"comp\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>{\" \"}\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">7. Positon Won:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"row input-row\">\n                    <div className=\"col-lg-6\"></div>\n                    <div className=\"col-lg-6\">\n                      <button type=\"submit\" className=\"submit-up\">\n                        Upload\n                      </button>\n                    </div>\n                  </div>\n                  {/* <div className={type === \"comp\" ? \"upload-info info3\" : type===\"org\" ? \"upload-info info2\" : \"upload-info\"}> */}\n                  <div className=\"upload-info\">\n                    <span style={{ fontWeight: 800, marginRight: \"10px\" }}>\n                      Note:\n                    </span>\n                    The dimmensions of the certificate are 700px x 500px, please\n                    enter all coordinates in px keeping this height and width in\n                    mind.\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["240","241"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Certificate\\Certificate.tsx",["242","243","244"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Certificate.css\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function Certificate() {\r\n  const [name, setName] = useState(\"\");\r\n  useEffect(() => {\r\n    var a = window.location.href.split(\"/\")[4];\r\n    const d: any = document.querySelector(\".img-div\");\r\n    var s = \"http://localhost:5000/emailed-cert-uploads/\" + a;\r\n    d.style.backgroundImage = \"url(\" + s + \")\";\r\n    var full = a.split(\"_\")[0];\r\n    var split = full.split(\"%20\");\r\n    console.log(split);\r\n    if (split.length > 1) {\r\n      setName(split[0] + \" \" + split[1]);\r\n    } else {\r\n      setName(split[0]);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <Navbar2 login={false} signup={false} /> */}\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"name-cert\">Congratulations {name}!</div>\r\n        <div className=\"img-div\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["245"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cnfrmpass, setcnfrmPassword] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign }: any = useAuthState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const [successMessage, setSuccessMsg] = useState(\"\");\r\n  const url = \"http://localhost:5000\";\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"in sugnup\");\r\n    try {\r\n      let res = await signUpUser(dispatch, {\r\n        name,\r\n        email,\r\n        password,\r\n        role: \"MC\",\r\n      });\r\n      if (res === \"success\") {\r\n        errorMessageSign = \"\";\r\n        console.log(\"res is success time for another request\");\r\n        console.log(email);\r\n        setSuccessMsg(\"Signed up Successfully\");\r\n        const data = {\r\n          email,\r\n        };\r\n        console.log(\"Sending verify request\");\r\n        axios\r\n          .post(url + \"/api/auth/verify\", data)\r\n          .then((res: any) =>\r\n            res.data.status === \"success\"\r\n              ? setSuccessMsg(\"Please check your mail to verify your account.\")\r\n              : console.log(res.data)\r\n          )\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n  function toggleVisible2(e) {\r\n    e.preventDefault();\r\n    setVisible2(!visible2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={false} signup={true} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageSign ? (\r\n                <p className=\"error\">{errorMessageSign}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-2\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible2 ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm Password\"\r\n                  id=\"password\"\r\n                  value={cnfrmpass}\r\n                  onChange={(e) => setcnfrmPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-3\"\r\n                  onClick={(e) => toggleVisible2(e)}\r\n                >\r\n                  {!visible2 ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              {cnfrmpass !== password && (\r\n                <div className=\"match\">Passwords do not match</div>\r\n              )}\r\n              <button\r\n                className=\"submit-btn\"\r\n                onClick={handleSignUp}\r\n                disabled={loading || cnfrmpass !== password}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["246","247"],"import React from \"react\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./Home.css\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function Home() {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"home-box\">\r\n          <div className=\"c-heading\">CERTMAN</div>\r\n          <div className=\"c-byline\">An in-house certificate generator</div>\r\n          {!userDetails.user && (\r\n            <div className=\"c-more\">\r\n              Log in to experience a wide range of features.\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/*\r\n         */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["248","249","250","251","252"],"import React, { useState } from \"react\";\r\nimport \"./Navbar2.css\";\r\nimport logo2 from \"../../images/logo2.png\";\r\nimport s from \"../../images/S.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport user from \"../../images/logo22.png\";\r\n\r\nexport default function Navbar2(props) {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    window.location.href = \"/home\";\r\n  }; //relative to domain  };\r\n  const { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  return (\r\n    <div className=\"nav-c\">\r\n      <img className=\"logo2\" src={logo2} alt=\"logo\"></img>\r\n      <div className=\"b\">\r\n        <Link className=\"certman\" to={\"/home\"}>\r\n          CERTMAN\r\n        </Link>\r\n      </div>\r\n\r\n      {/* {props.login || props.signup ? (\r\n        <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n      ) : userDetails.user ? (\r\n        <div className=\"b2\">\r\n          <img className=\"s\" src={s} alt=\"logo\"></img>\r\n          <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <div className=\"s-c\">\r\n            {\" \"}\r\n            <Link className=\"certman2\" to={\"/dashboard\"}>\r\n              CERTMAN\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n           <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <img className=\"logo2\" alt=\"logo2\" src={logo2}></img>\r\n        </div>\r\n      )} */}\r\n\r\n      <div className=\"nav-right\">\r\n        {userDetails.user ? (\r\n          <div className=\"right-container\">\r\n            <button\r\n              className=\"icon-btn\"\r\n              onClick={() => {\r\n                setToggle(!toggle);\r\n              }}\r\n            >\r\n              <img alt=\"icon\" src={user} className=\"user-icon\"></img>\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {\" \"}\r\n            <Link\r\n              to={\"/login\"}\r\n              className={props.login ? \"nav-link nav-active\" : \"nav-link\"}\r\n            >\r\n              Login\r\n            </Link>\r\n            <Link\r\n              to={\"/signup\"}\r\n              className={props.signup ? \"nav-active-2 nav-link\" : \"nav-link\"}\r\n            >\r\n              Sign up\r\n            </Link>{\" \"}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {toggle && (\r\n        <div className=\"toggle-div\">\r\n          <div>\r\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>\r\n              Your Uploads\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/upload\"} className=\"toggle-item\">\r\n              Upload a new Template{\" \"}\r\n            </Link>\r\n          </div>\r\n          {userDetails.user.role === \"Board\" && (\r\n            <div>\r\n              <Link className=\"toggle-item\" to={\"/generate\"}>\r\n                Generate Certificates{\" \"}\r\n              </Link>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <button className=\"logout-btn\" onClick={() => handleLogout()}>\r\n              <Link className=\"toggle-item\"> Logout</Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["253","254","255"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\n// import styles from \"./login.module.css\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./login.css\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  // const [errorMessage2,setEmsg]=useState(false)\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await loginUser(dispatch, { email, password });\r\n      let user = localStorage.getItem(\"currentUser\")\r\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n        : \"\";\r\n      if (user) {\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={true} signup={false} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageLog ? (\r\n                <p className=\"error\">{errorMessageLog}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"submit-btn\"\r\n                type=\"submit\"\r\n                onClick={handleLogin}\r\n                disabled={loading}\r\n              >\r\n                Login\r\n              </button>\r\n              <div className=\"forgot\">\r\n                <Link to={\"/forgot\"} className=\"f-link\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport QRCode from \"qrcode\";\r\nimport qrcode_1 from \"../../images/qrcode.png\";\r\nimport \"./singlecert.css\";\r\nimport sig from \"../../images/sig.png\";\r\nimport uploadImg from \"../../images/upload_icon.png\";\r\nimport downloadImg from \"../../images/download_icon.png\";\r\nimport mailImg from \"../../images/mail_icon.png\";\r\nimport mailBtn from \"../../images/mail_btn_img.png\";\r\nimport uploadBtn from \"../../images/uploadBtn.png\";\r\n\r\nexport default function SingleImage(props) {\r\n  const id = window.location.pathname.split(\"/\")[2];\r\n  QRCode.toDataURL(\"https://www.google.com/\")\r\n    .then((url) => {\r\n      // setLink(url);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n\r\n  // With async/await\r\n\r\n  const [csv, setCsv] = useState(\"\");\r\n  const [facSign, setFacSign] = useState(\"\");\r\n  const [chairSign, setChairSign] = useState(\"\");\r\n  const [certUrl, setCertUrl] = useState(\"\");\r\n  const [arr2, setArr2] = useState<any>([]);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [coordinates, setCoordinates] = useState<any>([]);\r\n  const [show, setShow] = useState(false);\r\n  const [emailCount, setEmailCount] = useState(0);\r\n  const [final, setFinal] = useState(false);\r\n  const [type, setType] = useState(\"\");\r\n  const [faUrl, setFaUrl] = useState<any>();\r\n  const [cpUrl, setCpUrl] = useState<any>();\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  function onCsvChange(e) {\r\n    console.log(e.target.files[0]);\r\n    setCsv(e.target.files[0]);\r\n  }\r\n  function onChairChange(e) {\r\n    console.log(e.target.files[0]);\r\n    setChairSign(e.target.files[0]);\r\n  }\r\n  function onFacChange(e) {\r\n    console.log(e.target.files[0]);\r\n    setFacSign(e.target.files[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((response: any) => {\r\n        var certificate = response.data.filter((cert) => cert._id == id);\r\n        certificate = certificate[0];\r\n        console.log(certificate);\r\n        setCertUrl(certificate.certUrl);\r\n        setCoordinates(certificate.coordinates);\r\n        setType(certificate.category);\r\n        setFinal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = 700;\r\n    canvas.height = 500;\r\n\r\n    var background = new Image();\r\n    // background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    console.log(certUrl);\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      console.log(coordinates);\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n      var img = new Image();\r\n      img.src = qrcode_1;\r\n      img.onload = function () {\r\n        ctx.drawImage(\r\n          img,\r\n          coordinates.qr[1],\r\n          coordinates.qr[0],\r\n          coordinates.qr[3],\r\n          coordinates.qr[2]\r\n        );\r\n      };\r\n\r\n      var SIG2 = new Image();\r\n      SIG2.src = sig;\r\n      SIG2.onload = function () {\r\n        ctx.drawImage(\r\n          SIG2,\r\n          coordinates.faSig[1],\r\n          coordinates.faSig[0],\r\n          coordinates.faSig[3],\r\n          coordinates.faSig[2]\r\n        );\r\n      };\r\n\r\n      var SIG1 = new Image();\r\n\r\n      SIG1.src = sig;\r\n      SIG1.onload = function () {\r\n        ctx.drawImage(\r\n          SIG1,\r\n          coordinates.cpSig[1],\r\n          coordinates.cpSig[0],\r\n          coordinates.cpSig[3],\r\n          coordinates.cpSig[2]\r\n        );\r\n      };\r\n\r\n      ctx.font = \"20px Arial \";\r\n\r\n      ctx.fillStyle = coordinates.color;\r\n      ctx.textAlign = \"center\";\r\n      ctx.textBaseline = \"top\";\r\n      // ctx.drawImage(qr, 20, 422,50,50);\r\n      // ctx.fillText(\"Personffffff\", 200, 200);\r\n\r\n      if (type === \"wc\" || type === \"mc\") {\r\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(\r\n          \"Person Name\",\r\n          coordinates.name[1] + coordinates.name[2] / 2,\r\n          coordinates.name[0]\r\n        );\r\n      }\r\n      if (type === \"org\") {\r\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(\r\n          \"Person Name\",\r\n          coordinates.name[1] + coordinates.name[2] / 2,\r\n          coordinates.name[0]\r\n        );\r\n\r\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\r\n        ctx.fillText(\r\n          \"in Event Name held on\",\r\n          coordinates.event[1] + coordinates.event[2] / 2,\r\n          coordinates.event[0]\r\n        );\r\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.fillText(\r\n          \"01/01/2021\",\r\n          coordinates.date[1] + coordinates.date[2] / 2,\r\n          coordinates.date[0]\r\n        );\r\n      }\r\n      if (type === \"comp\") {\r\n        ctx.textAlign = \"center\";\r\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.fillText(\r\n          \"Person Name\",\r\n          coordinates.name[1] + coordinates.name[2] / 2,\r\n          coordinates.name[0]\r\n        );\r\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.fillText(\r\n          \"Event Name\",\r\n          coordinates.event[1] + coordinates.event[2] / 2,\r\n          coordinates.event[0]\r\n        );\r\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.fillText(\r\n          \"01/01/2021\",\r\n          coordinates.date[1] + coordinates.date[2] / 2,\r\n          coordinates.date[0]\r\n        );\r\n        ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\r\n\r\n        ctx.fillText(\r\n          \"1st\",\r\n          coordinates.position[1] + coordinates.position[2] / 2,\r\n          coordinates.position[0]\r\n        );\r\n      }\r\n    };\r\n  }, [final]);\r\n\r\n  const emailHandler = async (e) => {\r\n    if (csv === \"\") {\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n\r\n    setShow(true);\r\n    // for (var i = 0; i < arr2.length; i++) {\r\n\r\n    //   var user = arr2[i]\r\n    //   console.log(\"Sending:\", user);\r\n    var data = {\r\n      subject,\r\n      content,\r\n      arr2,\r\n      certUrl,\r\n      type,\r\n      coordinates,\r\n      faUrl,\r\n      cpUrl,\r\n    };\r\n    await axios\r\n      .post(\"http://localhost:5000/api/sendmail/cert/\", data)\r\n      .then((res) => {\r\n        setEmailCount((c) => c + 1);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    setShow(false);\r\n  };\r\n\r\n  let one = \"http://localhost:5000/api/csv/csv-upload\";\r\n  let two = \"http://localhost:5000/api/csv/upload-facsign\";\r\n  let three = \"http://localhost:5000/api/csv/upload-chairsign\";\r\n\r\n  const onSubmit = async (e) => {\r\n    if (csv === \"\" || facSign === \"\" || chairSign === \"\") {\r\n      alert(\"Please upload everything!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"csv\", csv);\r\n\r\n    const requestOne = axios.post(one, formData, {});\r\n\r\n    formData.delete(\"csv\");\r\n    formData.append(\"facSign\", facSign);\r\n    const requestTwo = axios.post(two, formData, {});\r\n    formData.delete(\"facSign\");\r\n    formData.append(\"chairSign\", chairSign);\r\n    const requestThree = axios.post(three, formData, {});\r\n\r\n    axios\r\n      .all([requestOne, requestTwo, requestThree])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          const responseOne = responses[0];\r\n          const responseTwo = responses[1];\r\n          const responseThree = responses[2];\r\n\r\n          setArr2(responseOne.data);\r\n          console.log(responseOne.data);\r\n          console.log(responseTwo.data);\r\n          console.log(responseThree.data);\r\n\r\n          setCpUrl(responseTwo.data);\r\n          setFaUrl(responseThree.data);\r\n        })\r\n      )\r\n      .catch((errors) => {\r\n        // react on errors.\r\n      });\r\n\r\n    const modalClose = document.getElementById(\"modalClose\");\r\n    modalClose.click();\r\n  };\r\n\r\n  function download() {\r\n    if (csv === \"\") {\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    console.log(arr2);\r\n    arr2.map((element) => {\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", element.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n      background.onload = async function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = coordinates.color;\r\n        var img = new Image();\r\n        img.src = qrcode_1;\r\n        img.crossOrigin = \"anonymous\";\r\n        img.onload = function () {\r\n          ctx.drawImage(\r\n            img,\r\n            coordinates.qr[1],\r\n            coordinates.qr[0],\r\n            coordinates.qr[3],\r\n            coordinates.qr[2]\r\n          );\r\n          var SIG2 = new Image();\r\n          SIG2.src = faUrl;\r\n          SIG2.crossOrigin = \"anonymous\";\r\n          SIG2.onload = function () {\r\n            ctx.drawImage(\r\n              SIG2,\r\n              coordinates.faSig[1],\r\n              coordinates.faSig[0],\r\n              coordinates.faSig[3],\r\n              coordinates.faSig[2]\r\n            );\r\n            var SIG1 = new Image();\r\n            SIG1.src = cpUrl;\r\n            SIG1.crossOrigin = \"anonymous\";\r\n            SIG1.onload = function () {\r\n              ctx.drawImage(\r\n                SIG1,\r\n                coordinates.cpSig[1],\r\n                coordinates.cpSig[0],\r\n                coordinates.cpSig[3],\r\n                coordinates.cpSig[2]\r\n              );\r\n\r\n              if (type === \"wc\" || type === \"mc\") {\r\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.name,\r\n                  coordinates.name[1] + coordinates.name[2] / 2,\r\n                  coordinates.name[0]\r\n                );\r\n              }\r\n\r\n              if (type === \"org\") {\r\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.name,\r\n                  coordinates.name[1] + coordinates.name[2] / 2,\r\n                  coordinates.name[0]\r\n                );\r\n\r\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\r\n                ctx.fillText(\r\n                  element.event,\r\n                  coordinates.event[1] + coordinates.event[2] / 2,\r\n                  coordinates.event[0]\r\n                );\r\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.event_date,\r\n                  coordinates.date[1] + coordinates.date[2] / 2,\r\n                  coordinates.date[0]\r\n                );\r\n              }\r\n              if (type === \"comp\") {\r\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.name,\r\n                  coordinates.name[1] + coordinates.name[2] / 2,\r\n                  coordinates.name[0]\r\n                );\r\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.event,\r\n                  coordinates.event[1] + coordinates.event[2] / 2,\r\n                  coordinates.event[0]\r\n                );\r\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.event_date,\r\n                  coordinates.date[1] + coordinates.date[2] / 2,\r\n                  coordinates.date[0]\r\n                );\r\n                ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\r\n\r\n                ctx.fillText(\r\n                  element.position,\r\n                  coordinates.position[1] + coordinates.position[2] / 2,\r\n                  coordinates.position[0]\r\n                );\r\n              }\r\n\r\n              var canvas2: any = document.getElementById(\"myCanvas\");\r\n              var url = canvas2.toDataURL(\"image/png\");\r\n\r\n              var link = document.createElement(\"a\");\r\n              link.download = `${element.name}.png`;\r\n              link.href = url;\r\n              link.click();\r\n            };\r\n          };\r\n        };\r\n      };\r\n    });\r\n\r\n    // const elementCanvas = document.createElement(\"canvas\");\r\n    // elementCanvas.classList.add(\"hide-canvas\");\r\n\r\n    // elementCanvas.setAttribute(\"ref\", \"canvasRef\");\r\n    // const canvasObj = canvasRef.current;\r\n    // const ctx = canvasObj.getContext(\"2d\");\r\n    // canvasObj.width = 700;\r\n    // canvasObj.height = 500;\r\n\r\n    // var background = new Image();\r\n    // // background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    // background.src = certUrl;\r\n\r\n    // background.onload = function () {\r\n    //   ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n    //   ctx.font = \"20px Arial\";\r\n    //   ctx.textAlign = \"left\";\r\n    //   ctx.textBaseline = \"top\";\r\n    //   ctx.fillStyle = coordinates.color;\r\n\r\n    //   if (type === \"wc\" || type === \"mc\") {\r\n    //     ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\r\n    //     ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  function handle_upload(id) {\r\n    var input = document.getElementById(id);\r\n    input.click();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container_2\">\r\n      <Navbar2 />\r\n      <div className=\"row\">\r\n        {/* <a className=\"modal-open\" href=\"#modal\">\r\n          <button className=\"home-button\">Upload CSV File</button>\r\n        </a> */}\r\n        {/* <button className=\"home-button\" onClick={download}>\r\n          Download All\r\n        </button> */}\r\n        {/* <a className=\"modal-open\" href=\"#modal2\">\r\n          <button className=\"home-button\">Mail Certifcates</button>\r\n        </a> */}\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div className=\"modal-content c-2\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Upload</h3>\r\n            <div className=\"modal-area area2\">\r\n              <div className=\"row\">\r\n                <form onSubmit={() => {}} id=\"csvForm\">\r\n                  <div className=\"csv-file\">\r\n                    <p className=\"h\">1.CSV File</p>\r\n                    <p>\r\n                      The CSV file should contain 2 columns only, one column\r\n                      with heading name and one with heading email.\r\n                    </p>\r\n                    <div className=\"form-group\">\r\n                      {\r\n                        <input\r\n                          id=\"csv\"\r\n                          className=\"upload-input\"\r\n                          type=\"file\"\r\n                          onChange={onCsvChange}\r\n                        />\r\n                      }\r\n                      <button\r\n                        className=\"upload_button\"\r\n                        onClick={() => handle_upload(\"csv\")}\r\n                      >\r\n                        {csv != \"\" ? \"Uploaded\" : \"Choose CSV file\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"signatures\">\r\n                    <p className=\"h1\">2.Signatures</p>\r\n                    <p>\r\n                      The images of signatures should have a transparent\r\n                      background.\r\n                    </p>\r\n                    <div className=\"form-group\">\r\n                      {\r\n                        <input\r\n                          id=\"chairperson\"\r\n                          className=\"upload-input\"\r\n                          type=\"file\"\r\n                          onChange={onChairChange}\r\n                        />\r\n                      }\r\n                      <button\r\n                        className=\"upload_button\"\r\n                        onClick={() => handle_upload(\"chairperson\")}\r\n                      >\r\n                        {chairSign != \"\"\r\n                          ? \"Uploaded\"\r\n                          : \"Choose signature for chairperson\"}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      {\r\n                        <input\r\n                          id=\"faculty-advisor\"\r\n                          className=\"upload-input\"\r\n                          type=\"file\"\r\n                          onChange={onFacChange}\r\n                        />\r\n                      }\r\n                      <button\r\n                        className=\"upload_button\"\r\n                        onClick={() => handle_upload(\"faculty-advisor\")}\r\n                      >\r\n                        {facSign != \"\"\r\n                          ? \"Uploaded\"\r\n                          : \"Choose signature for faculty advisor\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"upload-btn\"\r\n                      onClick={onSubmit}\r\n                      type=\"submit\"\r\n                    >\r\n                      <img className=\"upload-btn-img\" src={uploadBtn} />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" id=\"modal2\">\r\n          <div className=\"modal-content c-2\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"title\">Mail Certificates</h3>\r\n            <div className=\"modal-area\">\r\n              {show ? (\r\n                <div className=\"count\">\r\n                  Sending mails... <br />\r\n                  Sent {emailCount}/{arr2.length} mails\r\n                </div>\r\n              ) : null}\r\n              <div className=\"row\">\r\n                <form onSubmit={emailHandler}>\r\n                  <div className=\"mail-1\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"mail-inp\"\r\n                      placeholder=\"Subject\"\r\n                      onChange={(e) => setSubject(e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"mail-inp\"\r\n                      placeholder=\"Content\"\r\n                      onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <button className=\"mail-btn\" type=\"submit\">\r\n                    <img className=\"mail-btn-img\" src={mailBtn} />\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"csv-inst\">\r\n        {(type === \"wc\" || type === \"mc\") && (\r\n          <div>\r\n            The csv uploaded should contain 2 columns only, one column with\r\n            heading <b>name</b> and one with heading <b>email</b>.{\" \"}\r\n          </div>\r\n        )}\r\n        {type === \"org\" && (\r\n          <div>\r\n            The csv uploaded should contain 4 columns only, with headings-{\" \"}\r\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>.{\" \"}\r\n          </div>\r\n        )}\r\n        {type === \"comp\" && (\r\n          <div>\r\n            The csv uploaded should contain 5 columns only, with headings-{\" \"}\r\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>,\r\n            <b>position</b>.{\" \"}\r\n          </div>\r\n        )}\r\n      </div> */}\r\n      <div className=\"canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          id=\"myCanvas\"\r\n          className=\"cnvs\"\r\n          width=\"700\"\r\n          height=\"500\"\r\n        ></canvas>\r\n      </div>\r\n      <div className=\"row btn-c\">\r\n        <a className=\"modal-open\" href=\"#modal\">\r\n          <button className=\"row-btn\">\r\n            <img className=\"row-img\" src={uploadImg} />\r\n          </button>\r\n        </a>\r\n        <button className=\"row-btn\" onClick={download}>\r\n          <img className=\"row-img\" src={downloadImg} />\r\n        </button>\r\n        <a className=\"modal-open\" href=\"#modal2\">\r\n          <button className=\"row-btn\">\r\n            <img className=\"row-img\" src={mailImg} />\r\n          </button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["286"],"import { useState } from \"react\";\r\nimport \"./Upload.css\";\r\nimport axios from \"axios\";\r\nimport { useAuthState } from \"../../Context\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport qr from \"../../images/qrcode.png\";\r\nimport sig from \"../../images/sig.png\";\r\n\r\nimport up from \"../../images/upload-btn.png\";\r\n\r\nexport default function Upload() {\r\n  const userDetails = useAuthState();\r\n\r\n  let userId = userDetails.user.id;\r\n  const [cert, setCert] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const [qrTop, setqrTop] = useState<number>(0);\r\n  const [qrLeft, setqrLeft] = useState<number>(0);\r\n  const [qrW, setqrW] = useState<number>(0);\r\n  const [qrH, setqrH] = useState<number>(0);\r\n\r\n  const [sig1Top, setsig1Top] = useState<number>(0);\r\n  const [sig1Left, setsig1Left] = useState<number>(0);\r\n  const [sig1W, setsig1W] = useState<number>(0);\r\n  const [sig1H, setsig1H] = useState<number>(0);\r\n\r\n  const [sig2Top, setsig2Top] = useState<number>(0);\r\n  const [sig2Left, setsig2Left] = useState<number>(0);\r\n  const [sig2W, setsig2W] = useState<number>(0);\r\n  const [sig2H, setsig2H] = useState<number>(0);\r\n\r\n  const [nameTop, setNameTop] = useState<number>(0);\r\n  const [nameLeft, setNameLeft] = useState<number>(0);\r\n  const [nameW, setNameW] = useState<number>(0);\r\n  const [nameFont, setNameFont] = useState<number>(0);\r\n\r\n  const [eventTop, setEventTop] = useState<number>(0);\r\n  const [eventLeft, setEventLeft] = useState<number>(0);\r\n  const [eventW, setEventW] = useState<number>(0);\r\n  const [eventFont, setEventFont] = useState<number>(0);\r\n\r\n  const [dateTop, setDateTop] = useState<number>(0);\r\n  const [dateLeft, setDateLeft] = useState<number>(0);\r\n  const [dateW, setDateW] = useState<number>(0);\r\n  const [dateFont, setDateFont] = useState<number>(0);\r\n\r\n  const [positionTop, setPositionTop] = useState<number>(0);\r\n  const [positionLeft, setPositionLeft] = useState<number>(0);\r\n  const [positionW, setPositionW] = useState<number>(0);\r\n  const [positionFont, setPositionFont] = useState<number>(0);\r\n\r\n  const [alert, setAlert] = useState<boolean>(false);\r\n  const [c, setC] = useState();\r\n\r\n  // const[color,setColor]=useState();\r\n  function onFileChange(e) {\r\n    setCert(e.target.files[0]);\r\n\r\n    console.log(\"In this\");\r\n    // @ts-ignore\r\n    var file = document.getElementById(\"file-inp\").files[0];\r\n    console.log(file);\r\n    var reader = new FileReader();\r\n    console.log(reader);\r\n    reader.onloadend = function () {\r\n      document.getElementById(\"set-bg\").style.backgroundImage =\r\n        \"url(\" + reader.result + \")\";\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n    }\r\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\r\n  }\r\n\r\n  function upload() {\r\n    const inp = document.getElementById(\"file-inp\");\r\n    inp.click();\r\n  }\r\n\r\n  function positionqrTop(e) {\r\n    setqrTop(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionqrLeft(e) {\r\n    setqrLeft(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function qrWidth(e) {\r\n    setqrW(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function qrHeight(e) {\r\n    setqrH(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionsig1Top(e) {\r\n    setsig1Top(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionsig1Left(e) {\r\n    setsig1Left(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig1Width(e) {\r\n    setsig1W(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig1Height(e) {\r\n    setsig1H(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionsig2Top(e) {\r\n    setsig2Top(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionsig2Left(e) {\r\n    setsig2Left(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig2Width(e) {\r\n    setsig2W(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig2Height(e) {\r\n    setsig2H(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionNameTop(e) {\r\n    setNameTop(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.top = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function positionNameLeft(e) {\r\n    setNameLeft(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function NameW(e) {\r\n    setNameW(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.width = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function NameFont(e) {\r\n    setNameFont(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.fontSize = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n\r\n  function positionEventTop(e) {\r\n    setEventTop(parseInt(e.target.value));\r\n    const event = document.getElementById(\"event\");\r\n    event.style.top = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n  function positionEventLeft(e) {\r\n    setEventLeft(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.left = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n  function EventW(e) {\r\n    setEventW(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.width = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n  function EventFont(e) {\r\n    setEventFont(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.fontSize = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n\r\n  function positionEventDateTop(e) {\r\n    setDateTop(parseInt(e.target.value));\r\n    const event = document.getElementById(\"e-date\");\r\n    event.style.top = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"01-01-2022\";\r\n  }\r\n  function positionEventDateLeft(e) {\r\n    setDateLeft(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.left = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n  function EventDateW(e) {\r\n    setDateW(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.width = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n  function EventDateFont(e) {\r\n    setDateFont(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.fontSize = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n\r\n  function positionPosTop(e) {\r\n    setPositionTop(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.top = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function positionPosLeft(e) {\r\n    setPositionLeft(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.left = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function PositionW(e) {\r\n    setPositionW(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.width = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function PositionFont(e) {\r\n    setPositionFont(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.fontSize = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n\r\n  const coordinates = {\r\n    name: [nameTop, nameLeft, nameW, nameFont],\r\n    event: [eventTop, eventLeft, eventW, eventFont],\r\n    date: [dateTop, dateLeft, dateW, dateFont],\r\n    position: [positionTop, positionLeft, positionW, positionFont],\r\n    qr: [qrTop, qrLeft, qrH, qrW],\r\n    cpSig: [sig1Top, sig1Left, sig1H, sig1W],\r\n    faSig: [sig2Top, sig2Left, sig2H, sig2W],\r\n    color: c,\r\n  };\r\n  function setColor(value) {\r\n    setC(value);\r\n    var name = document.getElementById(\"name\");\r\n    var event = document.getElementById(\"event\");\r\n    var eDate = document.getElementById(\"e-date\");\r\n    var position = document.getElementById(\"position\");\r\n\r\n    name.style.color = value;\r\n    event.style.color = value;\r\n    eDate.style.color = value;\r\n    position.style.color = value;\r\n  }\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"certUrl\", cert);\r\n    console.log(formData);\r\n    await axios\r\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\r\n      .then(async (res: any) => {\r\n        console.log(res);\r\n        console.log(res.data._id);\r\n\r\n        var certDetailObj = {\r\n          certId: res.data._id,\r\n          category: type,\r\n          userId: userId,\r\n          coordinates: coordinates,\r\n        };\r\n        console.log(\"Hello\");\r\n        console.log(certDetailObj);\r\n        await axios\r\n          .put(\r\n            \"http://localhost:5000/api/cert/cert-upload-details\",\r\n            certDetailObj\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            // window.alert(\"Certificate Uploaded Successfully\");\r\n            setAlert(true);\r\n            setTimeout(function () {\r\n              window.location.reload();\r\n            }, 2000);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n  };\r\n\r\n  console.log(userId);\r\n  return (\r\n    <div\r\n      className={\r\n        type === \"comp\"\r\n          ? \"container cont3\"\r\n          : type === \"org\"\r\n          ? \"container cont2\"\r\n          : \"container cont1\"\r\n      }\r\n    >\r\n      {alert && (\r\n        <div className=\"alert\">\r\n          Congratulations! Certifcate has been uploaded successfully!!\r\n        </div>\r\n      )}\r\n\r\n      <Navbar2 />\r\n      <div className=\"left-c\">\r\n        <div className=\"left-box\" id=\"set-bg\">\r\n          <div id=\"name\">Person Name</div>\r\n          <div id=\"event\">Event Name</div>\r\n          <div id=\"e-date\">01/01/21</div>\r\n          <div id=\"position\">2</div>\r\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\r\n          <img alt=\"sig1\" src={sig} id=\"sig1\"></img>\r\n          <img alt=\"sig1\" src={sig} id=\"sig2\"></img>\r\n\r\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\r\n            <img src={up} />\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\r\n          Delete Image\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"right-c\">\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            <input\r\n              className=\"upload-input\"\r\n              type=\"file\"\r\n              id=\"file-inp\"\r\n              onChange={onFileChange}\r\n            />\r\n          </div>\r\n          <div className=\"up-box\">\r\n            <select\r\n              onChange={(e) => setType(e.target.value)}\r\n              className=\"up-select\"\r\n            >\r\n              <option id=\"op\" value=\"\">\r\n                Purpose of Generating Certificate\r\n              </option>\r\n              <option id=\"op\" value=\"wc\">\r\n                WC Completion\r\n              </option>\r\n              <option id=\"op\" value=\"mc\">\r\n                MC Completion\r\n              </option>\r\n              <option id=\"op\" value=\"org\">\r\n                Organizing a Competition\r\n              </option>\r\n              <option id=\"op\" value=\"comp\">\r\n                Participating in or winning a Competition\r\n              </option>\r\n            </select>\r\n\r\n            {type && (\r\n              <div className=\"type-container\">\r\n                <div>\r\n                  <div className=\"enter\">ENTER THE SPECIFICATIONS:</div>\r\n                  <div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\" id=\"c-label\">\r\n                        Font Colour:\r\n                      </label>\r\n                      <input\r\n                        type={\"color\"}\r\n                        id=\"color\"\r\n                        onChange={(e) => setColor(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">1. Name:</label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionNameTop(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionNameLeft(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => NameW(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Font:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => NameFont(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">2. QRCODE:</label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionqrTop(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionqrLeft(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => qrWidth(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => qrHeight(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        3. Faculty Advisor Signature:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig2Top(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig2Left(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig2Width(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig2Height(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        4. Chairperson Signature:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig1Top(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig1Left(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig1Width(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig1Height(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {type === \"org\" && (\r\n                    <div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">5. Event Name:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">6. Event Date:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}{\" \"}\r\n                  {type === \"comp\" && (\r\n                    <div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">5. Event Name:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventW(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">6. Event Date:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>{\" \"}\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">7. Positon Won:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionPosTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionPosLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => PositionW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => PositionFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"row input-row\">\r\n                    <div className=\"col-lg-6\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                      <button type=\"submit\" className=\"submit-up\">\r\n                        Upload\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className={type === \"comp\" ? \"upload-info info3\" : type===\"org\" ? \"upload-info info2\" : \"upload-info\"}> */}\r\n                  <div className=\"upload-info\">\r\n                    <span style={{ fontWeight: 800, marginRight: \"10px\" }}>\r\n                      Note:\r\n                    </span>\r\n                    The dimmensions of the certificate are 700px x 500px, please\r\n                    enter all coordinates in px keeping this height and width in\r\n                    mind.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":6,"column":11,"nodeType":"293","messageId":"294","endLine":6,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":31,"column":6,"nodeType":"297","endLine":31,"endColumn":8,"suggestions":"298"},{"ruleId":"291","severity":1,"message":"299","line":16,"column":18,"nodeType":"293","messageId":"294","endLine":16,"endColumn":33},{"ruleId":"291","severity":1,"message":"300","line":4,"column":27,"nodeType":"293","messageId":"294","endLine":4,"endColumn":33},{"ruleId":"291","severity":1,"message":"301","line":7,"column":9,"nodeType":"293","messageId":"294","endLine":7,"endColumn":17},{"ruleId":"291","severity":1,"message":"302","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":9},{"ruleId":"291","severity":1,"message":"303","line":18,"column":11,"nodeType":"293","messageId":"294","endLine":18,"endColumn":18},{"ruleId":"291","severity":1,"message":"299","line":18,"column":20,"nodeType":"293","messageId":"294","endLine":18,"endColumn":35},{"ruleId":"291","severity":1,"message":"304","line":18,"column":37,"nodeType":"293","messageId":"294","endLine":18,"endColumn":53},{"ruleId":"291","severity":1,"message":"305","line":18,"column":55,"nodeType":"293","messageId":"294","endLine":18,"endColumn":69},{"ruleId":"306","severity":1,"message":"307","line":62,"column":67,"nodeType":"308","messageId":"309","endLine":62,"endColumn":69},{"ruleId":"295","severity":1,"message":"310","line":73,"column":6,"nodeType":"297","endLine":73,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":137,"column":58,"nodeType":"308","messageId":"314","endLine":137,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":147,"column":58,"nodeType":"308","messageId":"314","endLine":147,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":156,"column":59,"nodeType":"308","messageId":"314","endLine":156,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":162,"column":58,"nodeType":"308","messageId":"314","endLine":162,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":172,"column":58,"nodeType":"308","messageId":"314","endLine":172,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":179,"column":59,"nodeType":"308","messageId":"314","endLine":179,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":186,"column":58,"nodeType":"308","messageId":"314","endLine":186,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":193,"column":62,"nodeType":"308","messageId":"314","endLine":193,"endColumn":63},{"ruleId":"295","severity":1,"message":"315","line":202,"column":6,"nodeType":"297","endLine":202,"endColumn":13,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":288,"column":24,"nodeType":"319","messageId":"320","endLine":288,"endColumn":26},{"ruleId":"312","severity":1,"message":"313","line":339,"column":66,"nodeType":"308","messageId":"314","endLine":339,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":349,"column":66,"nodeType":"308","messageId":"314","endLine":349,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":357,"column":67,"nodeType":"308","messageId":"314","endLine":357,"endColumn":68},{"ruleId":"312","severity":1,"message":"313","line":363,"column":66,"nodeType":"308","messageId":"314","endLine":363,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":372,"column":66,"nodeType":"308","messageId":"314","endLine":372,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":379,"column":67,"nodeType":"308","messageId":"314","endLine":379,"endColumn":68},{"ruleId":"312","severity":1,"message":"313","line":386,"column":66,"nodeType":"308","messageId":"314","endLine":386,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":393,"column":70,"nodeType":"308","messageId":"314","endLine":393,"endColumn":71},{"ruleId":"321","severity":1,"message":"322","line":476,"column":13,"nodeType":"323","endLine":481,"endColumn":14},{"ruleId":"306","severity":1,"message":"324","line":507,"column":30,"nodeType":"308","messageId":"309","endLine":507,"endColumn":32},{"ruleId":"306","severity":1,"message":"324","line":530,"column":36,"nodeType":"308","messageId":"309","endLine":530,"endColumn":38},{"ruleId":"306","severity":1,"message":"324","line":548,"column":34,"nodeType":"308","messageId":"309","endLine":548,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":560,"column":23,"nodeType":"323","endLine":560,"endColumn":73},{"ruleId":"321","severity":1,"message":"322","line":571,"column":13,"nodeType":"323","endLine":576,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":604,"column":21,"nodeType":"323","endLine":604,"endColumn":67},{"ruleId":"325","severity":1,"message":"326","line":645,"column":13,"nodeType":"323","endLine":645,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":649,"column":11,"nodeType":"323","endLine":649,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":653,"column":13,"nodeType":"323","endLine":653,"endColumn":54},{"ruleId":"291","severity":1,"message":"327","line":1,"column":27,"nodeType":"293","messageId":"294","endLine":1,"endColumn":36},{"ruleId":"291","severity":1,"message":"304","line":18,"column":35,"nodeType":"293","messageId":"294","endLine":18,"endColumn":51},{"ruleId":"291","severity":1,"message":"328","line":25,"column":11,"nodeType":"293","messageId":"294","endLine":25,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":402,"column":13,"nodeType":"323","endLine":402,"endColumn":29},{"ruleId":"291","severity":1,"message":"292","line":6,"column":11,"nodeType":"293","messageId":"294","endLine":6,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":31,"column":6,"nodeType":"297","endLine":31,"endColumn":8,"suggestions":"329"},{"ruleId":"291","severity":1,"message":"330","line":3,"column":10,"nodeType":"293","messageId":"294","endLine":3,"endColumn":25},{"ruleId":"291","severity":1,"message":"300","line":3,"column":27,"nodeType":"293","messageId":"294","endLine":3,"endColumn":33},{"ruleId":"291","severity":1,"message":"331","line":3,"column":35,"nodeType":"293","messageId":"294","endLine":3,"endColumn":47},{"ruleId":"291","severity":1,"message":"299","line":16,"column":18,"nodeType":"293","messageId":"294","endLine":16,"endColumn":33},{"ruleId":"291","severity":1,"message":"300","line":4,"column":27,"nodeType":"293","messageId":"294","endLine":4,"endColumn":33},{"ruleId":"291","severity":1,"message":"301","line":7,"column":9,"nodeType":"293","messageId":"294","endLine":7,"endColumn":17},{"ruleId":"291","severity":1,"message":"302","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":9},{"ruleId":"291","severity":1,"message":"303","line":18,"column":11,"nodeType":"293","messageId":"294","endLine":18,"endColumn":18},{"ruleId":"291","severity":1,"message":"299","line":18,"column":20,"nodeType":"293","messageId":"294","endLine":18,"endColumn":35},{"ruleId":"291","severity":1,"message":"304","line":18,"column":37,"nodeType":"293","messageId":"294","endLine":18,"endColumn":53},{"ruleId":"291","severity":1,"message":"305","line":18,"column":55,"nodeType":"293","messageId":"294","endLine":18,"endColumn":69},{"ruleId":"291","severity":1,"message":"327","line":1,"column":27,"nodeType":"293","messageId":"294","endLine":1,"endColumn":36},{"ruleId":"291","severity":1,"message":"304","line":18,"column":35,"nodeType":"293","messageId":"294","endLine":18,"endColumn":51},{"ruleId":"291","severity":1,"message":"328","line":25,"column":11,"nodeType":"293","messageId":"294","endLine":25,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":62,"column":67,"nodeType":"308","messageId":"309","endLine":62,"endColumn":69},{"ruleId":"295","severity":1,"message":"310","line":73,"column":6,"nodeType":"297","endLine":73,"endColumn":8,"suggestions":"332"},{"ruleId":"312","severity":1,"message":"313","line":135,"column":58,"nodeType":"308","messageId":"314","endLine":135,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":145,"column":58,"nodeType":"308","messageId":"314","endLine":145,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":154,"column":59,"nodeType":"308","messageId":"314","endLine":154,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":160,"column":58,"nodeType":"308","messageId":"314","endLine":160,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":170,"column":58,"nodeType":"308","messageId":"314","endLine":170,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":177,"column":59,"nodeType":"308","messageId":"314","endLine":177,"endColumn":60},{"ruleId":"312","severity":1,"message":"313","line":184,"column":58,"nodeType":"308","messageId":"314","endLine":184,"endColumn":59},{"ruleId":"312","severity":1,"message":"313","line":191,"column":62,"nodeType":"308","messageId":"314","endLine":191,"endColumn":63},{"ruleId":"295","severity":1,"message":"315","line":200,"column":6,"nodeType":"297","endLine":200,"endColumn":13,"suggestions":"333"},{"ruleId":"317","severity":1,"message":"318","line":289,"column":24,"nodeType":"319","messageId":"320","endLine":289,"endColumn":26},{"ruleId":"312","severity":1,"message":"313","line":340,"column":66,"nodeType":"308","messageId":"314","endLine":340,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":350,"column":66,"nodeType":"308","messageId":"314","endLine":350,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":358,"column":67,"nodeType":"308","messageId":"314","endLine":358,"endColumn":68},{"ruleId":"312","severity":1,"message":"313","line":364,"column":66,"nodeType":"308","messageId":"314","endLine":364,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":373,"column":66,"nodeType":"308","messageId":"314","endLine":373,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":380,"column":67,"nodeType":"308","messageId":"314","endLine":380,"endColumn":68},{"ruleId":"312","severity":1,"message":"313","line":387,"column":66,"nodeType":"308","messageId":"314","endLine":387,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":394,"column":70,"nodeType":"308","messageId":"314","endLine":394,"endColumn":71},{"ruleId":"321","severity":1,"message":"322","line":464,"column":13,"nodeType":"323","endLine":469,"endColumn":14},{"ruleId":"306","severity":1,"message":"324","line":495,"column":30,"nodeType":"308","messageId":"309","endLine":495,"endColumn":32},{"ruleId":"306","severity":1,"message":"324","line":518,"column":36,"nodeType":"308","messageId":"309","endLine":518,"endColumn":38},{"ruleId":"306","severity":1,"message":"324","line":536,"column":34,"nodeType":"308","messageId":"309","endLine":536,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":548,"column":23,"nodeType":"323","endLine":548,"endColumn":73},{"ruleId":"321","severity":1,"message":"322","line":559,"column":13,"nodeType":"323","endLine":564,"endColumn":14},{"ruleId":"325","severity":1,"message":"326","line":592,"column":21,"nodeType":"323","endLine":592,"endColumn":67},{"ruleId":"325","severity":1,"message":"326","line":633,"column":13,"nodeType":"323","endLine":633,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":637,"column":11,"nodeType":"323","endLine":637,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":641,"column":13,"nodeType":"323","endLine":641,"endColumn":54},{"ruleId":"325","severity":1,"message":"326","line":400,"column":13,"nodeType":"323","endLine":400,"endColumn":29},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["336"],"'errorMessageLog' is assigned a value but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["337"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["338"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'res' is assigned a value but never used.",["339"],"'useAuthDispatch' is defined but never used.","'useAuthState' is defined but never used.",["340"],["341"],"no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"342","fix":"348"},{"desc":"344","fix":"349"},{"desc":"346","fix":"350"},"Update the dependencies array to be: [data]",{"range":"351","text":"352"},"Update the dependencies array to be: [id]",{"range":"353","text":"354"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"355","text":"356"},{"range":"357","text":"352"},{"range":"358","text":"354"},{"range":"359","text":"356"},[842,844],"[data]",[2403,2405],"[id]",[5981,5988],"[certUrl, coordinates, final, type]",[842,844],[2403,2405],[5977,5984]]