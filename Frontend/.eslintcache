[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"19","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"20","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\comp\\Forgot\\ForgotPassword.tsx":"21","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\comp\\Forgot\\ResetPassword.tsx":"22","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"23","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"24"},{"size":517,"mtime":1637381770861,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1637381770863,"results":"27","hashOfConfig":"26"},{"size":1225,"mtime":1637473701896,"results":"28","hashOfConfig":"26"},{"size":1106,"mtime":1637420527482,"results":"29","hashOfConfig":"26"},{"size":508,"mtime":1637381770837,"results":"30","hashOfConfig":"26"},{"size":224,"mtime":1637381770840,"results":"31","hashOfConfig":"26"},{"size":2968,"mtime":1637477121174,"results":"32","hashOfConfig":"26"},{"size":226,"mtime":1637381770848,"results":"33","hashOfConfig":"26"},{"size":1724,"mtime":1637402154925,"results":"34","hashOfConfig":"26"},{"size":1261,"mtime":1637402308157,"results":"35","hashOfConfig":"26"},{"size":10046,"mtime":1637402463590,"results":"36","hashOfConfig":"26"},{"size":4705,"mtime":1637472177206,"results":"37","hashOfConfig":"26"},{"size":16316,"mtime":1637388474444,"results":"38","hashOfConfig":"26"},{"size":1882,"mtime":1637381770839,"results":"39","hashOfConfig":"26"},{"size":977,"mtime":1637381770839,"results":"40","hashOfConfig":"26"},{"size":1629,"mtime":1637381770840,"results":"41","hashOfConfig":"26"},{"size":1794,"mtime":1637477092608,"results":"42","hashOfConfig":"26"},{"size":1760,"mtime":1637401680750,"results":"43","hashOfConfig":"26"},{"size":662,"mtime":1637424304127,"results":"44","hashOfConfig":"26"},{"size":600,"mtime":1637465886772,"results":"45","hashOfConfig":"26"},{"size":2039,"mtime":1637381770854,"results":"46","hashOfConfig":"26"},{"size":2102,"mtime":1637381770855,"results":"47","hashOfConfig":"26"},{"size":2229,"mtime":1637476279090,"results":"48","hashOfConfig":"26"},{"size":3255,"mtime":1637476765870,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"h0escr",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["109","110"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["111","112","113"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",["114","115","116","117","118","119"],"import \"./dashboard.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../Navbar\";\r\nfunction Home2(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"certUrl\", cert);\r\n    console.log(formData);\r\n    await axios\r\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData, {})\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        //post\r\n        //route??\r\n      });\r\n    const modalClose = document.getElementById(\"modalClose\");\r\n    modalClose.click();\r\n    window.location.reload();\r\n  };\r\n\r\n  function onFileChange(e) {\r\n    setCert(e.target.files[0]);\r\n  }\r\n\r\n  console.log(userDetails.user.role);\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n\r\n      <div className=\"home-header\">Existing Templates</div>\r\n      {uploadedCerts.map((cert) => (\r\n        <img src={cert.certUrl} className=\"home-photo\" />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home2;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",["120","121","122","123","124","125","126"],"import \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport NavBar from \"../Navbar\";\r\n\r\nfunction Generate(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  function handleLogout() {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  }\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n<NavBar/>\r\n      <div className=\"home-main\"></div>\r\n      <div className=\"home-header\">Choose a template</div>\r\n\r\n      {uploadedCerts.map((cert) => (\r\n        <Link to={\"/single-cert/\" + cert._id}>\r\n          <img src={cert.certUrl} className=\"home-photo\" />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generate;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport NavBar from \"../Navbar\";\r\n\r\nexport default function SingleImage(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  const id = window.location.pathname.split(\"/\")[2];\r\n\r\n  const [csv, setCsv] = useState(\"\");\r\n  const [certUrl, setCertUrl] = useState(\"\");\r\n  const [arr, setArr] = useState([]);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [emailCount, setEmailCount] = useState(0);\r\n  const [csvError, setCsvError] = useState(false);\r\n  const [final, setFinal] = useState(false);\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  function onFileChange(e) {\r\n    setCsv(e.target.files[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\" + id)\r\n      .then((response: any) => {\r\n        console.log(response);\r\n        console.log(\"jrr;;;oo\");\r\n        setCertUrl(response.data.certUrl);\r\n        setCoordinates(response.data.coordinates);\r\n        setFinal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"This fucker ran\");\r\n    console.log(id);\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = 700;\r\n    canvas.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }, [final]);\r\n\r\n  const emailHandler = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n\r\n    console.log(arr);\r\n    setShow(true);\r\n    console.log(certUrl);\r\n    function toBuffer(ab) {\r\n      var buf = Buffer.alloc(ab.byteLength);\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i < buf.length; ++i) {\r\n        buf[i] = view[i];\r\n      }\r\n      return buf;\r\n    }\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var canvasUrl, canvasBuffer;\r\n      var user = arr[i];\r\n      console.log(\"Sending:\", user);\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", user.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(user.name, 280, 300);\r\n        var canvas2 = document.getElementById(\"myCanvas\");\r\n        // var imageData = ctx.getImageData(0, 0, 700, 500);\r\n        // canvasUrl = imageData.data.buffer\r\n        // canvasBuffer=toBuffer(canvasUrl)\r\n        // console.log(canvasUrl)\r\n      };\r\n      var data = {\r\n        subject,\r\n        content,\r\n        user,\r\n        certUrl,\r\n      };\r\n      await axios\r\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\r\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n    setShow(false);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"csv\", csv);\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\r\n      .then((res: any) => {\r\n        setArr(res.data);\r\n        const modalClose = document.getElementById(\"modalClose\");\r\n        modalClose.click();\r\n      });\r\n  };\r\n\r\n  function download() {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    console.log(arr);\r\n    arr.map((element) => {\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", element.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(element.name, 280, 300);\r\n        var canvas2: any = document.getElementById(\"myCanvas\");\r\n        var url = canvas2.toDataURL(\"image/png\");\r\n\r\n        var link = document.createElement(\"a\");\r\n        link.download = `${element.name}.png`;\r\n        link.href = url;\r\n        link.click();\r\n      };\r\n    });\r\n    const elementCanvas = document.createElement(\"canvas\");\r\n    elementCanvas.classList.add(\"hide-canvas\");\r\n\r\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\r\n    const canvasObj = canvasRef.current;\r\n    const ctx = canvasObj.getContext(\"2d\");\r\n    canvasObj.width = 700;\r\n    canvasObj.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n      <div className=\"row\">\r\n        <a className=\"modal-open\" href=\"#modal\">\r\n          {\" \"}\r\n          <button className=\"home-button\">Upload CSV File</button>\r\n        </a>\r\n        <button className=\"home-button\" onClick={download}>\r\n          Download All\r\n        </button>\r\n        <a className=\"modal-open\" href=\"#modal2\">\r\n          <button className=\"home-button\">Mail Certifcates</button>\r\n        </a>\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Upload CSV File</h3>\r\n            <div className=\"modal-area\">\r\n              <div className=\"row\">\r\n                <form onSubmit={onSubmit} id=\"csvForm\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className=\"upload-input\"\r\n                      type=\"file\"\r\n                      onChange={onFileChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" id=\"modal2\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Mail Certificates</h3>\r\n            <div className=\"modal-area\">\r\n              {show ? (\r\n                <div className=\"count\">\r\n                  Sending mails... <br />\r\n                  Sent {emailCount}/{arr.length} mails\r\n                </div>\r\n              ) : null}\r\n              <div className=\"row\">\r\n                <form onSubmit={emailHandler}>\r\n                  <div className=\"form-group\">\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Subject\"\r\n                        required\r\n                        type=\"text\"\r\n                        onChange={(e) => setSubject(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Content For Mail\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Send Mail\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          id=\"myCanvas\"\r\n          className=\"cnvas2\"\r\n          width=\"700\"\r\n          height=\"200\"\r\n        ></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx",["149","150"],"import React, { useState } from \"react\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport styles from \"./signup.module.css\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport { AiFillEyeInvisible } from 'react-icons/ai';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const { loading, errorMessage }:any = useAuthState();\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  \r\n  const handleSignUp = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await signUpUser(dispatch, { name, email, password, role: 'MC' });\r\n      if (res == \"success\") {\r\n        props.history.push(\"./login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  function toggleVisible(e){\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <>\r\n      {/* <div className={styles.container}>\r\n        <div style={{width:200}}>\r\n          <h1>SignUp Page</h1>\r\n          <div>\r\n            {errorMessage ? (\r\n              <p className={styles.error}>{errorMessage}</p>\r\n            ) : null}\r\n          </div>\r\n          <form>\r\n            <div className={styles.loginForm}>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"text\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={handleSignUp} disabled={loading}>\r\n              Signup\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <div>\r\n        <Navbar2 login={false} signup={true} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n            {errorMessage ? (\r\n              <p className=\"error\">{errorMessage}</p>\r\n            ) : null}\r\n\r\n            {/* {successMessage ? (\r\n              <p className=\"success\">{successMessage}</p>\r\n            ) : null} */}\r\n          </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n              <input\r\n              className=\"form-item\"\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n\r\n              </div>\r\n              <div >\r\n                <input\r\n                className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div >\r\n                <input\r\n                className=\"form-item\"\r\n                  type={visible?\"text\":\"password\"}\r\n                  placeholder=\"Enter Password\"\r\n\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button  className=\"toggle-button-2\" onClick={(e)=>toggleVisible(e)}><AiFillEyeInvisible/></button>\r\n              </div>\r\n              <button className=\"submit-btn\" onClick={handleSignUp} disabled={loading}>\r\n                Sign Up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useState } from \"react\";\r\nimport NavBar from \"../Navbar\";\r\nimport \"./Upload.css\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\n\r\nexport default function Upload() {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  let userId = userDetails.user.id;\r\n  const [cert, setCert] = useState(\"\");\r\n  const [certId, setCertId] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const [nameTop, setNameTop] = useState<number>(0);\r\n  const [nameLeft, setNameLeft] = useState<number>(0);\r\n\r\n  const [eventTop, setEventTop] = useState<number>(0);\r\n  const [eventLeft, setEventLeft] = useState<number>(0);\r\n\r\n  const [dateTop, setDateTop] = useState<number>(0);\r\n  const [dateLeft, setDateLeft] = useState<number>(0);\r\n\r\n  const [positionTop, setPositionTop] = useState<number>(0);\r\n  const [positionLeft, setPositionLeft] = useState<number>(0);\r\n\r\n  function onFileChange(e) {\r\n    setCert(e.target.files[0]);\r\n\r\n    console.log(\"In this\");\r\n    // @ts-ignore\r\n    var file = document.getElementById(\"file-inp\").files[0];\r\n    console.log(file);\r\n    var reader = new FileReader();\r\n    console.log(reader);\r\n    reader.onloadend = function () {\r\n      document.getElementById(\"set-bg\").style.backgroundImage =\r\n        \"url(\" + reader.result + \")\";\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n    }\r\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\r\n  }\r\n\r\n  function upload() {\r\n    const inp = document.getElementById(\"file-inp\");\r\n    inp.click();\r\n  }\r\n\r\n  function positionNameTop() {\r\n    const name = document.getElementById(\"name\");\r\n    name.style.top = nameTop.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function positionNameLeft() {\r\n    const name = document.getElementById(\"name\");\r\n    name.style.left = nameLeft.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n\r\n  function positionEventTop() {\r\n    const event = document.getElementById(\"event\");\r\n    event.style.top = eventTop.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n  function positionEventLeft() {\r\n    const event = document.getElementById(\"event\");\r\n    event.style.left = eventLeft.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"Event Name\";\r\n  }\r\n\r\n  function positionEventDateTop() {\r\n    const event = document.getElementById(\"e-date\");\r\n    event.style.top = dateTop.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"01-01-2022\";\r\n  }\r\n  function positionEventDateLeft() {\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.left = dateLeft.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n  function positionPosTop() {\r\n    const position = document.getElementById(\"position\");\r\n    position.style.top = positionTop.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function positionPosLeft() {\r\n    const position = document.getElementById(\"position\");\r\n    position.style.left = positionLeft.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n\r\n  const coordinates = {\r\n    name: [nameTop, nameLeft],\r\n    event: [eventTop, eventLeft],\r\n    date: [dateTop, dateLeft],\r\n    postion: [positionTop, positionLeft],\r\n  };\r\n\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"certUrl\", cert);\r\n    console.log(formData);\r\n    await axios\r\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\r\n      .then(async (res: any) => {\r\n        console.log(res);\r\n        console.log(res.data._id);\r\n\r\n        setCertId(res.data._id);\r\n        var certDetailObj = {\r\n          certId: res.data._id,\r\n          category: type,\r\n          userId: userId,\r\n          coordinates: coordinates,\r\n        };\r\n        console.log(\"Hello\");\r\n        console.log(certDetailObj);\r\n        await axios\r\n          .put(\r\n            \"http://localhost:5000/api/cert/cert-upload-details\",\r\n            certDetailObj\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            window.alert(\"Certificate Uploaded Successfully\");\r\n            window.location.reload();\r\n          }).catch((err)=>{\r\n            console.log(err)\r\n          });\r\n      })\r\n      \r\n      \r\n      ;\r\n  };\r\n\r\nconsole.log(userId);\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"left-c\">\r\n        <div className=\"left-box\" id=\"set-bg\">\r\n          <div id=\"name\">Person Name</div>\r\n          <div id=\"event\">Event Name</div>\r\n          <div id=\"e-date\">01/01/21</div>\r\n          <div id=\"position\">2</div>\r\n\r\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\r\n            Choose a file\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\r\n          Delete Image\r\n        </button>\r\n      </div>\r\n      <div className=\"right-c\">\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            <input\r\n              className=\"upload-input\"\r\n              type=\"file\"\r\n              id=\"file-inp\"\r\n              onChange={onFileChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              onChange={(e) => setType(e.target.value)}\r\n              className=\"up-select\"\r\n            >\r\n              <option value=\"\">Select Type of Certificate</option>\r\n              <option value=\"wc\">WC Completion</option>\r\n              <option value=\"mc\">MC Completion</option>\r\n              <option value=\"org\">Organizing a Competition</option>\r\n              <option value=\"comp\">\r\n                Participating in or winning a Competition\r\n              </option>\r\n            </select>\r\n            {type && (\r\n              <div>\r\n                {(type == \"wc\" || type == \"mc\") && (\r\n                  <div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for name:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameTop(parseInt(e.target.value)),\r\n                            positionNameTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameLeft(parseInt(e.target.value)),\r\n                            positionNameLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {type == \"org\" && (\r\n                  <div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for name:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameTop(parseInt(e.target.value)),\r\n                            positionNameTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameLeft(parseInt(e.target.value)),\r\n                            positionNameLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for Event Name:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setEventTop(parseInt(e.target.value)),\r\n                            positionEventTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setEventLeft(parseInt(e.target.value)),\r\n                            positionEventLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for Event Date:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setDateTop(parseInt(e.target.value)),\r\n                            positionEventDateTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setDateLeft(parseInt(e.target.value)),\r\n                            positionEventDateLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}{\" \"}\r\n                {type == \"comp\" && (\r\n                  <div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for name:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameTop(parseInt(e.target.value)),\r\n                            positionNameTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setNameLeft(parseInt(e.target.value)),\r\n                            positionNameLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for Event Name:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setEventTop(parseInt(e.target.value)),\r\n                            positionEventTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setEventLeft(parseInt(e.target.value)),\r\n                            positionEventLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for Event Date:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setDateTop(parseInt(e.target.value)),\r\n                            positionEventDateTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setDateLeft(parseInt(e.target.value)),\r\n                            positionEventDateLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>{\" \"}\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        Enter Coordinates for Positon Won:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <label>Top:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setPositionTop(parseInt(e.target.value)),\r\n                            positionPosTop()\r\n                          )}\r\n                        ></input>\r\n                        <label>Left:</label>\r\n                        <input\r\n                          className=\"type-input\"\r\n                          type=\"number\"\r\n                          onChange={(e) => (\r\n                            setPositionLeft(parseInt(e.target.value)),\r\n                            positionPosLeft()\r\n                          )}\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div className=\"upload-info\">\r\n                  The height of the certificate is 700px x 500px, please enter\r\n                  all coordinates in px keeping this height and width in mind.\r\n                </div>\r\n                <div>\r\n                  <button type=\"submit\" className=\"submit-up\">\r\n                    Upload\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",["175","176"],"const ROOT_URL = \"http://localhost:5000\";\r\n\r\nexport async function loginUser(dispatch, loginPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_LOGIN\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: res.data,\r\n        status: res.status,\r\n      });\r\n\r\n      return res;\r\n    }\r\n\r\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function signUpUser(dispatch, signUpPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(signUpPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_SIGNUP\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      return res.status;\r\n    }\r\n\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function logOut(dispatch) {\r\n  dispatch({ type: \"LOGOUT\" });\r\n  localStorage.removeItem(\"currentUser\");\r\n  localStorage.removeItem(\"token\");\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",["177","178","179","180"],"import React, { useState, useReducer } from \"react\";\r\n\r\nlet user = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n  : \"\";\r\nlet token = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).token\r\n  : \"\";\r\n\r\nexport const initialState = {\r\n  user: \"\" || JSON.parse(localStorage.getItem(\"currentUser\")),\r\n  token: \"\" || token,\r\n  loading: false,\r\n  errorMessage: null,\r\n  successMessage: null,\r\n};\r\n\r\nexport const AuthReducer = (initialState, action) => {\r\n  switch (action.type) {\r\n    case \"REQUEST_LOGIN\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        user: JSON.parse(localStorage.getItem(\"currentUser\")),\r\n        successMessage: \"Logged in Successfully\",\r\n        loading: false,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...initialState,\r\n        user: \"\",\r\n        token: \"\",\r\n      };\r\n\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n      };\r\n\r\n    case \"REQUEST_SIGNUP\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        successMessage: \"Signed up Successfully\",\r\n        loading: false,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar\\index.tsx",["181","182","183"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",["184","185","186","187","188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../Navbar\";\r\nimport \"./user_upload.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function User_Upload() {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n  const user_id = userDetails.user.id;\r\n\r\n  const handleLogout = (props) => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const user_array = uploadedCerts.filter((cert) => cert.userId === user_id);\r\n  function handleDelete(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/api/cert/\" + id)\r\n      .then((res) =>  window.location.reload());\r\n  }\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"user-name\">{userDetails.user.name}</div>\r\n      <div className=\"user-email\">{userDetails.user.email}</div>\r\n    <div className=\"map-c\">\r\n      {user_array.map((cert) => (\r\n        <div className=\"up-container\">\r\n          <img src={cert.certUrl} className=\"upload-photo\" />\r\n          <div>\r\n            <button\r\n              className=\"cert-delete\"\r\n              onClick={(e) => handleDelete(cert._id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["190"],"import React from 'react';\r\nimport './Navbar2.css';\r\nimport logo2 from '../../images/logo2.png';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar2(props) {\r\n    return (\r\n        <div className=\"nav-c\">\r\n            \r\n            <img className=\"logo2\" src={logo2}></img>\r\n\r\n            <div className=\"nav-right\">\r\n            <Link to={\"/login\"} className={props.login?\"nav-link nav-active\":\"nav-link\"}>Login</Link>\r\n            <Link to={\"/signup\"}  className={props.signup?\"nav-active-2 nav-link\":\"nav-link\"}>Sign up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\comp\\Forgot\\ForgotPassword.tsx",["191","192"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\comp\\Forgot\\ResetPassword.tsx",["193"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Forgot.css\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\ninterface Props {}\r\n\r\nconst ResetPassword: React.FC<Props> = (props) => {\r\n  const current_url = window.location.href;\r\n  const param_array = current_url.split(\"/\");\r\n  const id = param_array[4];\r\n  const token = param_array[5];\r\n\r\n  const url = \"http://localhost:5000\";\r\n\r\n  const [pass, setPass] = useState<string>(\"\");\r\n  const [err, setError] = useState<boolean>(false);\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const [msg, setMsg] = useState<string>(\"\");\r\n\r\n  function handleSubmit() {\r\n    const data = {\r\n      id,\r\n      token,\r\n      pass,\r\n    };\r\n\r\n    axios\r\n      .patch(url + \"/api/auth/reset\", data)\r\n      .then(\r\n        (res: any) =>\r\n          (res.data.status = \"success\"\r\n            ? (setError(false),\r\n              setSuccess(true),\r\n              setMsg(\"Password Updated Successfully\"))\r\n            : null)\r\n      )\r\n      .catch((err) => console.log(err.message));\r\n\r\n    console.log(data);\r\n  }\r\n  return (\r\n    <div className=\"forgot-container\">\r\n      <div className=\"forgot-box\">\r\n        <div className=\"forgot-header\">Reset Password</div>\r\n        {msg !== \"\" ? (\r\n          <div className={err ? \"failure\" : success ? \"success\" : \"no-class\"}>\r\n            {msg}\r\n          </div>\r\n        ) : null}\r\n\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            className=\"forgot-input\"\r\n            onChange={(e) => setPass(e.target.value)}\r\n            placeholder=\"Enter new password\"\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"forgot-submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit();\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"back-div\">\r\n          <Link to={\"/\"} id=\"back\">\r\n            Back To Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",["194","195","196"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",["197","198"],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":36},{"ruleId":"203","severity":1,"message":"207","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":14},{"ruleId":"203","severity":1,"message":"208","line":23,"column":11,"nodeType":"205","messageId":"206","endLine":23,"endColumn":14},{"ruleId":"203","severity":1,"message":"209","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":14},{"ruleId":"203","severity":1,"message":"210","line":14,"column":9,"nodeType":"205","messageId":"206","endLine":14,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":30,"column":6,"nodeType":"213","endLine":30,"endColumn":8,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"215","line":31,"column":9,"nodeType":"205","messageId":"206","endLine":31,"endColumn":17},{"ruleId":"203","severity":1,"message":"216","line":49,"column":12,"nodeType":"205","messageId":"206","endLine":49,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":60,"column":9,"nodeType":"219","endLine":60,"endColumn":58},{"ruleId":"203","severity":1,"message":"220","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":20},{"ruleId":"203","severity":1,"message":"221","line":10,"column":9,"nodeType":"205","messageId":"206","endLine":10,"endColumn":20},{"ruleId":"203","severity":1,"message":"222","line":11,"column":12,"nodeType":"205","messageId":"206","endLine":11,"endColumn":24},{"ruleId":"203","severity":1,"message":"223","line":16,"column":10,"nodeType":"205","messageId":"206","endLine":16,"endColumn":14},{"ruleId":"203","severity":1,"message":"224","line":16,"column":16,"nodeType":"205","messageId":"206","endLine":16,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":30,"column":6,"nodeType":"213","endLine":30,"endColumn":8,"suggestions":"225"},{"ruleId":"217","severity":1,"message":"218","line":40,"column":11,"nodeType":"219","endLine":40,"endColumn":60},{"ruleId":"203","severity":1,"message":"220","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":20},{"ruleId":"203","severity":1,"message":"209","line":4,"column":22,"nodeType":"205","messageId":"206","endLine":4,"endColumn":26},{"ruleId":"203","severity":1,"message":"221","line":10,"column":9,"nodeType":"205","messageId":"206","endLine":10,"endColumn":20},{"ruleId":"203","severity":1,"message":"226","line":20,"column":10,"nodeType":"205","messageId":"206","endLine":20,"endColumn":21},{"ruleId":"203","severity":1,"message":"227","line":21,"column":10,"nodeType":"205","messageId":"206","endLine":21,"endColumn":14},{"ruleId":"203","severity":1,"message":"228","line":21,"column":16,"nodeType":"205","messageId":"206","endLine":21,"endColumn":23},{"ruleId":"203","severity":1,"message":"229","line":24,"column":10,"nodeType":"205","messageId":"206","endLine":24,"endColumn":18},{"ruleId":"203","severity":1,"message":"210","line":29,"column":9,"nodeType":"205","messageId":"206","endLine":29,"endColumn":21},{"ruleId":"211","severity":1,"message":"230","line":51,"column":6,"nodeType":"213","endLine":51,"endColumn":8,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"232","line":75,"column":6,"nodeType":"213","endLine":75,"endColumn":13,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":78,"column":13,"nodeType":"236","messageId":"237","endLine":78,"endColumn":15},{"ruleId":"203","severity":1,"message":"238","line":89,"column":14,"nodeType":"205","messageId":"206","endLine":89,"endColumn":22},{"ruleId":"203","severity":1,"message":"239","line":98,"column":11,"nodeType":"205","messageId":"206","endLine":98,"endColumn":20},{"ruleId":"203","severity":1,"message":"240","line":98,"column":22,"nodeType":"205","messageId":"206","endLine":98,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":112,"column":27,"nodeType":"243","messageId":"244","endLine":126,"endColumn":8},{"ruleId":"203","severity":1,"message":"245","line":121,"column":13,"nodeType":"205","messageId":"206","endLine":121,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":135,"column":46,"nodeType":"248","messageId":"249","endLine":135,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":142,"column":13,"nodeType":"236","messageId":"237","endLine":142,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":161,"column":13,"nodeType":"236","messageId":"237","endLine":161,"endColumn":15},{"ruleId":"250","severity":1,"message":"251","line":167,"column":23,"nodeType":"252","messageId":"253","endLine":167,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":237,"column":13,"nodeType":"219","endLine":242,"endColumn":14},{"ruleId":"254","severity":1,"message":"255","line":269,"column":13,"nodeType":"219","endLine":274,"endColumn":14},{"ruleId":"203","severity":1,"message":"207","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":23,"column":15,"nodeType":"236","messageId":"237","endLine":23,"endColumn":17},{"ruleId":"203","severity":1,"message":"256","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":9},{"ruleId":"203","severity":1,"message":"257","line":6,"column":27,"nodeType":"205","messageId":"206","endLine":6,"endColumn":33},{"ruleId":"203","severity":1,"message":"258","line":10,"column":9,"nodeType":"205","messageId":"206","endLine":10,"endColumn":17},{"ruleId":"203","severity":1,"message":"259","line":15,"column":10,"nodeType":"205","messageId":"206","endLine":15,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":206,"column":24,"nodeType":"236","messageId":"237","endLine":206,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":206,"column":40,"nodeType":"236","messageId":"237","endLine":206,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":219,"column":65,"nodeType":"248","messageId":"249","endLine":219,"endColumn":66},{"ruleId":"246","severity":1,"message":"247","line":228,"column":66,"nodeType":"248","messageId":"249","endLine":228,"endColumn":67},{"ruleId":"234","severity":1,"message":"235","line":236,"column":23,"nodeType":"236","messageId":"237","endLine":236,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":249,"column":65,"nodeType":"248","messageId":"249","endLine":249,"endColumn":66},{"ruleId":"246","severity":1,"message":"247","line":258,"column":66,"nodeType":"248","messageId":"249","endLine":258,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":275,"column":66,"nodeType":"248","messageId":"249","endLine":275,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":284,"column":67,"nodeType":"248","messageId":"249","endLine":284,"endColumn":68},{"ruleId":"246","severity":1,"message":"247","line":301,"column":65,"nodeType":"248","messageId":"249","endLine":301,"endColumn":66},{"ruleId":"246","severity":1,"message":"247","line":310,"column":66,"nodeType":"248","messageId":"249","endLine":310,"endColumn":67},{"ruleId":"234","severity":1,"message":"235","line":318,"column":23,"nodeType":"236","messageId":"237","endLine":318,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":331,"column":65,"nodeType":"248","messageId":"249","endLine":331,"endColumn":66},{"ruleId":"246","severity":1,"message":"247","line":340,"column":66,"nodeType":"248","messageId":"249","endLine":340,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":357,"column":66,"nodeType":"248","messageId":"249","endLine":357,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":366,"column":67,"nodeType":"248","messageId":"249","endLine":366,"endColumn":68},{"ruleId":"246","severity":1,"message":"247","line":383,"column":65,"nodeType":"248","messageId":"249","endLine":383,"endColumn":66},{"ruleId":"246","severity":1,"message":"247","line":392,"column":66,"nodeType":"248","messageId":"249","endLine":392,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":409,"column":69,"nodeType":"248","messageId":"249","endLine":409,"endColumn":70},{"ruleId":"246","severity":1,"message":"247","line":418,"column":70,"nodeType":"248","messageId":"249","endLine":418,"endColumn":71},{"ruleId":"234","severity":1,"message":"235","line":18,"column":20,"nodeType":"236","messageId":"237","endLine":18,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":53,"column":20,"nodeType":"236","messageId":"237","endLine":53,"endColumn":22},{"ruleId":"203","severity":1,"message":"260","line":1,"column":8,"nodeType":"205","messageId":"206","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"261","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"262","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":37},{"ruleId":"203","severity":1,"message":"263","line":3,"column":5,"nodeType":"205","messageId":"206","endLine":3,"endColumn":9},{"ruleId":"217","severity":1,"message":"218","line":23,"column":13,"nodeType":"219","endLine":23,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":29,"column":13,"nodeType":"219","endLine":29,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":41,"column":34,"nodeType":"236","messageId":"237","endLine":41,"endColumn":36},{"ruleId":"203","severity":1,"message":"209","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"223","line":12,"column":10,"nodeType":"205","messageId":"206","endLine":12,"endColumn":14},{"ruleId":"203","severity":1,"message":"224","line":12,"column":16,"nodeType":"205","messageId":"206","endLine":12,"endColumn":23},{"ruleId":"203","severity":1,"message":"210","line":16,"column":9,"nodeType":"205","messageId":"206","endLine":16,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":32,"column":6,"nodeType":"213","endLine":32,"endColumn":8,"suggestions":"264"},{"ruleId":"217","severity":1,"message":"218","line":48,"column":11,"nodeType":"219","endLine":48,"endColumn":62},{"ruleId":"217","severity":1,"message":"218","line":10,"column":13,"nodeType":"219","endLine":10,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":25,"column":25,"nodeType":"236","messageId":"237","endLine":25,"endColumn":27},{"ruleId":"234","severity":1,"message":"235","line":27,"column":29,"nodeType":"236","messageId":"237","endLine":27,"endColumn":31},{"ruleId":"203","severity":1,"message":"265","line":4,"column":16,"nodeType":"205","messageId":"206","endLine":4,"endColumn":27},{"ruleId":"203","severity":1,"message":"209","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":26,"column":25,"nodeType":"236","messageId":"237","endLine":26,"endColumn":27},{"ruleId":"234","severity":1,"message":"235","line":28,"column":29,"nodeType":"236","messageId":"237","endLine":28,"endColumn":31},{"ruleId":"203","severity":1,"message":"209","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":14},{"ruleId":"203","severity":1,"message":"265","line":4,"column":16,"nodeType":"205","messageId":"206","endLine":4,"endColumn":27},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'res' is assigned a value but never used.","'Link' is defined but never used.","'handleLogout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'onSubmit' is assigned a value but never used.","'onFileChange' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'handleLogout' is defined but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.",["269"],"'coordinates' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'certUrl' and 'id'. Either include them or remove the dependency array.",["271"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'background', 'user'.","FunctionExpression","unsafeRefs","'canvas2' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'$' is defined but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'certId' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.",["272"],"'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"273","fix":"280"},"Update the dependencies array to be: [uploadedCerts]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [id]",{"range":"284","text":"285"},"Update the dependencies array to be: [certUrl, final, id]",{"range":"286","text":"287"},{"range":"288","text":"282"},[848,850],"[uploadedCerts]",[870,872],[1577,1579],"[id]",[2205,2212],"[certUrl, final, id]",[913,915]]