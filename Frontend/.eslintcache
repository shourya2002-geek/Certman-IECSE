[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"18","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"19","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"20","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"21"},{"size":500,"mtime":1637982889584,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1637982890529,"results":"24","hashOfConfig":"23"},{"size":1170,"mtime":1637982888368,"results":"25","hashOfConfig":"23"},{"size":1114,"mtime":1637982889203,"results":"26","hashOfConfig":"23"},{"size":526,"mtime":1637982889175,"results":"27","hashOfConfig":"23"},{"size":2135,"mtime":1637982889755,"results":"28","hashOfConfig":"23"},{"size":3208,"mtime":1637982889804,"results":"29","hashOfConfig":"23"},{"size":233,"mtime":1637982889459,"results":"30","hashOfConfig":"23"},{"size":524,"mtime":1637982889883,"results":"31","hashOfConfig":"23"},{"size":2726,"mtime":1638046834239,"results":"32","hashOfConfig":"23"},{"size":4735,"mtime":1637982890150,"results":"33","hashOfConfig":"23"},{"size":3107,"mtime":1637982889920,"results":"34","hashOfConfig":"23"},{"size":223,"mtime":1637982890092,"results":"35","hashOfConfig":"23"},{"size":1761,"mtime":1638046543013,"results":"36","hashOfConfig":"23"},{"size":1253,"mtime":1638046601099,"results":"37","hashOfConfig":"23"},{"size":1758,"mtime":1638029736244,"results":"38","hashOfConfig":"23"},{"size":15900,"mtime":1638030139906,"results":"39","hashOfConfig":"23"},{"size":1811,"mtime":1637982889362,"results":"40","hashOfConfig":"23"},{"size":971,"mtime":1637982889426,"results":"41","hashOfConfig":"23"},{"size":11499,"mtime":1638029433610,"results":"42","hashOfConfig":"23"},{"size":1562,"mtime":1637982889531,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"h0escr",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["96","97"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",["98","99","100"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./Forgot.css\";\nimport { Link } from \"react-router-dom\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst ForgotPassword: React.FC<Props> = (props) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [err, setError] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>(\"\");\n\n  const url = \"http://localhost:5000\";\n\n  function handleSubmit() {\n    const data = {\n      email,\n    };\n    console.log(data);\n\n    axios\n      .post(url + \"/api/auth/forgot\", data)\n      .then((res: any) =>\n        res.data.status == \"error\"\n          ? (setError(true), setMsg(res.data.error))\n          : res.data.status == \"success\"\n          ? (setError(false),\n            setSuccess(true),\n            setMsg(\"Mail with password reset link has been sent.\"))\n          : null\n      )\n      .catch((err) => console.log(err.message));\n\n    console.log(data);\n  }\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-box box-2\">\n          <div className=\"login-h\">Forgot Password</div>\n          <div>\n            {msg !== \"\" ? (\n              <div\n                className={err ? \"failure\" : success ? \"success\" : \"no-class\"}\n              >\n                {msg}\n              </div>\n            ) : null}\n          </div>\n\n          <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your registered email id\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",["101","102"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./Forgot.css\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst ResetPassword: React.FC<Props> = (props) => {\n  const current_url = window.location.href;\n  const param_array = current_url.split(\"/\");\n  const id = param_array[4];\n  const token = param_array[5];\n\n  const url = \"http://localhost:5000\";\n\n  const [pass, setPass] = useState<string>(\"\");\n  const [err, setError] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>(\"\");\n\n  function handleSubmit() {\n    const data = {\n      id,\n      token,\n      pass,\n    };\n\n    axios\n      .patch(url + \"/api/auth/reset\", data)\n      .then(\n        (res: any) =>\n          (res.data.status = \"success\"\n            ? (setError(false),\n              setSuccess(true),\n              setMsg(\"Password Updated Successfully\"))\n            : null)\n      )\n      .catch((err) => console.log(err.message));\n\n    console.log(data);\n  }\n  return (\n    // <div className=\"forgot-container\">\n    //   <div className=\"forgot-box\">\n    //     <div className=\"forgot-header\">Reset Password</div>\n    //     {msg !== \"\" ? (\n    //       <div className={err ? \"failure\" : success ? \"success\" : \"no-class\"}>\n    //         {msg}\n    //       </div>\n    //     ) : null}\n\n    //     <form>\n    //       <input\n    //         type=\"text\"\n    //         className=\"forgot-input\"\n    //         onChange={(e) => setPass(e.target.value)}\n    //         placeholder=\"Enter new password\"\n    //       ></input>\n    //       <button\n    //         type=\"submit\"\n    //         className=\"forgot-submit\"\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           handleSubmit();\n    //         }}\n    //       >\n    //         Submit\n    //       </button>\n    //     </form>\n    //     <div className=\"back-div\">\n    //       <Link to={\"/\"} id=\"back\">\n    //         Back To Login\n    //       </Link>\n    //     </div>\n    //   </div>\n    // </div>\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-box box-2\">\n          <div className=\"login-h\">Reset Password</div>\n          <div>\n            {msg !== \"\" ? (\n              <div\n                className={err ? \"failure\" : success ? \"success\" : \"no-class\"}\n              >\n                {msg}\n              </div>\n            ) : null}\n          </div>\n\n          <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"Enter new password\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["103","104","105","106"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx",["107","108"],"import React, { useState } from \"react\";\n\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./signup.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { AiFillEyeInvisible } from \"react-icons/ai\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage }: any = useAuthState();\n  const [visible, setVisible] = useState(false);\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await signUpUser(dispatch, {\n        name,\n        email,\n        password,\n        role: \"MC\",\n      });\n      if (res == \"success\") {\n        props.history.push(\"./login\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n  return (\n    <>\n      {/* <div className={styles.container}>\n        <div style={{width:200}}>\n          <h1>SignUp Page</h1>\n          <div>\n            {errorMessage ? (\n              <p className={styles.error}>{errorMessage}</p>\n            ) : null}\n          </div>\n          <form>\n            <div className={styles.loginForm}>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"text\">Name</label>\n                <input\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n            </div>\n            <button onClick={handleSignUp} disabled={loading}>\n              Signup\n            </button>\n          </form>\n        </div>\n      </div> */}\n      <div>\n        <Navbar2 login={false} signup={true} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessage ? <p className=\"error\">{errorMessage}</p> : null}\n\n              {/* {successMessage ? (\n              <p className=\"success\">{successMessage}</p>\n            ) : null} */}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button-2\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  <AiFillEyeInvisible />\n                </button>\n              </div>\n              <button\n                className=\"submit-btn\"\n                onClick={handleSignUp}\n                disabled={loading}\n              >\n                Sign Up\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["109","110","111"],"import React, { useState, useEffect } from \"react\";\n\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./login.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./login.css\";\nimport { AiFillEyeInvisible } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage, successMessage }: any = useAuthState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await loginUser(dispatch, { email, password });\n      let user = localStorage.getItem(\"currentUser\")\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n        : \"\";\n      if (user) {\n        props.history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n  return (\n    <>\n      <div>\n        <Navbar2 login={true} signup={false} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessage ? <p className=\"error\">{errorMessage}</p> : null}\n\n              {successMessage ? (\n                <p className=\"success\">{successMessage}</p>\n              ) : null}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  <AiFillEyeInvisible />\n                </button>\n              </div>\n              <button\n                className=\"submit-btn\"\n                type=\"submit\"\n                onClick={handleLogin}\n                disabled={loading}\n              >\n                Login\n              </button>\n              <div className=\"forgot\">\n                <Link to={\"/forgot\"} className=\"f-link\">\n                  Forgot Password?\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",["112","113","114","115","116","117"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",["118","119","120","121","122","123","124"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",["125","126","127","128","129","130"],"import React, { useState, useEffect } from \"react\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nimport \"./user_upload.css\";\nimport axios from \"axios\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\nexport default function User_Upload() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n  const user_id = userDetails.user.id;\n\n  const handleLogout = (props) => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n\n  const user_array = uploadedCerts.filter((cert) => cert.userId === user_id);\n  function handleDelete(id) {\n    axios\n      .delete(\"http://localhost:5000/api/cert/\" + id)\n      .then((res) => window.location.reload());\n  }\n  return (\n    <div className=\"container\">\n      <Navbar2 />\n      <div className=\"user-name\">{userDetails.user.name}</div>\n      <div className=\"user-email\">{userDetails.user.email}</div>\n      <div className=\"map-c\">\n        {user_array.map((cert) => (\n          <div className=\"up-container\">\n            <img src={cert.certUrl} className=\"home-photo\" />\n            <div>\n              <button\n                className=\"cert-delete\"\n                onClick={(e) => handleDelete(cert._id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useState } from \"react\";\nimport \"./Upload.css\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\nexport default function Upload() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [certId, setCertId] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionNameTop() {\n    const name = document.getElementById(\"name\");\n    name.style.top = nameTop.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft() {\n    const name = document.getElementById(\"name\");\n    name.style.left = nameLeft.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop() {\n    const event = document.getElementById(\"event\");\n    event.style.top = eventTop.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function positionEventLeft() {\n    const event = document.getElementById(\"event\");\n    event.style.left = eventLeft.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function positionEventDateTop() {\n    const event = document.getElementById(\"e-date\");\n    event.style.top = dateTop.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft() {\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = dateLeft.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function positionPosTop() {\n    const position = document.getElementById(\"position\");\n    position.style.top = positionTop.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft() {\n    const position = document.getElementById(\"position\");\n    position.style.left = positionLeft.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n\n  const coordinates = {\n    name: [nameTop, nameLeft],\n    event: [eventTop, eventLeft],\n    date: [dateTop, dateLeft],\n    postion: [positionTop, positionLeft],\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        setCertId(res.data._id);\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            window.alert(\"Certificate Uploaded Successfully\");\n            window.location.reload();\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n\n  console.log(userId);\n  return (\n    <div className=\"container\">\n      <Navbar2 />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            Choose a file\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n      </div>\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div>\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option value=\"\">Select Type of Certificate</option>\n              <option value=\"wc\">WC Completion</option>\n              <option value=\"mc\">MC Completion</option>\n              <option value=\"org\">Organizing a Competition</option>\n              <option value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n            {type && (\n              <div>\n                {(type == \"wc\" || type == \"mc\") && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {type == \"org\" && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventTop(parseInt(e.target.value)),\n                            positionEventTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventLeft(parseInt(e.target.value)),\n                            positionEventLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Date:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateTop(parseInt(e.target.value)),\n                            positionEventDateTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateLeft(parseInt(e.target.value)),\n                            positionEventDateLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}{\" \"}\n                {type == \"comp\" && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventTop(parseInt(e.target.value)),\n                            positionEventTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventLeft(parseInt(e.target.value)),\n                            positionEventLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Date:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateTop(parseInt(e.target.value)),\n                            positionEventDateTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateLeft(parseInt(e.target.value)),\n                            positionEventDateLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>{\" \"}\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Positon Won:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setPositionTop(parseInt(e.target.value)),\n                            positionPosTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setPositionLeft(parseInt(e.target.value)),\n                            positionPosLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"upload-info\">\n                  The height of the certificate is 700px x 500px, please enter\n                  all coordinates in px keeping this height and width in mind.\n                </div>\n                <div>\n                  <button type=\"submit\" className=\"submit-up\">\n                    Upload\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",["155","156"],"const ROOT_URL = \"http://localhost:5000\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(loginPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data,\n        status: res.status,\n      });\n\n      return res;\n    }\n\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function signUpUser(dispatch, signUpPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(signUpPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_SIGNUP\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\n      return res.status;\n    }\n\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function logOut(dispatch) {\n  dispatch({ type: \"LOGOUT\" });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\nexport default function SingleImage(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const id = window.location.pathname.split(\"/\")[2];\n\n  const [csv, setCsv] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr2, setArr2] = useState([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState<any>([]);\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [csvError, setCsvError] = useState(false);\n  const [final, setFinal] = useState(false);\n  const [type, setType] = useState(\"\");\n\n  const canvasRef = useRef(null);\n\n  const handleLogout = () => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  function onFileChange(e) {\n    setCsv(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\" + id)\n      .then((response: any) => {\n        console.log(response);\n        setCertUrl(response.data.certUrl);\n        setCoordinates(response.data.coordinates);\n        setType(response.data.category);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(id);\n    console.log(coordinates);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n      if (type == \"wc\" || type == \"mc\") {\n        ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n      }\n      if (type == \"org\") {\n        ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n        ctx.fillText(\"Event Name\", coordinates.event[1], coordinates.event[0]);\n        ctx.fillText(\"01/01/2021\", coordinates.date[1], coordinates.date[0]);\n      }\n      if (type == \"comp\") {\n        ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n        ctx.fillText(\"Event Name\", coordinates.event[1], coordinates.event[0]);\n        ctx.fillText(\"01/01/2021\", coordinates.date[1], coordinates.date[0]);\n        ctx.fillText(\"1st\", coordinates.postion[1], coordinates.postion[0]);\n      }\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    setShow(true);\n    console.log(certUrl);\n    function toBuffer(ab) {\n      var buf = Buffer.alloc(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buf.length; ++i) {\n        buf[i] = view[i];\n      }\n      return buf;\n    }\n    for (var i = 0; i < arr2.length; i++) {\n      var canvasUrl, canvasBuffer;\n      var user = arr2[i];\n      console.log(\"Sending:\", user);\n      var data = {\n        subject,\n        content,\n        user,\n        certUrl,\n        type,\n        coordinates,\n      };\n      await axios\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\n        .catch((err) => console.log(err.message));\n    }\n    setShow(false);\n  };\n\n  const onSubmit = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    await axios\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\n      .then((res: any) => {\n        setArr2([]);\n        setArr2(res.data);\n        console.log(res.data);\n        const modalClose = document.getElementById(\"modalClose\");\n        modalClose.click();\n      });\n  };\n\n  function download() {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr2);\n    arr2.map((element) => {\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n\n        if (type == \"wc\" || type == \"mc\") {\n          ctx.fillText(element.name, coordinates.name[1], coordinates.name[0]);\n        }\n        if (type == \"wc\" || type == \"mc\") {\n          ctx.fillText(element.name, coordinates.name[1], coordinates.name[0]);\n        }\n        if (type == \"org\") {\n          ctx.fillText(element.name, coordinates.name[1], coordinates.name[0]);\n          ctx.fillText(\n            element.event_name,\n            coordinates.event[1],\n            coordinates.event[0]\n          );\n          ctx.fillText(element.date, coordinates.date[1], coordinates.date[0]);\n        }\n        if (type == \"comp\") {\n          ctx.fillText(element.name, coordinates.name[1], coordinates.name[0]);\n          ctx.fillText(\n            element.event_name,\n            coordinates.event[1],\n            coordinates.event[0]\n          );\n          ctx.fillText(element.date, coordinates.date[1], coordinates.date[0]);\n          ctx.fillText(\n            element.postion,\n            coordinates.postion[1],\n            coordinates.postion[0]\n          );\n        }\n\n        var canvas2: any = document.getElementById(\"myCanvas\");\n        var url = canvas2.toDataURL(\"image/png\");\n\n        var link = document.createElement(\"a\");\n        link.download = `${element.name}.png`;\n        link.href = url;\n        link.click();\n      };\n    });\n    const elementCanvas = document.createElement(\"canvas\");\n    elementCanvas.classList.add(\"hide-canvas\");\n\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    canvasObj.width = 700;\n    canvasObj.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      if (type == \"wc\" || type == \"mc\") {\n        ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n      }\n    };\n  }\n  return (\n    <div className=\"container\">\n      <Navbar2 />\n      <div className=\"row\">\n        <a className=\"modal-open\" href=\"#modal\">\n          {\" \"}\n          <button className=\"home-button\">Upload CSV File</button>\n        </a>\n        <button className=\"home-button\" onClick={download}>\n          Download All\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload CSV File</h3>\n            <div className=\"modal-area\">\n              <div className=\"row\">\n                <form onSubmit={onSubmit} id=\"csvForm\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"upload-input\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr2.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"form-group\">\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Subject\"\n                        required\n                        type=\"text\"\n                        onChange={(e) => setSubject(e.target.value)}\n                      ></input>\n                    </div>\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Content For Mail\"\n                        type=\"text\"\n                        onChange={(e) => setContent(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Send Mail\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        {(type == \"wc\" || type == \"mc\") && (\n          <div>\n            The csv uploaded should contain 2 columns only, one column with\n            heading <b>name</b> and one with heading <b>email</b>.{\" \"}\n          </div>\n        )}\n        {type == \"org\" && (\n          <div>\n            The csv uploaded should contain 4 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>.{\" \"}\n          </div>\n        )}\n        {type == \"comp\" && (\n          <div>\n            The csv uploaded should contain 5 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>,\n            <b>postion</b>.{\" \"}\n          </div>\n        )}\n      </div>\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvas2\"\n          width=\"700\"\n          height=\"200\"\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",["192","193","194","195"],"import React, { useState, useReducer } from \"react\";\n\nlet user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n  : \"\";\nlet token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).token\n  : \"\";\n\nexport const initialState = {\n  user: \"\" || JSON.parse(localStorage.getItem(\"currentUser\")),\n  token: \"\" || token,\n  loading: false,\n  errorMessage: null,\n  successMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        user: JSON.parse(localStorage.getItem(\"currentUser\")),\n        successMessage: \"Logged in Successfully\",\n        loading: false,\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        token: \"\",\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    case \"REQUEST_SIGNUP\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...initialState,\n        successMessage: \"Signed up Successfully\",\n        loading: false,\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":26,"column":25,"nodeType":"206","messageId":"207","endLine":26,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":28,"column":29,"nodeType":"206","messageId":"207","endLine":28,"endColumn":31},{"ruleId":"200","severity":1,"message":"201","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"208","line":4,"column":16,"nodeType":"202","messageId":"203","endLine":4,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":29,"column":11,"nodeType":"211","endLine":29,"endColumn":38},{"ruleId":"209","severity":1,"message":"210","line":39,"column":11,"nodeType":"211","endLine":39,"endColumn":46},{"ruleId":"209","severity":1,"message":"210","line":47,"column":15,"nodeType":"211","endLine":47,"endColumn":53},{"ruleId":"204","severity":1,"message":"205","line":80,"column":34,"nodeType":"206","messageId":"207","endLine":80,"endColumn":36},{"ruleId":"200","severity":1,"message":"212","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":27,"column":15,"nodeType":"206","messageId":"207","endLine":27,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"212","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"214","line":22,"column":11,"nodeType":"202","messageId":"203","endLine":22,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"215","line":14,"column":9,"nodeType":"202","messageId":"203","endLine":14,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":30,"column":6,"nodeType":"218","endLine":30,"endColumn":8,"suggestions":"219"},{"ruleId":"200","severity":1,"message":"220","line":31,"column":9,"nodeType":"202","messageId":"203","endLine":31,"endColumn":17},{"ruleId":"200","severity":1,"message":"221","line":49,"column":12,"nodeType":"202","messageId":"203","endLine":49,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":60,"column":9,"nodeType":"211","endLine":60,"endColumn":59},{"ruleId":"200","severity":1,"message":"222","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":20},{"ruleId":"200","severity":1,"message":"223","line":11,"column":9,"nodeType":"202","messageId":"203","endLine":11,"endColumn":20},{"ruleId":"200","severity":1,"message":"224","line":12,"column":12,"nodeType":"202","messageId":"203","endLine":12,"endColumn":24},{"ruleId":"200","severity":1,"message":"225","line":17,"column":10,"nodeType":"202","messageId":"203","endLine":17,"endColumn":14},{"ruleId":"200","severity":1,"message":"226","line":17,"column":16,"nodeType":"202","messageId":"203","endLine":17,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":31,"column":6,"nodeType":"218","endLine":31,"endColumn":8,"suggestions":"227"},{"ruleId":"209","severity":1,"message":"210","line":40,"column":13,"nodeType":"211","endLine":40,"endColumn":62},{"ruleId":"200","severity":1,"message":"201","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"225","line":12,"column":10,"nodeType":"202","messageId":"203","endLine":12,"endColumn":14},{"ruleId":"200","severity":1,"message":"226","line":12,"column":16,"nodeType":"202","messageId":"203","endLine":12,"endColumn":23},{"ruleId":"200","severity":1,"message":"215","line":16,"column":9,"nodeType":"202","messageId":"203","endLine":16,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":32,"column":6,"nodeType":"218","endLine":32,"endColumn":8,"suggestions":"228"},{"ruleId":"209","severity":1,"message":"210","line":48,"column":13,"nodeType":"211","endLine":48,"endColumn":62},{"ruleId":"200","severity":1,"message":"229","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},{"ruleId":"200","severity":1,"message":"230","line":5,"column":27,"nodeType":"202","messageId":"203","endLine":5,"endColumn":33},{"ruleId":"200","severity":1,"message":"231","line":9,"column":9,"nodeType":"202","messageId":"203","endLine":9,"endColumn":17},{"ruleId":"200","severity":1,"message":"232","line":14,"column":10,"nodeType":"202","messageId":"203","endLine":14,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":202,"column":24,"nodeType":"206","messageId":"207","endLine":202,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":202,"column":40,"nodeType":"206","messageId":"207","endLine":202,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":215,"column":65,"nodeType":"235","messageId":"236","endLine":215,"endColumn":66},{"ruleId":"233","severity":1,"message":"234","line":224,"column":66,"nodeType":"235","messageId":"236","endLine":224,"endColumn":67},{"ruleId":"204","severity":1,"message":"205","line":232,"column":23,"nodeType":"206","messageId":"207","endLine":232,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":245,"column":65,"nodeType":"235","messageId":"236","endLine":245,"endColumn":66},{"ruleId":"233","severity":1,"message":"234","line":254,"column":66,"nodeType":"235","messageId":"236","endLine":254,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":271,"column":66,"nodeType":"235","messageId":"236","endLine":271,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":280,"column":67,"nodeType":"235","messageId":"236","endLine":280,"endColumn":68},{"ruleId":"233","severity":1,"message":"234","line":297,"column":65,"nodeType":"235","messageId":"236","endLine":297,"endColumn":66},{"ruleId":"233","severity":1,"message":"234","line":306,"column":66,"nodeType":"235","messageId":"236","endLine":306,"endColumn":67},{"ruleId":"204","severity":1,"message":"205","line":314,"column":23,"nodeType":"206","messageId":"207","endLine":314,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":327,"column":65,"nodeType":"235","messageId":"236","endLine":327,"endColumn":66},{"ruleId":"233","severity":1,"message":"234","line":336,"column":66,"nodeType":"235","messageId":"236","endLine":336,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":353,"column":66,"nodeType":"235","messageId":"236","endLine":353,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":362,"column":67,"nodeType":"235","messageId":"236","endLine":362,"endColumn":68},{"ruleId":"233","severity":1,"message":"234","line":379,"column":65,"nodeType":"235","messageId":"236","endLine":379,"endColumn":66},{"ruleId":"233","severity":1,"message":"234","line":388,"column":66,"nodeType":"235","messageId":"236","endLine":388,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":405,"column":69,"nodeType":"235","messageId":"236","endLine":405,"endColumn":70},{"ruleId":"233","severity":1,"message":"234","line":414,"column":70,"nodeType":"235","messageId":"236","endLine":414,"endColumn":71},{"ruleId":"204","severity":1,"message":"205","line":18,"column":20,"nodeType":"206","messageId":"207","endLine":18,"endColumn":22},{"ruleId":"204","severity":1,"message":"205","line":53,"column":20,"nodeType":"206","messageId":"207","endLine":53,"endColumn":22},{"ruleId":"200","severity":1,"message":"222","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":4,"column":22,"nodeType":"202","messageId":"203","endLine":4,"endColumn":26},{"ruleId":"200","severity":1,"message":"223","line":10,"column":9,"nodeType":"202","messageId":"203","endLine":10,"endColumn":20},{"ruleId":"200","severity":1,"message":"237","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":14},{"ruleId":"200","severity":1,"message":"238","line":21,"column":16,"nodeType":"202","messageId":"203","endLine":21,"endColumn":23},{"ruleId":"200","severity":1,"message":"239","line":24,"column":10,"nodeType":"202","messageId":"203","endLine":24,"endColumn":18},{"ruleId":"200","severity":1,"message":"215","line":30,"column":9,"nodeType":"202","messageId":"203","endLine":30,"endColumn":21},{"ruleId":"216","severity":1,"message":"240","line":52,"column":6,"nodeType":"218","endLine":52,"endColumn":8,"suggestions":"241"},{"ruleId":"204","severity":1,"message":"205","line":73,"column":16,"nodeType":"206","messageId":"207","endLine":73,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":73,"column":32,"nodeType":"206","messageId":"207","endLine":73,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":76,"column":16,"nodeType":"206","messageId":"207","endLine":76,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":81,"column":16,"nodeType":"206","messageId":"207","endLine":81,"endColumn":18},{"ruleId":"216","severity":1,"message":"242","line":88,"column":6,"nodeType":"218","endLine":88,"endColumn":13,"suggestions":"243"},{"ruleId":"204","severity":1,"message":"205","line":91,"column":13,"nodeType":"206","messageId":"207","endLine":91,"endColumn":15},{"ruleId":"200","severity":1,"message":"244","line":101,"column":14,"nodeType":"202","messageId":"203","endLine":101,"endColumn":22},{"ruleId":"200","severity":1,"message":"245","line":110,"column":11,"nodeType":"202","messageId":"203","endLine":110,"endColumn":20},{"ruleId":"200","severity":1,"message":"246","line":110,"column":22,"nodeType":"202","messageId":"203","endLine":110,"endColumn":34},{"ruleId":"233","severity":1,"message":"234","line":123,"column":46,"nodeType":"235","messageId":"236","endLine":123,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":130,"column":13,"nodeType":"206","messageId":"207","endLine":130,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":151,"column":13,"nodeType":"206","messageId":"207","endLine":151,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":157,"column":24,"nodeType":"249","messageId":"250","endLine":157,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":177,"column":18,"nodeType":"206","messageId":"207","endLine":177,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":177,"column":34,"nodeType":"206","messageId":"207","endLine":177,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":180,"column":18,"nodeType":"206","messageId":"207","endLine":180,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":180,"column":34,"nodeType":"206","messageId":"207","endLine":180,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":183,"column":18,"nodeType":"206","messageId":"207","endLine":183,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":192,"column":18,"nodeType":"206","messageId":"207","endLine":192,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":237,"column":16,"nodeType":"206","messageId":"207","endLine":237,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":237,"column":32,"nodeType":"206","messageId":"207","endLine":237,"endColumn":34},{"ruleId":"251","severity":1,"message":"252","line":258,"column":13,"nodeType":"211","endLine":263,"endColumn":14},{"ruleId":"251","severity":1,"message":"252","line":290,"column":13,"nodeType":"211","endLine":295,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":339,"column":16,"nodeType":"206","messageId":"207","endLine":339,"endColumn":18},{"ruleId":"204","severity":1,"message":"205","line":339,"column":32,"nodeType":"206","messageId":"207","endLine":339,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":345,"column":15,"nodeType":"206","messageId":"207","endLine":345,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":351,"column":15,"nodeType":"206","messageId":"207","endLine":351,"endColumn":17},{"ruleId":"200","severity":1,"message":"253","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"254","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"255","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":37},{"ruleId":"200","severity":1,"message":"256","line":3,"column":5,"nodeType":"202","messageId":"203","endLine":3,"endColumn":9},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLocation' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styles' is defined but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'onSubmit' is assigned a value but never used.","'onFileChange' is defined but never used.","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'handleLogout' is defined but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.",["260"],["261"],"'$' is defined but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'certId' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', 'id', and 'type'. Either include them or remove the dependency array.",["263"],"'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"264","fix":"266"},{"desc":"264","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [uploadedCerts]",{"range":"272","text":"273"},{"range":"274","text":"273"},{"range":"275","text":"273"},"Update the dependencies array to be: [id]",{"range":"276","text":"277"},"Update the dependencies array to be: [certUrl, coordinates, final, id, type]",{"range":"278","text":"279"},[829,831],"[uploadedCerts]",[852,854],[892,894],[1592,1594],"[id]",[2895,2902],"[certUrl, coordinates, final, id, type]"]