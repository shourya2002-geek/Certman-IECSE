[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"20","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"21","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"22"},{"size":500,"mtime":1641992946839,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1641992948240,"results":"25","hashOfConfig":"24"},{"size":1305,"mtime":1641992946608,"results":"26","hashOfConfig":"24"},{"size":1121,"mtime":1641992946666,"results":"27","hashOfConfig":"24"},{"size":526,"mtime":1641992946645,"results":"28","hashOfConfig":"24"},{"size":3154,"mtime":1641992947066,"results":"29","hashOfConfig":"24"},{"size":2203,"mtime":1643456013497,"results":"30","hashOfConfig":"24"},{"size":1730,"mtime":1641992948212,"results":"31","hashOfConfig":"24"},{"size":233,"mtime":1641992946766,"results":"32","hashOfConfig":"24"},{"size":4896,"mtime":1641992947540,"results":"33","hashOfConfig":"24"},{"size":810,"mtime":1641992947165,"results":"34","hashOfConfig":"24"},{"size":3391,"mtime":1641992947428,"results":"35","hashOfConfig":"24"},{"size":3266,"mtime":1641992947223,"results":"36","hashOfConfig":"24"},{"size":17214,"mtime":1643461221299,"results":"37","hashOfConfig":"24"},{"size":995,"mtime":1641992947115,"results":"38","hashOfConfig":"24"},{"size":1064,"mtime":1641992946908,"results":"39","hashOfConfig":"24"},{"size":223,"mtime":1641992947450,"results":"40","hashOfConfig":"24"},{"size":32731,"mtime":1643460424347,"results":"41","hashOfConfig":"24"},{"size":1490,"mtime":1641992948164,"results":"42","hashOfConfig":"24"},{"size":1783,"mtime":1641992946717,"results":"43","hashOfConfig":"24"},{"size":971,"mtime":1641992946752,"results":"44","hashOfConfig":"24"},{"size":1671,"mtime":1641992946805,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h0escr",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["96","97"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["98","99"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst Verify = (props) => {\n  const current_url = window.location.href;\n  const param_array = current_url.split(\"/\");\n  const id = param_array[4];\n  console.log(id);\n  const url = \"http://localhost:5000\";\n  const data = {\n    id,\n  };\n\n  useEffect(() => {\n    axios\n      .patch(url + \"/api/auth/verifyacc\", data)\n      .then((res: any) =>\n        res.data.status === \"success\"\n          ? (console.log(res.data),\n            setMsg(\"Account Verrified Successfully!\"),\n            setTimeout(function () {\n              window.location.href = \"../login\";\n            }, 2000))\n          : setMsg(res.data.error)\n      )\n      .catch((err) => setMsg(err.message));\n  }, []);\n\n  const [msg, setMsg] = useState<string>(\"\");\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-h verify-msg\">\n          {\" \"}\n          {msg !== \"\" ? <div>{msg}</div> : null}\n        </div>\n\n        {/* <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"Enter new password\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n          </form> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["100"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cnfrmpass, setcnfrmPassword] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  var { loading, errorMessageLog, errorMessageSign }: any = useAuthState();\n  const [visible, setVisible] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n\n  const [successMessage, setSuccessMsg] = useState(\"\");\n  const url = \"http://localhost:5000\";\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    console.log(\"in sugnup\");\n    try {\n      let res = await signUpUser(dispatch, {\n        name,\n        email,\n        password,\n        role: \"MC\",\n      });\n      if (res === \"success\") {\n        errorMessageSign = \"\";\n        console.log(\"res is success time for another request\");\n        console.log(email);\n        setSuccessMsg(\"Signed up Successfully\");\n        const data = {\n          email,\n        };\n        console.log(\"Sending verify request\");\n        axios\n          .post(url + \"/api/auth/verify\", data)\n          .then((res: any) =>\n            res.data.status === \"success\"\n              ? setSuccessMsg(\"Please check your mail to verify your account.\")\n              : console.log(res.data)\n          )\n          .catch((err) => console.log(err.message));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n  function toggleVisible2(e) {\n    e.preventDefault();\n    setVisible2(!visible2);\n  }\n\n  return (\n    <>\n      <div>\n        <Navbar2 login={false} signup={true} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessageSign ? (\n                <p className=\"error\">{errorMessageSign}</p>\n              ) : null}\n\n              {successMessage ? (\n                <p className=\"success\">{successMessage}</p>\n              ) : null}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button-2\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible2 ? \"text\" : \"password\"}\n                  placeholder=\"Confirm Password\"\n                  id=\"password\"\n                  value={cnfrmpass}\n                  onChange={(e) => setcnfrmPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button-3\"\n                  onClick={(e) => toggleVisible2(e)}\n                >\n                  {!visible2 ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              {cnfrmpass !== password && (\n                <div className=\"match\">Passwords do not match</div>\n              )}\n              <button\n                className=\"submit-btn\"\n                onClick={handleSignUp}\n                disabled={loading || cnfrmpass !== password}\n              >\n                Sign Up\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["101","102"],"import React from \"react\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./Home.css\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nexport default function Home() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"home-box\">\n          <div className=\"c-heading\">CERTMAN</div>\n          <div className=\"c-byline\">An in-house certificate generator</div>\n          {!userDetails.user && (\n            <div className=\"c-more\">\n              Log in to experience a wide range of features.\n            </div>\n          )}\n        </div>\n        {/*\n         */}\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["103","104","105","106","107"],"import React, { useState } from \"react\";\nimport \"./Navbar2.css\";\nimport logo2 from \"../../images/logo2.png\";\nimport s from \"../../images/S.png\";\n\nimport { Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport user from \"../../images/logo22.png\";\n\nexport default function Navbar2(props) {\n  const [toggle, setToggle] = useState(false);\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  const handleLogout = () => {\n    logOut(dispatch);\n    window.location.href = \"/home\";\n  }; //relative to domain  };\n  const { loading, errorMessageLog, errorMessageSign, successMessage }: any =\n    useAuthState();\n\n  return (\n    <div className=\"nav-c\">\n      <img className=\"logo2\" src={logo2} alt=\"logo\"></img>\n      <div className=\"b\">\n        <Link className=\"certman\" to={\"/home\"}>\n          CERTMAN\n        </Link>\n      </div>\n\n      {/* {props.login || props.signup ? (\n        <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n      ) : userDetails.user ? (\n        <div className=\"b2\">\n          <img className=\"s\" src={s} alt=\"logo\"></img>\n          <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n          <div className=\"s-c\">\n            {\" \"}\n            <Link className=\"certman2\" to={\"/dashboard\"}>\n              CERTMAN\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <div>\n           <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n          <img className=\"logo2\" alt=\"logo2\" src={logo2}></img>\n        </div>\n      )} */}\n\n      <div className=\"nav-right\">\n        {userDetails.user ? (\n          <div className=\"right-container\">\n            <button\n              className=\"icon-btn\"\n              onClick={() => {\n                setToggle(!toggle);\n              }}\n            >\n              <img alt=\"icon\" src={user} className=\"user-icon\"></img>\n            </button>\n          </div>\n        ) : (\n          <div>\n            {\" \"}\n            <Link\n              to={\"/login\"}\n              className={props.login ? \"nav-link nav-active\" : \"nav-link\"}\n            >\n              Login\n            </Link>\n            <Link\n              to={\"/signup\"}\n              className={props.signup ? \"nav-active-2 nav-link\" : \"nav-link\"}\n            >\n              Sign up\n            </Link>{\" \"}\n          </div>\n        )}\n      </div>\n      {toggle && (\n        <div className=\"toggle-div\">\n          <div>\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>\n              Your Uploads\n            </Link>\n          </div>\n          <div>\n            <Link to={\"/upload\"} className=\"toggle-item\">\n              Upload a new Template{\" \"}\n            </Link>\n          </div>\n          {userDetails.user.role === \"Board\" && (\n            <div>\n              <Link className=\"toggle-item\" to={\"/generate\"}>\n                Generate Certificates{\" \"}\n              </Link>\n            </div>\n          )}\n          <div>\n            <button className=\"logout-btn\" onClick={() => handleLogout()}>\n              <Link className=\"toggle-item\"> Logout</Link>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["108","109","110"],"import React, { useState, useEffect } from \"react\";\n\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\n// import styles from \"./login.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./login.css\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  // const [errorMessage2,setEmsg]=useState(false)\n\n  const [password, setPassword] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useAuthDispatch();\n  var { loading, errorMessageLog, errorMessageSign, successMessage }: any =\n    useAuthState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await loginUser(dispatch, { email, password });\n      let user = localStorage.getItem(\"currentUser\")\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n        : \"\";\n      if (user) {\n        props.history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n\n  return (\n    <>\n      <div>\n        <Navbar2 login={true} signup={false} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessageLog ? (\n                <p className=\"error\">{errorMessageLog}</p>\n              ) : null}\n\n              {successMessage ? (\n                <p className=\"success\">{successMessage}</p>\n              ) : null}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              <button\n                className=\"submit-btn\"\n                type=\"submit\"\n                onClick={handleLogin}\n                disabled={loading}\n              >\n                Login\n              </button>\n              <div className=\"forgot\">\n                <Link to={\"/forgot\"} className=\"f-link\">\n                  Forgot Password?\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["139"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":6,"column":11,"nodeType":"146","messageId":"147","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":31,"column":6,"nodeType":"150","endLine":31,"endColumn":8,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":16,"column":18,"nodeType":"146","messageId":"147","endLine":16,"endColumn":33},{"ruleId":"144","severity":1,"message":"153","line":4,"column":27,"nodeType":"146","messageId":"147","endLine":4,"endColumn":33},{"ruleId":"144","severity":1,"message":"154","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":17},{"ruleId":"144","severity":1,"message":"155","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":9},{"ruleId":"144","severity":1,"message":"156","line":18,"column":11,"nodeType":"146","messageId":"147","endLine":18,"endColumn":18},{"ruleId":"144","severity":1,"message":"152","line":18,"column":20,"nodeType":"146","messageId":"147","endLine":18,"endColumn":35},{"ruleId":"144","severity":1,"message":"157","line":18,"column":37,"nodeType":"146","messageId":"147","endLine":18,"endColumn":53},{"ruleId":"144","severity":1,"message":"158","line":18,"column":55,"nodeType":"146","messageId":"147","endLine":18,"endColumn":69},{"ruleId":"144","severity":1,"message":"159","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"157","line":18,"column":35,"nodeType":"146","messageId":"147","endLine":18,"endColumn":51},{"ruleId":"144","severity":1,"message":"160","line":25,"column":11,"nodeType":"146","messageId":"147","endLine":25,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":50,"column":67,"nodeType":"163","messageId":"164","endLine":50,"endColumn":69},{"ruleId":"148","severity":1,"message":"165","line":61,"column":6,"nodeType":"150","endLine":61,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":116,"column":58,"nodeType":"163","messageId":"169","endLine":116,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":126,"column":58,"nodeType":"163","messageId":"169","endLine":126,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":135,"column":59,"nodeType":"163","messageId":"169","endLine":135,"endColumn":60},{"ruleId":"167","severity":1,"message":"168","line":141,"column":58,"nodeType":"163","messageId":"169","endLine":141,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":151,"column":58,"nodeType":"163","messageId":"169","endLine":151,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":158,"column":59,"nodeType":"163","messageId":"169","endLine":158,"endColumn":60},{"ruleId":"167","severity":1,"message":"168","line":165,"column":58,"nodeType":"163","messageId":"169","endLine":165,"endColumn":59},{"ruleId":"167","severity":1,"message":"168","line":172,"column":62,"nodeType":"163","messageId":"169","endLine":172,"endColumn":63},{"ruleId":"148","severity":1,"message":"170","line":181,"column":6,"nodeType":"150","endLine":181,"endColumn":13,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":238,"column":24,"nodeType":"174","messageId":"175","endLine":238,"endColumn":26},{"ruleId":"167","severity":1,"message":"168","line":258,"column":60,"nodeType":"163","messageId":"169","endLine":258,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":268,"column":60,"nodeType":"163","messageId":"169","endLine":268,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":276,"column":61,"nodeType":"163","messageId":"169","endLine":276,"endColumn":62},{"ruleId":"167","severity":1,"message":"168","line":282,"column":60,"nodeType":"163","messageId":"169","endLine":282,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":291,"column":60,"nodeType":"163","messageId":"169","endLine":291,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":298,"column":61,"nodeType":"163","messageId":"169","endLine":298,"endColumn":62},{"ruleId":"167","severity":1,"message":"168","line":305,"column":60,"nodeType":"163","messageId":"169","endLine":305,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":312,"column":64,"nodeType":"163","messageId":"169","endLine":312,"endColumn":65},{"ruleId":"167","severity":1,"message":"168","line":352,"column":58,"nodeType":"163","messageId":"169","endLine":352,"endColumn":59},{"ruleId":"176","severity":1,"message":"177","line":378,"column":13,"nodeType":"178","endLine":383,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":458,"column":23,"nodeType":"178","endLine":458,"endColumn":73},{"ruleId":"176","severity":1,"message":"177","line":469,"column":13,"nodeType":"178","endLine":474,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":502,"column":21,"nodeType":"178","endLine":502,"endColumn":67},{"ruleId":"179","severity":1,"message":"180","line":543,"column":13,"nodeType":"178","endLine":543,"endColumn":56},{"ruleId":"179","severity":1,"message":"180","line":547,"column":11,"nodeType":"178","endLine":547,"endColumn":56},{"ruleId":"179","severity":1,"message":"180","line":551,"column":13,"nodeType":"178","endLine":551,"endColumn":54},{"ruleId":"179","severity":1,"message":"180","line":402,"column":13,"nodeType":"178","endLine":402,"endColumn":29},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'errorMessageLog' is assigned a value but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["184"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["185"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [data]",{"range":"192","text":"193"},"Update the dependencies array to be: [id]",{"range":"194","text":"195"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"196","text":"197"},[812,814],"[data]",[1931,1933],"[id]",[5205,5212],"[certUrl, coordinates, final, type]"]