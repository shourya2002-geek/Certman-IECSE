[{"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"4","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx":"5","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx":"6","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx":"7","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx":"8","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts":"9","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"10","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx":"11","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"12","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"15"},{"size":517,"mtime":1636175743810,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1636175743813,"results":"18","hashOfConfig":"17"},{"size":2806,"mtime":1637120522431,"results":"19","hashOfConfig":"17"},{"size":508,"mtime":1637122109398,"results":"20","hashOfConfig":"17"},{"size":224,"mtime":1637096585686,"results":"21","hashOfConfig":"17"},{"size":1882,"mtime":1637096576781,"results":"22","hashOfConfig":"17"},{"size":977,"mtime":1637096569317,"results":"23","hashOfConfig":"17"},{"size":1629,"mtime":1637123812635,"results":"24","hashOfConfig":"17"},{"size":755,"mtime":1637094922780,"results":"25","hashOfConfig":"17"},{"size":2268,"mtime":1637095777889,"results":"26","hashOfConfig":"17"},{"size":2410,"mtime":1637095829573,"results":"27","hashOfConfig":"17"},{"size":3219,"mtime":1637123997403,"results":"28","hashOfConfig":"17"},{"size":1512,"mtime":1637095530942,"results":"29","hashOfConfig":"17"},{"size":10226,"mtime":1637095880079,"results":"30","hashOfConfig":"17"},{"size":226,"mtime":1637095795374,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"f3ftkz",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx",[],["69","70"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx",["71"],"// import \"./App.css\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Redirect,\r\n// } from \"react-router-dom\";\r\n// import { useCookies } from \"react-cookie\";\r\n// import Home from \"./components/Home/Home\";\r\n// import Login from \"./components/Login/Login\";\r\n// import ForgotPassword from \"./components/Forgot/ForgotPassword\";\r\n// import ResetPassword from \"./components/Forgot/ResetPassword\";\r\n// import Generate from \"./components/Generate/Generate\";\r\n// import SingleImage from \"./components/SingleImage/SingleImage\";\r\n\r\n// function App() {\r\n//   const [cookie, setCookie, removeCookie] = useCookies<any>([\"user\"]);\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Router>\r\n//         <Switch>\r\n//           <Route\r\n//             path=\"/\"\r\n//             exact\r\n//             component={() => <Login cookie={cookie} setCookie={setCookie} />}\r\n//           />\r\n\r\n//           <Route\r\n//             path=\"/reset/:id/:token\"\r\n//             exact\r\n//             component={() => <ResetPassword />}\r\n//           />\r\n\r\n//           <Route path=\"/forgot\" exact component={() => <ForgotPassword />} />\r\n\r\n//           <Route\r\n//             path=\"/home\"\r\n//             render={() =>\r\n//               cookie.user ? (\r\n//                 <Home cookie={cookie} removeCookie={removeCookie} />\r\n//               ) : (\r\n//                 <Redirect to=\"/\" />\r\n//               )\r\n//             }\r\n//           />\r\n//           {cookie.user ? (\r\n//             <Route\r\n//               path=\"/generate\"\r\n//               exact\r\n//               component={() => (\r\n//                 <Generate cookie={cookie} removeCookie={removeCookie} />\r\n//               )}\r\n//             />\r\n//           ) : (\r\n//             <Redirect to=\"/\" />\r\n//           )}\r\n//           <Route\r\n//             path=\"/single-image/:_id\"\r\n//             exact\r\n//             component={() => <SingleImage />}\r\n//           />\r\n//         </Switch>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"./Config/routes\";\r\nimport { AuthProvider } from \"./Context\";\r\nimport AppRoute from \"./Components/AppRoute\";\r\n\r\nfunction App() { \r\n  return (\r\n\t<div className=\"App\">\r\n\r\n      <AuthProvider>\r\n        <Router>\r\n          <Switch>\r\n            {routes.map((route) => {\r\n              return (\r\n                <AppRoute\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                  isPrivate={route.isPrivate}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </Router>\r\n      </AuthProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx",["72","73"],"const ROOT_URL = \"http://localhost:5000\";\r\n\r\nexport async function loginUser(dispatch, loginPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_LOGIN\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: res.data,\r\n        status: res.status,\r\n      });\r\n\r\n      return res;\r\n    }\r\n\r\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function signUpUser(dispatch, signUpPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(signUpPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_SIGNUP\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      return res.status;\r\n    }\r\n\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function logOut(dispatch) {\r\n  dispatch({ type: \"LOGOUT\" });\r\n  localStorage.removeItem(\"currentUser\");\r\n  localStorage.removeItem(\"token\");\r\n}\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx",["74","75","76","77"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["78","79"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport styles from \"./login.module.css\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const { loading, errorMessage, successMessage }:any = useAuthState();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await loginUser(dispatch, { email, password });\r\n      let user = localStorage.getItem(\"currentUser\")\r\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n        : \"\";\r\n      if (user) {\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div style={{width:200}}>\r\n          <h1>Login Page</h1>\r\n          <div>\r\n            {errorMessage ? (\r\n              <p className={styles.error}>{errorMessage}</p>\r\n            ) : null}\r\n\r\n            {successMessage ? (\r\n              <p className={styles.success}>{successMessage}</p>\r\n            ) : null}\r\n          </div>\r\n          <form>\r\n            <div className={styles.loginForm}>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={handleLogin} disabled={loading}>\r\n              login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx",["80"],"import React, { useState } from \"react\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport styles from \"./signup.module.css\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const { loading, errorMessage }:any = useAuthState();\r\n\r\n  const handleSignUp = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await signUpUser(dispatch, { name, email, password, role: 'MC' });\r\n      if (res == \"success\") {\r\n        props.history.push(\"./login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div style={{width:200}}>\r\n          <h1>SignUp Page</h1>\r\n          <div>\r\n            {errorMessage ? (\r\n              <p className={styles.error}>{errorMessage}</p>\r\n            ) : null}\r\n          </div>\r\n          <form>\r\n            <div className={styles.loginForm}>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"text\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={handleSignUp} disabled={loading}>\r\n              Signup\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",["81","82","83","84"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",["85","86","87","88","89","90"],"import \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nfunction Generate(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  function handleLogout() {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  }\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home-top\">\r\n        <Link to={\"/dashboard\"}>\r\n          {\" \"}\r\n          <button className=\"home-button-2\">Back To Home</button>\r\n        </Link>\r\n        <button onClick={() => handleLogout()} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"home-main\"></div>\r\n      <div className=\"home-header\">Choose a template</div>\r\n\r\n      {uploadedCerts.map((cert) => (\r\n        <Link to={\"/single-cert/\" + cert._id}>\r\n          <img src={cert.certUrl} className=\"home-photo\" />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generate;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function SingleImage(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  const id = window.location.pathname.slice(14);\r\n\r\n  const [csv, setCsv] = useState(\"\");\r\n  const [certUrl, setCertUrl] = useState(\"\");\r\n  const [arr, setArr] = useState([]);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [emailCount, setEmailCount] = useState(0);\r\n  const [csvError, setCsvError] = useState(false);\r\n  const [final, setFinal] = useState(false);\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  function onFileChange(e) {\r\n    setCsv(e.target.files[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\" + id)\r\n      .then((response:any) => {\r\n        console.log(response);\r\n        setCertUrl(response.data.certUrl);\r\n        setCoordinates(response.data.coordinates);\r\n        setFinal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"This fucker ran\");\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = 700;\r\n    canvas.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }, [final]);\r\n\r\n  const emailHandler = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n\r\n    console.log(arr);\r\n    setShow(true);\r\n    console.log(certUrl);\r\n    function toBuffer(ab) {\r\n      var buf = Buffer.alloc(ab.byteLength);\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i < buf.length; ++i) {\r\n        buf[i] = view[i];\r\n      }\r\n      return buf;\r\n    }\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var canvasUrl, canvasBuffer;\r\n      var user = arr[i];\r\n      console.log(\"Sending:\", user);\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", user.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(user.name, 280, 300);\r\n        var canvas2 = document.getElementById(\"myCanvas\");\r\n        // var imageData = ctx.getImageData(0, 0, 700, 500);\r\n        // canvasUrl = imageData.data.buffer\r\n        // canvasBuffer=toBuffer(canvasUrl)\r\n        // console.log(canvasUrl)\r\n      };\r\n      var data = {\r\n        subject,\r\n        content,\r\n        user,\r\n        certUrl,\r\n      };\r\n      await axios\r\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\r\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n    setShow(false);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"csv\", csv);\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\r\n      .then((res:any) => {\r\n        setArr(res.data);\r\n        const modalClose = document.getElementById(\"modalClose\");\r\n        modalClose.click();\r\n      });\r\n  };\r\n\r\n  function download() {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    console.log(arr);\r\n    arr.map((element) => {\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", element.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(element.name, 280, 300);\r\n        var canvas2:any = document.getElementById(\"myCanvas\");\r\n        var url = canvas2.toDataURL(\"image/png\");\r\n\r\n        var link = document.createElement(\"a\");\r\n        link.download = `${element.name}.png`;\r\n        link.href = url;\r\n        link.click();\r\n      };\r\n    });\r\n    const elementCanvas = document.createElement(\"canvas\");\r\n    elementCanvas.classList.add(\"hide-canvas\");\r\n\r\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\r\n    const canvasObj = canvasRef.current;\r\n    const ctx = canvasObj.getContext(\"2d\");\r\n    canvasObj.width = 700;\r\n    canvasObj.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home-top\">\r\n        <Link to={\"/home\"}>\r\n          {\" \"}\r\n          <button className=\"home-button-2\">Back To Home</button>\r\n        </Link>\r\n\r\n        <button onClick={() => handleLogout()} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <a className=\"modal-open\" href=\"#modal\">\r\n          {\" \"}\r\n          <button className=\"home-button\">Upload CSV File</button>\r\n        </a>\r\n        <button className=\"home-button\" onClick={download}>\r\n          Download All\r\n        </button>\r\n        <a className=\"modal-open\" href=\"#modal2\">\r\n          <button className=\"home-button\">Mail Certifcates</button>\r\n        </a>\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Upload CSV File</h3>\r\n            <div className=\"modal-area\">\r\n              <div className=\"row\">\r\n                <form onSubmit={onSubmit} id=\"csvForm\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className=\"upload-input\"\r\n                      type=\"file\"\r\n                      onChange={onFileChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" id=\"modal2\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Mail Certificates</h3>\r\n            <div className=\"modal-area\">\r\n              {show ? (\r\n                <div className=\"count\">\r\n                  Sending mails... <br />\r\n                  Sent {emailCount}/{arr.length} mails\r\n                </div>\r\n              ) : null}\r\n              <div className=\"row\">\r\n                <form onSubmit={emailHandler}>\r\n                  <div className=\"form-group\">\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Subject\"\r\n                        required\r\n                        type=\"text\"\r\n                        onChange={(e) => setSubject(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Content For Mail\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Send Mail\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          id=\"myCanvas\"\r\n          className=\"cnvas2\"\r\n          width=\"700\"\r\n          height=\"200\"\r\n        ></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":70,"column":35,"nodeType":"117","messageId":"118","endLine":70,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":18,"column":20,"nodeType":"121","messageId":"122","endLine":18,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":53,"column":20,"nodeType":"121","messageId":"122","endLine":53,"endColumn":22},{"ruleId":"115","severity":1,"message":"123","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"124","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"125","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"126","line":3,"column":5,"nodeType":"117","messageId":"118","endLine":3,"endColumn":9},{"ruleId":"115","severity":1,"message":"127","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"128","line":17,"column":11,"nodeType":"117","messageId":"118","endLine":17,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":19,"column":15,"nodeType":"121","messageId":"122","endLine":19,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":29,"column":6,"nodeType":"131","endLine":29,"endColumn":8,"suggestions":"132"},{"ruleId":"119","severity":1,"message":"120","line":62,"column":32,"nodeType":"121","messageId":"122","endLine":62,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":69,"column":13,"nodeType":"135","endLine":74,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":101,"column":9,"nodeType":"135","endLine":101,"endColumn":58},{"ruleId":"115","severity":1,"message":"138","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"139","line":9,"column":9,"nodeType":"117","messageId":"118","endLine":9,"endColumn":20},{"ruleId":"115","severity":1,"message":"140","line":15,"column":10,"nodeType":"117","messageId":"118","endLine":15,"endColumn":14},{"ruleId":"115","severity":1,"message":"141","line":15,"column":16,"nodeType":"117","messageId":"118","endLine":15,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":29,"column":6,"nodeType":"131","endLine":29,"endColumn":8,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":47,"column":11,"nodeType":"135","endLine":47,"endColumn":60},{"ruleId":"115","severity":1,"message":"138","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":20},{"ruleId":"115","severity":1,"message":"139","line":9,"column":9,"nodeType":"117","messageId":"118","endLine":9,"endColumn":20},{"ruleId":"115","severity":1,"message":"143","line":18,"column":10,"nodeType":"117","messageId":"118","endLine":18,"endColumn":21},{"ruleId":"115","severity":1,"message":"144","line":19,"column":10,"nodeType":"117","messageId":"118","endLine":19,"endColumn":14},{"ruleId":"115","severity":1,"message":"145","line":19,"column":16,"nodeType":"117","messageId":"118","endLine":19,"endColumn":23},{"ruleId":"115","severity":1,"message":"146","line":22,"column":10,"nodeType":"117","messageId":"118","endLine":22,"endColumn":18},{"ruleId":"129","severity":1,"message":"147","line":48,"column":6,"nodeType":"131","endLine":48,"endColumn":8,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":72,"column":6,"nodeType":"131","endLine":72,"endColumn":13,"suggestions":"150"},{"ruleId":"119","severity":1,"message":"120","line":75,"column":13,"nodeType":"121","messageId":"122","endLine":75,"endColumn":15},{"ruleId":"115","severity":1,"message":"151","line":86,"column":14,"nodeType":"117","messageId":"118","endLine":86,"endColumn":22},{"ruleId":"115","severity":1,"message":"152","line":95,"column":11,"nodeType":"117","messageId":"118","endLine":95,"endColumn":20},{"ruleId":"115","severity":1,"message":"153","line":95,"column":22,"nodeType":"117","messageId":"118","endLine":95,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":109,"column":27,"nodeType":"156","messageId":"157","endLine":123,"endColumn":8},{"ruleId":"115","severity":1,"message":"158","line":118,"column":13,"nodeType":"117","messageId":"118","endLine":118,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":132,"column":46,"nodeType":"161","messageId":"162","endLine":132,"endColumn":47},{"ruleId":"119","severity":1,"message":"120","line":139,"column":13,"nodeType":"121","messageId":"122","endLine":139,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":158,"column":13,"nodeType":"121","messageId":"122","endLine":158,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":164,"column":23,"nodeType":"165","messageId":"166","endLine":164,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":244,"column":13,"nodeType":"135","endLine":249,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":276,"column":13,"nodeType":"135","endLine":281,"endColumn":14},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.",["170"],"'coordinates' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'certUrl'. Either include it or remove the dependency array.",["172"],"'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'background', 'user'.","FunctionExpression","unsafeRefs","'canvas2' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [uploadedCerts]",{"range":"180","text":"181"},{"range":"182","text":"181"},"Update the dependencies array to be: [id]",{"range":"183","text":"184"},"Update the dependencies array to be: [certUrl, final]",{"range":"185","text":"186"},[813,815],"[uploadedCerts]",[837,839],[1503,1505],"[id]",[2111,2118],"[certUrl, final]"]