[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"17"},{"size":517,"mtime":1637127661574,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1637127661575,"results":"20","hashOfConfig":"19"},{"size":2806,"mtime":1637127661562,"results":"21","hashOfConfig":"19"},{"size":865,"mtime":1637211253171,"results":"22","hashOfConfig":"19"},{"size":508,"mtime":1637127661563,"results":"23","hashOfConfig":"19"},{"size":224,"mtime":1637127661565,"results":"24","hashOfConfig":"19"},{"size":2268,"mtime":1637127661568,"results":"25","hashOfConfig":"19"},{"size":3325,"mtime":1637241099645,"results":"26","hashOfConfig":"19"},{"size":1512,"mtime":1637127661567,"results":"27","hashOfConfig":"19"},{"size":2410,"mtime":1637127661569,"results":"28","hashOfConfig":"19"},{"size":226,"mtime":1637127661569,"results":"29","hashOfConfig":"19"},{"size":1882,"mtime":1637127661564,"results":"30","hashOfConfig":"19"},{"size":10285,"mtime":1637205728646,"results":"31","hashOfConfig":"19"},{"size":977,"mtime":1637127661564,"results":"32","hashOfConfig":"19"},{"size":1629,"mtime":1637127661565,"results":"33","hashOfConfig":"19"},{"size":1758,"mtime":1637239215706,"results":"34","hashOfConfig":"19"},{"size":15363,"mtime":1637257669518,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h0escr",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["80","81"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",["82"],"// import \"./App.css\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Redirect,\r\n// } from \"react-router-dom\";\r\n// import { useCookies } from \"react-cookie\";\r\n// import Home from \"./components/Home/Home\";\r\n// import Login from \"./components/Login/Login\";\r\n// import ForgotPassword from \"./components/Forgot/ForgotPassword\";\r\n// import ResetPassword from \"./components/Forgot/ResetPassword\";\r\n// import Generate from \"./components/Generate/Generate\";\r\n// import SingleImage from \"./components/SingleImage/SingleImage\";\r\n\r\n// function App() {\r\n//   const [cookie, setCookie, removeCookie] = useCookies<any>([\"user\"]);\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Router>\r\n//         <Switch>\r\n//           <Route\r\n//             path=\"/\"\r\n//             exact\r\n//             component={() => <Login cookie={cookie} setCookie={setCookie} />}\r\n//           />\r\n\r\n//           <Route\r\n//             path=\"/reset/:id/:token\"\r\n//             exact\r\n//             component={() => <ResetPassword />}\r\n//           />\r\n\r\n//           <Route path=\"/forgot\" exact component={() => <ForgotPassword />} />\r\n\r\n//           <Route\r\n//             path=\"/home\"\r\n//             render={() =>\r\n//               cookie.user ? (\r\n//                 <Home cookie={cookie} removeCookie={removeCookie} />\r\n//               ) : (\r\n//                 <Redirect to=\"/\" />\r\n//               )\r\n//             }\r\n//           />\r\n//           {cookie.user ? (\r\n//             <Route\r\n//               path=\"/generate\"\r\n//               exact\r\n//               component={() => (\r\n//                 <Generate cookie={cookie} removeCookie={removeCookie} />\r\n//               )}\r\n//             />\r\n//           ) : (\r\n//             <Redirect to=\"/\" />\r\n//           )}\r\n//           <Route\r\n//             path=\"/single-image/:_id\"\r\n//             exact\r\n//             component={() => <SingleImage />}\r\n//           />\r\n//         </Switch>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"./Config/routes\";\r\nimport { AuthProvider } from \"./Context\";\r\nimport AppRoute from \"./Components/AppRoute\";\r\n\r\nfunction App() { \r\n  return (\r\n\t<div className=\"App\">\r\n\r\n      <AuthProvider>\r\n        <Router>\r\n          <Switch>\r\n            {routes.map((route) => {\r\n              return (\r\n                <AppRoute\r\n                  key={route.path}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                  isPrivate={route.isPrivate}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </Router>\r\n      </AuthProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["83","84"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport styles from \"./login.module.css\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const { loading, errorMessage, successMessage }:any = useAuthState();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await loginUser(dispatch, { email, password });\r\n      let user = localStorage.getItem(\"currentUser\")\r\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n        : \"\";\r\n      if (user) {\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div style={{width:200}}>\r\n          <h1>Login Page</h1>\r\n          <div>\r\n            {errorMessage ? (\r\n              <p className={styles.error}>{errorMessage}</p>\r\n            ) : null}\r\n\r\n            {successMessage ? (\r\n              <p className={styles.success}>{successMessage}</p>\r\n            ) : null}\r\n          </div>\r\n          <form>\r\n            <div className={styles.loginForm}>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={handleLogin} disabled={loading}>\r\n              login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",["85","86","87","88","89"],"import \"./dashboard.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from \"../Navbar\";\r\nfunction Home2(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"certUrl\", cert);\r\n    console.log(formData);\r\n    await axios\r\n      .post(   \"http://localhost:5000/api/cert/cert-upload\", formData, {})\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        //post\r\n        //route??\r\n        \r\n      });\r\n    const modalClose = document.getElementById(\"modalClose\");\r\n    modalClose.click();\r\n    window.location.reload();\r\n  };\r\n\r\n  function onFileChange(e) {\r\n    setCert(e.target.files[0]);\r\n  }\r\n\r\n  console.log(userDetails.user.role);\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar/>\r\n      {/* <div className=\"home-top\">\r\n        <button onClick={() => handleLogout()} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div> */}\r\n      <div className=\"home-main\">\r\n        <a className=\"modal-open\" href=\"#modal\">\r\n          {\" \"}\r\n          <button className=\"home-button\">Upload a new Template</button>\r\n        </a>\r\n        {userDetails.user.role == \"Board\" && (\r\n          <Link to={\"/generate\"}>\r\n          <button className=\"home-button\">Generate Certificates</button>\r\n          </Link>\r\n        )}\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Upload A New Template</h3>\r\n            <div className=\"modal-area\">\r\n              <div className=\"row\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\"form-group\">\r\n                  <input\r\n                      className=\"upload-input\"\r\n                      type=\"file\"\r\n                      onChange={onFileChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"home-header\">Existing Templates</div>\r\n      {uploadedCerts.map((cert) => (\r\n        <img src={cert.certUrl} className=\"home-photo\" />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home2;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",["90","91","92","93","94","95"],"import \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nfunction Generate(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  function handleLogout() {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  }\r\n\r\n  const [cert, setCert] = useState(\"\");\r\n  const [uploadedCerts, setUploadedCerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        setUploadedCerts(res.data);\r\n        console.log(uploadedCerts);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home-top\">\r\n        <Link to={\"/dashboard\"}>\r\n          {\" \"}\r\n          <button className=\"home-button-2\">Back To Home</button>\r\n        </Link>\r\n        <button onClick={() => handleLogout()} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"home-main\"></div>\r\n      <div className=\"home-header\">Choose a template</div>\r\n\r\n      {uploadedCerts.map((cert) => (\r\n        <Link to={\"/single-cert/\" + cert._id}>\r\n          <img src={cert.certUrl} className=\"home-photo\" />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generate;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\index.tsx",["96"],"import React, { useState } from \"react\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport styles from \"./signup.module.css\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const { loading, errorMessage }:any = useAuthState();\r\n\r\n  const handleSignUp = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await signUpUser(dispatch, { name, email, password, role: 'MC' });\r\n      if (res == \"success\") {\r\n        props.history.push(\"./login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div style={{width:200}}>\r\n          <h1>SignUp Page</h1>\r\n          <div>\r\n            {errorMessage ? (\r\n              <p className={styles.error}>{errorMessage}</p>\r\n            ) : null}\r\n          </div>\r\n          <form>\r\n            <div className={styles.loginForm}>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"text\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div className={styles.loginFormItem}>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={handleSignUp} disabled={loading}>\r\n              Signup\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",["97","98"],"const ROOT_URL = \"http://localhost:5000\";\r\n\r\nexport async function loginUser(dispatch, loginPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_LOGIN\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: res.data,\r\n        status: res.status,\r\n      });\r\n\r\n      return res;\r\n    }\r\n\r\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function signUpUser(dispatch, signUpPayload) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(signUpPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_SIGNUP\" });\r\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\r\n    let res = await response.json();\r\n\r\n    console.log(res.data);\r\n    console.log(res.status);\r\n\r\n    if (res.status == \"success\") {\r\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      return res.status;\r\n    }\r\n\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\r\n    console.log(res.error);\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function logOut(dispatch) {\r\n  dispatch({ type: \"LOGOUT\" });\r\n  localStorage.removeItem(\"currentUser\");\r\n  localStorage.removeItem(\"token\");\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function SingleImage(props) {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  const id = window.location.pathname.split('/')[2];\r\n\r\n  const [csv, setCsv] = useState(\"\");\r\n  const [certUrl, setCertUrl] = useState(\"\");\r\n  const [arr, setArr] = useState([]);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [emailCount, setEmailCount] = useState(0);\r\n  const [csvError, setCsvError] = useState(false);\r\n  const [final, setFinal] = useState(false);\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  function onFileChange(e) {\r\n    setCsv(e.target.files[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/cert/\" + id)\r\n      .then((response:any) => {\r\n        console.log(response);\r\n        console.log(\"jrr;;;oo\");\r\n        setCertUrl(response.data.certUrl);\r\n        setCoordinates(response.data.coordinates);\r\n        setFinal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"This fucker ran\");\r\n    console.log(id)\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = 700;\r\n    canvas.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }, [final]);\r\n\r\n  const emailHandler = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n\r\n    console.log(arr);\r\n    setShow(true);\r\n    console.log(certUrl);\r\n    function toBuffer(ab) {\r\n      var buf = Buffer.alloc(ab.byteLength);\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i < buf.length; ++i) {\r\n        buf[i] = view[i];\r\n      }\r\n      return buf;\r\n    }\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var canvasUrl, canvasBuffer;\r\n      var user = arr[i];\r\n      console.log(\"Sending:\", user);\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", user.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(user.name, 280, 300);\r\n        var canvas2 = document.getElementById(\"myCanvas\");\r\n        // var imageData = ctx.getImageData(0, 0, 700, 500);\r\n        // canvasUrl = imageData.data.buffer\r\n        // canvasBuffer=toBuffer(canvasUrl)\r\n        // console.log(canvasUrl)\r\n      };\r\n      var data = {\r\n        subject,\r\n        content,\r\n        user,\r\n        certUrl,\r\n      };\r\n      await axios\r\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\r\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n    setShow(false);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"csv\", csv);\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\r\n      .then((res:any) => {\r\n        setArr(res.data);\r\n        const modalClose = document.getElementById(\"modalClose\");\r\n        modalClose.click();\r\n      });\r\n  };\r\n\r\n  function download() {\r\n    if (csv == \"\") {\r\n      setCsvError(true);\r\n      alert(\"No csv uploaded!\");\r\n      return;\r\n    }\r\n    console.log(arr);\r\n    arr.map((element) => {\r\n      const elementCanvas = document.createElement(\"canvas\");\r\n      elementCanvas.setAttribute(\"ref\", element.name);\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext(\"2d\");\r\n      canvasObj.width = 700;\r\n      canvasObj.height = 500;\r\n\r\n      var background = new Image();\r\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n      background.src = certUrl;\r\n\r\n      background.onload = function () {\r\n        ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.textBaseline = \"top\";\r\n        ctx.fillStyle = \"black\";\r\n\r\n        ctx.fillText(element.name, 280, 300);\r\n        var canvas2:any = document.getElementById(\"myCanvas\");\r\n        var url = canvas2.toDataURL(\"image/png\");\r\n\r\n        var link = document.createElement(\"a\");\r\n        link.download = `${element.name}.png`;\r\n        link.href = url;\r\n        link.click();\r\n      };\r\n    });\r\n    const elementCanvas = document.createElement(\"canvas\");\r\n    elementCanvas.classList.add(\"hide-canvas\");\r\n\r\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\r\n    const canvasObj = canvasRef.current;\r\n    const ctx = canvasObj.getContext(\"2d\");\r\n    canvasObj.width = 700;\r\n    canvasObj.height = 500;\r\n\r\n    var background = new Image();\r\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\r\n    background.src = certUrl;\r\n\r\n    background.onload = function () {\r\n      ctx.drawImage(background, 0, 0, 700, 500);\r\n\r\n      ctx.font = \"20px Arial\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.textBaseline = \"top\";\r\n      ctx.fillStyle = \"black\";\r\n\r\n      ctx.fillText(\"Person Name\", 280, 300);\r\n    };\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home-top\">\r\n        <Link to={\"/home\"}>\r\n          {\" \"}\r\n          <button className=\"home-button-2\">Back To Home</button>\r\n        </Link>\r\n\r\n        <button onClick={() => handleLogout()} className=\"logout-button\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <a className=\"modal-open\" href=\"#modal\">\r\n          {\" \"}\r\n          <button className=\"home-button\">Upload CSV File</button>\r\n        </a>\r\n        <button className=\"home-button\" onClick={download}>\r\n          Download All\r\n        </button>\r\n        <a className=\"modal-open\" href=\"#modal2\">\r\n          <button className=\"home-button\">Mail Certifcates</button>\r\n        </a>\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Upload CSV File</h3>\r\n            <div className=\"modal-area\">\r\n              <div className=\"row\">\r\n                <form onSubmit={onSubmit} id=\"csvForm\">\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      className=\"upload-input\"\r\n                      type=\"file\"\r\n                      onChange={onFileChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" id=\"modal2\">\r\n          <div className=\"modal-content\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              id=\"modalClose\"\r\n              title=\"Close Modal\"\r\n            >\r\n              X\r\n            </a>\r\n            <h3 className=\"modal-title\">Mail Certificates</h3>\r\n            <div className=\"modal-area\">\r\n              {show ? (\r\n                <div className=\"count\">\r\n                  Sending mails... <br />\r\n                  Sent {emailCount}/{arr.length} mails\r\n                </div>\r\n              ) : null}\r\n              <div className=\"row\">\r\n                <form onSubmit={emailHandler}>\r\n                  <div className=\"form-group\">\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Subject\"\r\n                        required\r\n                        type=\"text\"\r\n                        onChange={(e) => setSubject(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        className=\"mail-input\"\r\n                        placeholder=\"Enter Content For Mail\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"upload-button\" type=\"submit\">\r\n                      Send Mail\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          id=\"myCanvas\"\r\n          className=\"cnvas2\"\r\n          width=\"700\"\r\n          height=\"200\"\r\n        ></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",["119","120","121","122"],"import React, { useState, useReducer } from \"react\";\r\n\r\nlet user = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n  : \"\";\r\nlet token = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).token\r\n  : \"\";\r\n\r\nexport const initialState = {\r\n  user: \"\" || JSON.parse(localStorage.getItem(\"currentUser\")),\r\n  token: \"\" || token,\r\n  loading: false,\r\n  errorMessage: null,\r\n  successMessage: null,\r\n};\r\n\r\nexport const AuthReducer = (initialState, action) => {\r\n  switch (action.type) {\r\n    case \"REQUEST_LOGIN\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        user: JSON.parse(localStorage.getItem(\"currentUser\")),\r\n        successMessage: \"Logged in Successfully\",\r\n        loading: false,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...initialState,\r\n        user: \"\",\r\n        token: \"\",\r\n      };\r\n\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n      };\r\n\r\n    case \"REQUEST_SIGNUP\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        successMessage: \"Signed up Successfully\",\r\n        loading: false,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar\\index.tsx",["123","124","125"],"import React, { useState } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport logo from \"../../images/iecse_logo.svg\";\r\nimport user from \"../../images/user_icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function NavBar(props) {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    window.location.href = '/login';\r\n    \r\n    } //relative to domain  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-container\">\r\n        <div className=\"left-container\">\r\n          <Link to={\"/dashboard\"}>\r\n            <img src={logo} />\r\n          </Link>\r\n          <span className=\"cert-h\">Certman</span>\r\n        </div>\r\n        <div className=\"right-container\">\r\n          <button className=\"icon-btn\" onClick={() => setToggle(!toggle)}>\r\n            <img src={user} className=\"user-icon\"></img>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {toggle && (\r\n        <div className=\"toggle-div\">\r\n          <div>\r\n            <Link className=\"toggle-item\">Your Uploads</Link>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/upload\"} className=\"toggle-item\">Upload a new Template </Link>\r\n          </div>\r\n          {userDetails.user.role == \"Board\" && (\r\n            <div>\r\n              <Link className=\"toggle-item\">Generate Certificates </Link>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <button className=\"logout-btn\" onClick={()=>handleLogout()}>\r\n            <Link className=\"toggle-item\"> Logout</Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}{\" \"}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":70,"column":35,"nodeType":"154","messageId":"155","endLine":70,"endColumn":40},{"ruleId":"152","severity":1,"message":"156","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"157","line":17,"column":11,"nodeType":"154","messageId":"155","endLine":17,"endColumn":14},{"ruleId":"152","severity":1,"message":"158","line":14,"column":9,"nodeType":"154","messageId":"155","endLine":14,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":30,"column":6,"nodeType":"161","endLine":30,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":68,"column":32,"nodeType":"165","messageId":"166","endLine":68,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":75,"column":13,"nodeType":"169","endLine":80,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":107,"column":9,"nodeType":"169","endLine":107,"endColumn":58},{"ruleId":"152","severity":1,"message":"172","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":20},{"ruleId":"152","severity":1,"message":"173","line":9,"column":9,"nodeType":"154","messageId":"155","endLine":9,"endColumn":20},{"ruleId":"152","severity":1,"message":"174","line":15,"column":10,"nodeType":"154","messageId":"155","endLine":15,"endColumn":14},{"ruleId":"152","severity":1,"message":"175","line":15,"column":16,"nodeType":"154","messageId":"155","endLine":15,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":29,"column":6,"nodeType":"161","endLine":29,"endColumn":8,"suggestions":"176"},{"ruleId":"170","severity":1,"message":"171","line":47,"column":11,"nodeType":"169","endLine":47,"endColumn":60},{"ruleId":"163","severity":1,"message":"164","line":19,"column":15,"nodeType":"165","messageId":"166","endLine":19,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":18,"column":20,"nodeType":"165","messageId":"166","endLine":18,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":53,"column":20,"nodeType":"165","messageId":"166","endLine":53,"endColumn":22},{"ruleId":"152","severity":1,"message":"172","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":20},{"ruleId":"152","severity":1,"message":"173","line":9,"column":9,"nodeType":"154","messageId":"155","endLine":9,"endColumn":20},{"ruleId":"152","severity":1,"message":"177","line":19,"column":10,"nodeType":"154","messageId":"155","endLine":19,"endColumn":21},{"ruleId":"152","severity":1,"message":"178","line":20,"column":10,"nodeType":"154","messageId":"155","endLine":20,"endColumn":14},{"ruleId":"152","severity":1,"message":"179","line":20,"column":16,"nodeType":"154","messageId":"155","endLine":20,"endColumn":23},{"ruleId":"152","severity":1,"message":"180","line":23,"column":10,"nodeType":"154","messageId":"155","endLine":23,"endColumn":18},{"ruleId":"159","severity":1,"message":"181","line":50,"column":6,"nodeType":"161","endLine":50,"endColumn":8,"suggestions":"182"},{"ruleId":"159","severity":1,"message":"183","line":74,"column":6,"nodeType":"161","endLine":74,"endColumn":13,"suggestions":"184"},{"ruleId":"163","severity":1,"message":"164","line":77,"column":13,"nodeType":"165","messageId":"166","endLine":77,"endColumn":15},{"ruleId":"152","severity":1,"message":"185","line":88,"column":14,"nodeType":"154","messageId":"155","endLine":88,"endColumn":22},{"ruleId":"152","severity":1,"message":"186","line":97,"column":11,"nodeType":"154","messageId":"155","endLine":97,"endColumn":20},{"ruleId":"152","severity":1,"message":"187","line":97,"column":22,"nodeType":"154","messageId":"155","endLine":97,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":111,"column":27,"nodeType":"190","messageId":"191","endLine":125,"endColumn":8},{"ruleId":"152","severity":1,"message":"192","line":120,"column":13,"nodeType":"154","messageId":"155","endLine":120,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":134,"column":46,"nodeType":"195","messageId":"196","endLine":134,"endColumn":47},{"ruleId":"163","severity":1,"message":"164","line":141,"column":13,"nodeType":"165","messageId":"166","endLine":141,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":160,"column":13,"nodeType":"165","messageId":"166","endLine":160,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":166,"column":23,"nodeType":"199","messageId":"200","endLine":166,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":246,"column":13,"nodeType":"169","endLine":251,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":278,"column":13,"nodeType":"169","endLine":283,"endColumn":14},{"ruleId":"152","severity":1,"message":"201","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"202","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"203","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":37},{"ruleId":"152","severity":1,"message":"204","line":3,"column":5,"nodeType":"154","messageId":"155","endLine":3,"endColumn":9},{"ruleId":"170","severity":1,"message":"171","line":23,"column":13,"nodeType":"169","endLine":23,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":29,"column":13,"nodeType":"169","endLine":29,"endColumn":51},{"ruleId":"163","severity":1,"message":"164","line":41,"column":34,"nodeType":"165","messageId":"166","endLine":41,"endColumn":36},{"ruleId":"152","severity":1,"message":"205","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":9},{"ruleId":"152","severity":1,"message":"177","line":108,"column":9,"nodeType":"154","messageId":"155","endLine":108,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":175,"column":24,"nodeType":"165","messageId":"166","endLine":175,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":175,"column":40,"nodeType":"165","messageId":"166","endLine":175,"endColumn":42},{"ruleId":"193","severity":1,"message":"194","line":188,"column":65,"nodeType":"195","messageId":"196","endLine":188,"endColumn":66},{"ruleId":"193","severity":1,"message":"194","line":197,"column":66,"nodeType":"195","messageId":"196","endLine":197,"endColumn":67},{"ruleId":"163","severity":1,"message":"164","line":205,"column":23,"nodeType":"165","messageId":"166","endLine":205,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":218,"column":65,"nodeType":"195","messageId":"196","endLine":218,"endColumn":66},{"ruleId":"193","severity":1,"message":"194","line":227,"column":66,"nodeType":"195","messageId":"196","endLine":227,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":244,"column":66,"nodeType":"195","messageId":"196","endLine":244,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":253,"column":67,"nodeType":"195","messageId":"196","endLine":253,"endColumn":68},{"ruleId":"193","severity":1,"message":"194","line":270,"column":65,"nodeType":"195","messageId":"196","endLine":270,"endColumn":66},{"ruleId":"193","severity":1,"message":"194","line":279,"column":66,"nodeType":"195","messageId":"196","endLine":279,"endColumn":67},{"ruleId":"163","severity":1,"message":"164","line":287,"column":23,"nodeType":"165","messageId":"166","endLine":287,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":300,"column":65,"nodeType":"195","messageId":"196","endLine":300,"endColumn":66},{"ruleId":"193","severity":1,"message":"194","line":309,"column":66,"nodeType":"195","messageId":"196","endLine":309,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":326,"column":66,"nodeType":"195","messageId":"196","endLine":326,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":335,"column":67,"nodeType":"195","messageId":"196","endLine":335,"endColumn":68},{"ruleId":"193","severity":1,"message":"194","line":352,"column":65,"nodeType":"195","messageId":"196","endLine":352,"endColumn":66},{"ruleId":"193","severity":1,"message":"194","line":361,"column":66,"nodeType":"195","messageId":"196","endLine":361,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":378,"column":69,"nodeType":"195","messageId":"196","endLine":378,"endColumn":70},{"ruleId":"193","severity":1,"message":"194","line":387,"column":70,"nodeType":"195","messageId":"196","endLine":387,"endColumn":71},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.",["209"],"'coordinates' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has missing dependencies: 'certUrl' and 'id'. Either include them or remove the dependency array.",["211"],"'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'background', 'user'.","FunctionExpression","unsafeRefs","'canvas2' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.","'$' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"212","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [uploadedCerts]",{"range":"219","text":"220"},{"range":"221","text":"220"},"Update the dependencies array to be: [id]",{"range":"222","text":"223"},"Update the dependencies array to be: [certUrl, final, id]",{"range":"224","text":"225"},[846,848],"[uploadedCerts]",[837,839],[1543,1545],"[id]",[2170,2177],"[certUrl, final, id]"]