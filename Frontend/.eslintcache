[{"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"7","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"8","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"10","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"11","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"12","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx":"20","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx":"21","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx":"22"},{"size":517,"mtime":1641789374130,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1641789374133,"results":"25","hashOfConfig":"24"},{"size":1355,"mtime":1641789374057,"results":"26","hashOfConfig":"24"},{"size":1181,"mtime":1641789374062,"results":"27","hashOfConfig":"24"},{"size":549,"mtime":1641789374060,"results":"28","hashOfConfig":"24"},{"size":3273,"mtime":1641789374078,"results":"29","hashOfConfig":"24"},{"size":2246,"mtime":1641794846796,"results":"30","hashOfConfig":"24"},{"size":1799,"mtime":1641789374114,"results":"31","hashOfConfig":"24"},{"size":244,"mtime":1641789374067,"results":"32","hashOfConfig":"24"},{"size":5053,"mtime":1641792426428,"results":"33","hashOfConfig":"24"},{"size":839,"mtime":1641789374086,"results":"34","hashOfConfig":"24"},{"size":3511,"mtime":1641789374095,"results":"35","hashOfConfig":"24"},{"size":3376,"mtime":1641789374088,"results":"36","hashOfConfig":"24"},{"size":15025,"mtime":1641914266765,"results":"37","hashOfConfig":"24"},{"size":1033,"mtime":1641900433246,"results":"38","hashOfConfig":"24"},{"size":1106,"mtime":1641789374074,"results":"39","hashOfConfig":"24"},{"size":235,"mtime":1641789374097,"results":"40","hashOfConfig":"24"},{"size":32357,"mtime":1641913552914,"results":"41","hashOfConfig":"24"},{"size":1543,"mtime":1641789374110,"results":"42","hashOfConfig":"24"},{"size":1852,"mtime":1641789374064,"results":"43","hashOfConfig":"24"},{"size":1006,"mtime":1641789374066,"results":"44","hashOfConfig":"24"},{"size":1741,"mtime":1641789374069,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h0escr",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\index.tsx",[],["96","97"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["98","99"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\n\r\ninterface Props {}\r\n\r\nconst Verify = (props) => {\r\n  const current_url = window.location.href;\r\n  const param_array = current_url.split(\"/\");\r\n  const id = param_array[4];\r\n  console.log(id);\r\n  const url = \"http://localhost:5000\";\r\n  const data = {\r\n    id,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .patch(url + \"/api/auth/verifyacc\", data)\r\n      .then((res: any) =>\r\n        res.data.status === \"success\"\r\n          ? (console.log(res.data),\r\n            setMsg(\"Account Verrified Successfully!\"),\r\n            setTimeout(function () {\r\n              window.location.href = \"../login\";\r\n            }, 2000))\r\n          : setMsg(res.data.error)\r\n      )\r\n      .catch((err) => setMsg(err.message));\r\n  }, []);\r\n\r\n  const [msg, setMsg] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"login-h verify-msg\">\r\n          {\" \"}\r\n          {msg !== \"\" ? <div>{msg}</div> : null}\r\n        </div>\r\n\r\n        {/* <form className=\"log-form\">\r\n            <div>\r\n              <input\r\n                className=\"form-item\"\r\n                type=\"email\"\r\n                onChange={(e) => setPass(e.target.value)}\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"submit-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["100"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cnfrmpass, setcnfrmPassword] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign }: any = useAuthState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const [successMessage, setSuccessMsg] = useState(\"\");\r\n  const url = \"http://localhost:5000\";\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"in sugnup\");\r\n    try {\r\n      let res = await signUpUser(dispatch, {\r\n        name,\r\n        email,\r\n        password,\r\n        role: \"MC\",\r\n      });\r\n      if (res === \"success\") {\r\n        errorMessageSign = \"\";\r\n        console.log(\"res is success time for another request\");\r\n        console.log(email);\r\n        setSuccessMsg(\"Signed up Successfully\");\r\n        const data = {\r\n          email,\r\n        };\r\n        console.log(\"Sending verify request\")\r\n        axios\r\n          .post(url + \"/api/auth/verify\", data)\r\n          .then((res: any) =>\r\n            res.data.status === \"success\"\r\n              ? setSuccessMsg(\"Please check your mail to verify your account.\")\r\n              : console.log(res.data)\r\n          )\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n  function toggleVisible2(e) {\r\n    e.preventDefault();\r\n    setVisible2(!visible2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={false} signup={true} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageSign ? (\r\n                <p className=\"error\">{errorMessageSign}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-2\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible2 ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm Password\"\r\n                  id=\"password\"\r\n                  value={cnfrmpass}\r\n                  onChange={(e) => setcnfrmPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-3\"\r\n                  onClick={(e) => toggleVisible2(e)}\r\n                >\r\n                  {!visible2 ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              {cnfrmpass !== password && (\r\n                <div className=\"match\">Passwords do not match</div>\r\n              )}\r\n              <button\r\n                className=\"submit-btn\"\r\n                onClick={handleSignUp}\r\n                disabled={loading || cnfrmpass !== password}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["101","102"],"import React from \"react\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./Home.css\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function Home() {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"home-box\">\r\n          <div className=\"c-heading\">CERTMAN</div>\r\n          <div className=\"c-byline\">An in-house certificate generator</div>\r\n          {!userDetails.user && (\r\n            <div className=\"c-more\">\r\n              Log in to experience a wide range of features.\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/*\r\n         */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["103","104","105","106","107"],"import React, { useState } from \"react\";\r\nimport \"./Navbar2.css\";\r\nimport logo2 from \"../../images/logo2.png\";\r\nimport s from \"../../images/S.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport user from \"../../images/logo22.png\";\r\n\r\nexport default function Navbar2(props) {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    window.location.href = \"/home\";\r\n  }; //relative to domain  };\r\n  const { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  return (\r\n    <div className=\"nav-c\">\r\n      <img className=\"logo2\" src={logo2} alt=\"logo\"></img>\r\n      <div className=\"b\">\r\n        <Link className=\"certman\" to={\"/home\"}>\r\n          CERTMAN\r\n        </Link>\r\n      </div>\r\n\r\n      {/* {props.login || props.signup ? (\r\n        <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n      ) : userDetails.user ? (\r\n        <div className=\"b2\">\r\n          <img className=\"s\" src={s} alt=\"logo\"></img>\r\n          <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <div className=\"s-c\">\r\n            {\" \"}\r\n            <Link className=\"certman2\" to={\"/dashboard\"}>\r\n              CERTMAN\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n           <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <img className=\"logo2\" alt=\"logo2\" src={logo2}></img>\r\n        </div>\r\n      )} */}\r\n\r\n      <div className=\"nav-right\">\r\n        {userDetails.user ? (\r\n          <div className=\"right-container\">\r\n            <button\r\n              className=\"icon-btn\"\r\n              onClick={() => {\r\n                setToggle(!toggle);\r\n              }}\r\n            >\r\n              <img alt=\"icon\" src={user} className=\"user-icon\"></img>\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {\" \"}\r\n            <Link\r\n              to={\"/login\"}\r\n              className={props.login ? \"nav-link nav-active\" : \"nav-link\"}\r\n            >\r\n              Login\r\n            </Link>\r\n            <Link\r\n              to={\"/signup\"}\r\n              className={props.signup ? \"nav-active-2 nav-link\" : \"nav-link\"}\r\n            >\r\n              Sign up\r\n            </Link>{\" \"}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {toggle && (\r\n        <div className=\"toggle-div\">\r\n          <div>\r\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>\r\n              Your Uploads\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/upload\"} className=\"toggle-item\">\r\n              Upload a new Template{\" \"}\r\n            </Link>\r\n          </div>\r\n          {userDetails.user.role === \"Board\" && (\r\n            <div>\r\n              <Link className=\"toggle-item\" to={\"/generate\"}>\r\n                Generate Certificates{\" \"}\r\n              </Link>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <button className=\"logout-btn\" onClick={() => handleLogout()}>\r\n              <Link className=\"toggle-item\"> Logout</Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["108","109","110"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\n// import styles from \"./login.module.css\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./login.css\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  // const [errorMessage2,setEmsg]=useState(false)\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await loginUser(dispatch, { email, password });\r\n      let user = localStorage.getItem(\"currentUser\")\r\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n        : \"\";\r\n      if (user) {\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={true} signup={false} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageLog ? (\r\n                <p className=\"error\">{errorMessageLog}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"submit-btn\"\r\n                type=\"submit\"\r\n                onClick={handleLogin}\r\n                disabled={loading}\r\n              >\r\n                Login\r\n              </button>\r\n              <div className=\"forgot\">\r\n                <Link to={\"/forgot\"} className=\"f-link\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["138"],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Repos\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":6,"column":11,"nodeType":"145","messageId":"146","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":31,"column":6,"nodeType":"149","endLine":31,"endColumn":8,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":16,"column":18,"nodeType":"145","messageId":"146","endLine":16,"endColumn":33},{"ruleId":"143","severity":1,"message":"152","line":4,"column":27,"nodeType":"145","messageId":"146","endLine":4,"endColumn":33},{"ruleId":"143","severity":1,"message":"153","line":7,"column":9,"nodeType":"145","messageId":"146","endLine":7,"endColumn":17},{"ruleId":"143","severity":1,"message":"154","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":9},{"ruleId":"143","severity":1,"message":"155","line":18,"column":11,"nodeType":"145","messageId":"146","endLine":18,"endColumn":18},{"ruleId":"143","severity":1,"message":"151","line":18,"column":20,"nodeType":"145","messageId":"146","endLine":18,"endColumn":35},{"ruleId":"143","severity":1,"message":"156","line":18,"column":37,"nodeType":"145","messageId":"146","endLine":18,"endColumn":53},{"ruleId":"143","severity":1,"message":"157","line":18,"column":55,"nodeType":"145","messageId":"146","endLine":18,"endColumn":69},{"ruleId":"143","severity":1,"message":"158","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"156","line":18,"column":35,"nodeType":"145","messageId":"146","endLine":18,"endColumn":51},{"ruleId":"143","severity":1,"message":"159","line":25,"column":11,"nodeType":"145","messageId":"146","endLine":25,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":49,"column":67,"nodeType":"162","messageId":"163","endLine":49,"endColumn":69},{"ruleId":"147","severity":1,"message":"164","line":60,"column":6,"nodeType":"149","endLine":60,"endColumn":8,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":114,"column":58,"nodeType":"162","messageId":"168","endLine":114,"endColumn":59},{"ruleId":"166","severity":1,"message":"167","line":124,"column":58,"nodeType":"162","messageId":"168","endLine":124,"endColumn":59},{"ruleId":"166","severity":1,"message":"167","line":133,"column":59,"nodeType":"162","messageId":"168","endLine":133,"endColumn":60},{"ruleId":"166","severity":1,"message":"167","line":139,"column":58,"nodeType":"162","messageId":"168","endLine":139,"endColumn":59},{"ruleId":"166","severity":1,"message":"167","line":149,"column":58,"nodeType":"162","messageId":"168","endLine":149,"endColumn":59},{"ruleId":"166","severity":1,"message":"167","line":156,"column":59,"nodeType":"162","messageId":"168","endLine":156,"endColumn":60},{"ruleId":"166","severity":1,"message":"167","line":163,"column":58,"nodeType":"162","messageId":"168","endLine":163,"endColumn":59},{"ruleId":"166","severity":1,"message":"167","line":170,"column":62,"nodeType":"162","messageId":"168","endLine":170,"endColumn":63},{"ruleId":"147","severity":1,"message":"169","line":179,"column":6,"nodeType":"149","endLine":179,"endColumn":13,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":237,"column":24,"nodeType":"173","messageId":"174","endLine":237,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":258,"column":60,"nodeType":"162","messageId":"168","endLine":258,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":268,"column":60,"nodeType":"162","messageId":"168","endLine":268,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":276,"column":61,"nodeType":"162","messageId":"168","endLine":276,"endColumn":62},{"ruleId":"166","severity":1,"message":"167","line":282,"column":60,"nodeType":"162","messageId":"168","endLine":282,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":291,"column":60,"nodeType":"162","messageId":"168","endLine":291,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":298,"column":61,"nodeType":"162","messageId":"168","endLine":298,"endColumn":62},{"ruleId":"166","severity":1,"message":"167","line":305,"column":60,"nodeType":"162","messageId":"168","endLine":305,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":312,"column":64,"nodeType":"162","messageId":"168","endLine":312,"endColumn":65},{"ruleId":"166","severity":1,"message":"167","line":352,"column":58,"nodeType":"162","messageId":"168","endLine":352,"endColumn":59},{"ruleId":"175","severity":1,"message":"176","line":372,"column":13,"nodeType":"177","endLine":377,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":404,"column":13,"nodeType":"177","endLine":409,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":428,"column":23,"nodeType":"177","endLine":428,"endColumn":68},{"ruleId":"178","severity":1,"message":"179","line":469,"column":13,"nodeType":"177","endLine":469,"endColumn":56},{"ruleId":"178","severity":1,"message":"179","line":473,"column":11,"nodeType":"177","endLine":473,"endColumn":56},{"ruleId":"178","severity":1,"message":"179","line":477,"column":13,"nodeType":"177","endLine":477,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":395,"column":13,"nodeType":"177","endLine":395,"endColumn":29},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'errorMessageLog' is assigned a value but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["183"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["184"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [data]",{"range":"191","text":"192"},"Update the dependencies array to be: [id]",{"range":"193","text":"194"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"195","text":"196"},[842,844],"[data]",[1903,1905],"[id]",[5311,5318],"[certUrl, coordinates, final, type]"]