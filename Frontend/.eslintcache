[{"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"7","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"8","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"10","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"11","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"12","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx":"20","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx":"21","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx":"22","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Certificate\\Certificate.tsx":"23"},{"size":500,"mtime":1643927005779,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1643927009020,"results":"26","hashOfConfig":"25"},{"size":1465,"mtime":1643927005163,"results":"27","hashOfConfig":"25"},{"size":1121,"mtime":1643927005316,"results":"28","hashOfConfig":"25"},{"size":526,"mtime":1643927005238,"results":"29","hashOfConfig":"25"},{"size":3154,"mtime":1643927006269,"results":"30","hashOfConfig":"25"},{"size":1730,"mtime":1643927008981,"results":"31","hashOfConfig":"25"},{"size":2206,"mtime":1643927006149,"results":"32","hashOfConfig":"25"},{"size":233,"mtime":1643927005601,"results":"33","hashOfConfig":"25"},{"size":4896,"mtime":1643927007034,"results":"34","hashOfConfig":"25"},{"size":810,"mtime":1643927006448,"results":"35","hashOfConfig":"25"},{"size":3391,"mtime":1643927006839,"results":"36","hashOfConfig":"25"},{"size":1064,"mtime":1643927005986,"results":"37","hashOfConfig":"25"},{"size":20454,"mtime":1643927007434,"results":"38","hashOfConfig":"25"},{"size":223,"mtime":1643927006886,"results":"39","hashOfConfig":"25"},{"size":3266,"mtime":1643927006594,"results":"40","hashOfConfig":"25"},{"size":995,"mtime":1643927006368,"results":"41","hashOfConfig":"25"},{"size":1490,"mtime":1643927008754,"results":"42","hashOfConfig":"25"},{"size":32875,"mtime":1643927008469,"results":"43","hashOfConfig":"25"},{"size":1783,"mtime":1643927005451,"results":"44","hashOfConfig":"25"},{"size":971,"mtime":1643927005508,"results":"45","hashOfConfig":"25"},{"size":1671,"mtime":1643927005703,"results":"46","hashOfConfig":"25"},{"size":966,"mtime":1643927005872,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f3ftkz",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts",[],["98","99"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["100","101"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\n\r\ninterface Props {}\r\n\r\nconst Verify = (props) => {\r\n  const current_url = window.location.href;\r\n  const param_array = current_url.split(\"/\");\r\n  const id = param_array[4];\r\n  console.log(id);\r\n  const url = \"http://localhost:5000\";\r\n  const data = {\r\n    id,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .patch(url + \"/api/auth/verifyacc\", data)\r\n      .then((res: any) =>\r\n        res.data.status === \"success\"\r\n          ? (console.log(res.data),\r\n            setMsg(\"Account Verrified Successfully!\"),\r\n            setTimeout(function () {\r\n              window.location.href = \"../login\";\r\n            }, 2000))\r\n          : setMsg(res.data.error)\r\n      )\r\n      .catch((err) => setMsg(err.message));\r\n  }, []);\r\n\r\n  const [msg, setMsg] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"login-h verify-msg\">\r\n          {\" \"}\r\n          {msg !== \"\" ? <div>{msg}</div> : null}\r\n        </div>\r\n\r\n        {/* <form className=\"log-form\">\r\n            <div>\r\n              <input\r\n                className=\"form-item\"\r\n                type=\"email\"\r\n                onChange={(e) => setPass(e.target.value)}\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"submit-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["102"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["103","104"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["105","106","107","108","109"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport QRCode from \"qrcode\";\nimport qrcode_1 from \"../../images/qrcode.png\";\nimport \"./singlecert.css\";\nimport sig from \"../../images/sig.png\";\nimport uploadImg from \"../../images/upload_icon.png\";\nimport downloadImg from \"../../images/download_icon.png\";\nimport mailImg from \"../../images/mail_icon.png\";\nimport mailBtn from \"../../images/mail_btn_img.png\";\nimport uploadBtn from \"../../images/uploadBtn.png\";\n\nexport default function SingleImage(props) {\n  const id = window.location.pathname.split(\"/\")[2];\n  QRCode.toDataURL(\"https://www.google.com/\")\n    .then((url) => {\n      // setLink(url);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n\n  // With async/await\n\n  const [csv, setCsv] = useState(\"\");\n  const [facSign, setFacSign] = useState(\"\");\n  const [chairSign, setChairSign] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr2, setArr2] = useState<any>([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState<any>([]);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [final, setFinal] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [faUrl, setFaUrl] = useState<any>();\n  const [cpUrl, setCpUrl] = useState<any>();\n\n  const canvasRef = useRef(null);\n\n  function onCsvChange(e) {\n    console.log(e.target.files[0]);\n    setCsv(e.target.files[0]);\n  }\n  function onChairChange(e) {\n    console.log(e.target.files[0]);\n    setChairSign(e.target.files[0]);\n  }\n  function onFacChange(e) {\n    console.log(e.target.files[0]);\n    setFacSign(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((response: any) => {\n        var certificate = response.data.filter((cert) => cert._id == id);\n        certificate = certificate[0];\n        console.log(certificate);\n        setCertUrl(certificate.certUrl);\n        setCoordinates(certificate.coordinates);\n        setType(certificate.category);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    // background.setAttribute(\"crossOrigin\", \"anonymous\");\n    console.log(certUrl);\n    background.src = certUrl;\n\n    background.onload = function () {\n      console.log(coordinates);\n      ctx.drawImage(background, 0, 0, 700, 500);\n      var img = new Image();\n      img.src = qrcode_1;\n      img.onload = function () {\n        ctx.drawImage(\n          img,\n          coordinates.qr[1],\n          coordinates.qr[0],\n          coordinates.qr[3],\n          coordinates.qr[2]\n        );\n      };\n\n      var SIG2 = new Image();\n      SIG2.src = sig;\n      SIG2.onload = function () {\n        ctx.drawImage(\n          SIG2,\n          coordinates.faSig[1],\n          coordinates.faSig[0],\n          coordinates.faSig[3],\n          coordinates.faSig[2]\n        );\n      };\n\n      var SIG1 = new Image();\n\n      SIG1.src = sig;\n      SIG1.onload = function () {\n        ctx.drawImage(\n          SIG1,\n          coordinates.cpSig[1],\n          coordinates.cpSig[0],\n          coordinates.cpSig[3],\n          coordinates.cpSig[2]\n        );\n      };\n\n      ctx.font = \"20px Arial \";\n\n      ctx.fillStyle = coordinates.color;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      // ctx.drawImage(qr, 20, 422,50,50);\n      // ctx.fillText(\"Personffffff\", 200, 200);\n\n      if (type === \"wc\" || type === \"mc\") {\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n      }\n      if (type === \"org\") {\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n        ctx.fillText(\n          \"in Event Name held on\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n      }\n      if (type === \"comp\") {\n        ctx.textAlign = \"center\";\n        ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"Person Name\",\n          coordinates.name[1] + coordinates.name[2] / 2,\n          coordinates.name[0]\n        );\n        ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"Event Name\",\n          coordinates.event[1] + coordinates.event[2] / 2,\n          coordinates.event[0]\n        );\n        ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"01/01/2021\",\n          coordinates.date[1] + coordinates.date[2] / 2,\n          coordinates.date[0]\n        );\n        ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\n\n        ctx.fillText(\n          \"1st\",\n          coordinates.position[1] + coordinates.position[2] / 2,\n          coordinates.position[0]\n        );\n      }\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    setShow(true);\n    // for (var i = 0; i < arr2.length; i++) {\n\n    //   var user = arr2[i]\n    //   console.log(\"Sending:\", user);\n    var data = {\n      subject,\n      content,\n      arr2,\n      certUrl,\n      type,\n      coordinates,\n      faUrl,\n      cpUrl,\n    };\n    await axios\n      .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n      .then((res) => {\n        setEmailCount((c) => c + 1);\n        console.log(res);\n      })\n      .catch((err) => console.log(err.message));\n\n    setShow(false);\n  };\n\n  let one = \"http://localhost:5000/api/csv/csv-upload\";\n  let two = \"http://localhost:5000/api/csv/upload-facsign\";\n  let three = \"http://localhost:5000/api/csv/upload-chairsign\";\n\n  const onSubmit = async (e) => {\n    if (csv === \"\" || facSign === \"\" || chairSign === \"\") {\n      alert(\"Please upload everything!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    const requestOne = axios.post(one, formData, {});\n\n    formData.delete(\"csv\");\n    formData.append(\"facSign\", facSign);\n    const requestTwo = axios.post(two, formData, {});\n    formData.delete(\"facSign\");\n    formData.append(\"chairSign\", chairSign);\n    const requestThree = axios.post(three, formData, {});\n\n    axios\n      .all([requestOne, requestTwo, requestThree])\n      .then(\n        axios.spread((...responses) => {\n          const responseOne = responses[0];\n          const responseTwo = responses[1];\n          const responseThree = responses[2];\n\n          setArr2(responseOne.data);\n          console.log(responseOne.data);\n          console.log(responseTwo.data);\n          console.log(responseThree.data);\n\n          setCpUrl(responseTwo.data);\n          setFaUrl(responseThree.data);\n        })\n      )\n      .catch((errors) => {\n        // react on errors.\n      });\n\n    const modalClose = document.getElementById(\"modalClose\");\n    modalClose.click();\n  };\n\n  function download() {\n    if (csv === \"\") {\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr2);\n    arr2.map((element) => {\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n      background.onload = async function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = coordinates.color;\n        var img = new Image();\n        img.src = qrcode_1;\n        img.crossOrigin = \"anonymous\";\n        img.onload = function () {\n          ctx.drawImage(\n            img,\n            coordinates.qr[1],\n            coordinates.qr[0],\n            coordinates.qr[3],\n            coordinates.qr[2]\n          );\n          var SIG2 = new Image();\n          SIG2.src = faUrl;\n          SIG2.crossOrigin = \"anonymous\";\n          SIG2.onload = function () {\n            ctx.drawImage(\n              SIG2,\n              coordinates.faSig[1],\n              coordinates.faSig[0],\n              coordinates.faSig[3],\n              coordinates.faSig[2]\n            );\n            var SIG1 = new Image();\n            SIG1.src = cpUrl;\n            SIG1.crossOrigin = \"anonymous\";\n            SIG1.onload = function () {\n              ctx.drawImage(\n                SIG1,\n                coordinates.cpSig[1],\n                coordinates.cpSig[0],\n                coordinates.cpSig[3],\n                coordinates.cpSig[2]\n              );\n\n              if (type === \"wc\" || type === \"mc\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n              }\n\n              if (type === \"org\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n                ctx.fillText(\n                  element.event,\n                  coordinates.event[1] + coordinates.event[2] / 2,\n                  coordinates.event[0]\n                );\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event_date,\n                  coordinates.date[1] + coordinates.date[2] / 2,\n                  coordinates.date[0]\n                );\n              }\n              if (type === \"comp\") {\n                ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.name,\n                  coordinates.name[1] + coordinates.name[2] / 2,\n                  coordinates.name[0]\n                );\n                ctx.font = coordinates.event[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event,\n                  coordinates.event[1] + coordinates.event[2] / 2,\n                  coordinates.event[0]\n                );\n                ctx.font = coordinates.date[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.event_date,\n                  coordinates.date[1] + coordinates.date[2] / 2,\n                  coordinates.date[0]\n                );\n                ctx.font = coordinates.position[3].toString() + \"px\" + \" Arial\";\n\n                ctx.fillText(\n                  element.position,\n                  coordinates.position[1] + coordinates.position[2] / 2,\n                  coordinates.position[0]\n                );\n              }\n\n              var canvas2: any = document.getElementById(\"myCanvas\");\n              var url = canvas2.toDataURL(\"image/png\");\n\n              var link = document.createElement(\"a\");\n              link.download = `${element.name}.png`;\n              link.href = url;\n              link.click();\n            };\n          };\n        };\n      };\n    });\n\n    // const elementCanvas = document.createElement(\"canvas\");\n    // elementCanvas.classList.add(\"hide-canvas\");\n\n    // elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    // const canvasObj = canvasRef.current;\n    // const ctx = canvasObj.getContext(\"2d\");\n    // canvasObj.width = 700;\n    // canvasObj.height = 500;\n\n    // var background = new Image();\n    // // background.setAttribute(\"crossOrigin\", \"anonymous\");\n    // background.src = certUrl;\n\n    // background.onload = function () {\n    //   ctx.drawImage(background, 0, 0, 700, 500);\n\n    //   ctx.font = \"20px Arial\";\n    //   ctx.textAlign = \"left\";\n    //   ctx.textBaseline = \"top\";\n    //   ctx.fillStyle = coordinates.color;\n\n    //   if (type === \"wc\" || type === \"mc\") {\n    //     ctx.font = coordinates.name[3].toString() + \"px\" + \" Arial\";\n    //     ctx.fillText(\"Person Name\", coordinates.name[1], coordinates.name[0]);\n    //   }\n    // };\n  }\n\n  function handle_upload(id) {\n    var input = document.getElementById(id);\n    input.click();\n  }\n\n  return (\n    <div className=\"container container_2\">\n      <Navbar2 />\n      <div className=\"row\">\n        {/* <a className=\"modal-open\" href=\"#modal\">\n          <button className=\"home-button\">Upload CSV File</button>\n        </a> */}\n        {/* <button className=\"home-button\" onClick={download}>\n          Download All\n        </button> */}\n        {/* <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a> */}\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content c-2\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload</h3>\n            <div className=\"modal-area area2\">\n              <div className=\"row\">\n                <form onSubmit={() => {}} id=\"csvForm\">\n                  <div className=\"csv-file\">\n                    <p className=\"h\">1.CSV File</p>\n                    <p>\n                      The CSV file should contain 2 columns only, one column\n                      with heading name and one with heading email.\n                    </p>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"csv\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onCsvChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"csv\")}\n                      >\n                        {csv != \"\" ? \"Uploaded\" : \"Choose CSV file\"}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"signatures\">\n                    <p className=\"h1\">2.Signatures</p>\n                    <p>\n                      The images of signatures should have a transparent\n                      background.\n                    </p>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"chairperson\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onChairChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"chairperson\")}\n                      >\n                        {chairSign != \"\"\n                          ? \"Uploaded\"\n                          : \"Choose signature for chairperson\"}\n                      </button>\n                    </div>\n                    <div className=\"form-group\">\n                      {\n                        <input\n                          id=\"faculty-advisor\"\n                          className=\"upload-input\"\n                          type=\"file\"\n                          onChange={onFacChange}\n                        />\n                      }\n                      <button\n                        className=\"upload_button\"\n                        onClick={() => handle_upload(\"faculty-advisor\")}\n                      >\n                        {facSign != \"\"\n                          ? \"Uploaded\"\n                          : \"Choose signature for faculty advisor\"}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"upload-btn\"\n                      onClick={onSubmit}\n                      type=\"submit\"\n                    >\n                      <img className=\"upload-btn-img\" src={uploadBtn} />\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content c-2\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr2.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"mail-1\">\n                    <input\n                      type=\"text\"\n                      className=\"mail-inp\"\n                      placeholder=\"Subject\"\n                      onChange={(e) => setSubject(e.target.value)}\n                    />\n                    <input\n                      type=\"text\"\n                      className=\"mail-inp\"\n                      placeholder=\"Content\"\n                      onChange={(e) => setContent(e.target.value)}\n                    />\n                  </div>\n                  <button className=\"mail-btn\" type=\"submit\">\n                    <img className=\"mail-btn-img\" src={mailBtn} />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"csv-inst\">\n        {(type === \"wc\" || type === \"mc\") && (\n          <div>\n            The csv uploaded should contain 2 columns only, one column with\n            heading <b>name</b> and one with heading <b>email</b>.{\" \"}\n          </div>\n        )}\n        {type === \"org\" && (\n          <div>\n            The csv uploaded should contain 4 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>.{\" \"}\n          </div>\n        )}\n        {type === \"comp\" && (\n          <div>\n            The csv uploaded should contain 5 columns only, with headings-{\" \"}\n            <b>name</b>, <b>email</b>,<b>event_name</b>,<b>date</b>,\n            <b>position</b>.{\" \"}\n          </div>\n        )}\n      </div> */}\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvs\"\n          width=\"700\"\n          height=\"500\"\n        ></canvas>\n      </div>\n      <div className=\"row btn-c\">\n        <a className=\"modal-open\" href=\"#modal\">\n          <button className=\"row-btn\">\n            <img className=\"row-img\" src={uploadImg} />\n          </button>\n        </a>\n        <button className=\"row-btn\" onClick={download}>\n          <img className=\"row-img\" src={downloadImg} />\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"row-btn\">\n            <img className=\"row-img\" src={mailImg} />\n          </button>\n        </a>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["140","141","142"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["143"],"import { useState } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport { useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport qr from \"../../images/qrcode.png\";\nimport sig from \"../../images/sig.png\";\n\nimport up from \"../../images/upload-btn.png\";\n\nexport default function Upload() {\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [qrTop, setqrTop] = useState<number>(0);\n  const [qrLeft, setqrLeft] = useState<number>(0);\n  const [qrW, setqrW] = useState<number>(0);\n  const [qrH, setqrH] = useState<number>(0);\n\n  const [sig1Top, setsig1Top] = useState<number>(0);\n  const [sig1Left, setsig1Left] = useState<number>(0);\n  const [sig1W, setsig1W] = useState<number>(0);\n  const [sig1H, setsig1H] = useState<number>(0);\n\n  const [sig2Top, setsig2Top] = useState<number>(0);\n  const [sig2Left, setsig2Left] = useState<number>(0);\n  const [sig2W, setsig2W] = useState<number>(0);\n  const [sig2H, setsig2H] = useState<number>(0);\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n  const [nameW, setNameW] = useState<number>(0);\n  const [nameFont, setNameFont] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n  const [eventW, setEventW] = useState<number>(0);\n  const [eventFont, setEventFont] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n  const [dateW, setDateW] = useState<number>(0);\n  const [dateFont, setDateFont] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n  const [positionW, setPositionW] = useState<number>(0);\n  const [positionFont, setPositionFont] = useState<number>(0);\n\n  const [alert, setAlert] = useState<boolean>(false);\n  const [c, setC] = useState();\n\n  // const[color,setColor]=useState();\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionqrTop(e) {\n    setqrTop(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionqrLeft(e) {\n    setqrLeft(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrWidth(e) {\n    setqrW(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrHeight(e) {\n    setqrH(parseInt(e.target.value));\n\n    const q = document.getElementById(\"qrc\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig1Top(e) {\n    setsig1Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig1Left(e) {\n    setsig1Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Width(e) {\n    setsig1W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Height(e) {\n    setsig1H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig1\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig2Top(e) {\n    setsig2Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig2Left(e) {\n    setsig2Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Width(e) {\n    setsig2W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Height(e) {\n    setsig2H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig2\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionNameTop(e) {\n    setNameTop(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.top = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft(e) {\n    setNameLeft(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameW(e) {\n    setNameW(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.width = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameFont(e) {\n    setNameFont(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.fontSize = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop(e) {\n    setEventTop(parseInt(e.target.value));\n    const event = document.getElementById(\"event\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function positionEventLeft(e) {\n    setEventLeft(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.left = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function EventW(e) {\n    setEventW(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.width = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function EventFont(e) {\n    setEventFont(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.fontSize = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function positionEventDateTop(e) {\n    setDateTop(parseInt(e.target.value));\n    const event = document.getElementById(\"e-date\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft(e) {\n    setDateLeft(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateW(e) {\n    setDateW(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.width = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateFont(e) {\n    setDateFont(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.fontSize = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n\n  function positionPosTop(e) {\n    setPositionTop(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.top = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft(e) {\n    setPositionLeft(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.left = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionW(e) {\n    setPositionW(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.width = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionFont(e) {\n    setPositionFont(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.fontSize = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n\n  const coordinates = {\n    name: [nameTop, nameLeft, nameW, nameFont],\n    event: [eventTop, eventLeft, eventW, eventFont],\n    date: [dateTop, dateLeft, dateW, dateFont],\n    position: [positionTop, positionLeft, positionW, positionFont],\n    qr: [qrTop, qrLeft, qrH, qrW],\n    cpSig: [sig1Top, sig1Left, sig1H, sig1W],\n    faSig: [sig2Top, sig2Left, sig2H, sig2W],\n    color: c,\n  };\n  function setColor(value) {\n    setC(value);\n    var name = document.getElementById(\"name\");\n    var event = document.getElementById(\"event\");\n    var eDate = document.getElementById(\"e-date\");\n    var position = document.getElementById(\"position\");\n\n    name.style.color = value;\n    event.style.color = value;\n    eDate.style.color = value;\n    position.style.color = value;\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            // window.alert(\"Certificate Uploaded Successfully\");\n            setAlert(true);\n            setTimeout(function () {\n              window.location.reload();\n            }, 2000);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n\n  console.log(userId);\n  return (\n    <div\n      className={\n        type === \"comp\"\n          ? \"container cont3\"\n          : type === \"org\"\n          ? \"container cont2\"\n          : \"container cont1\"\n      }\n    >\n      {alert && (\n        <div className=\"alert\">\n          Congratulations! Certifcate has been uploaded successfully!!\n        </div>\n      )}\n\n      <Navbar2 />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig1\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig2\"></img>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            <img src={up} />\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n      </div>\n\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div className=\"up-box\">\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option id=\"op\" value=\"\">\n                Purpose of Generating Certificate\n              </option>\n              <option id=\"op\" value=\"wc\">\n                WC Completion\n              </option>\n              <option id=\"op\" value=\"mc\">\n                MC Completion\n              </option>\n              <option id=\"op\" value=\"org\">\n                Organizing a Competition\n              </option>\n              <option id=\"op\" value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n\n            {type && (\n              <div className=\"type-container\">\n                <div>\n                  <div className=\"enter\">ENTER THE SPECIFICATIONS:</div>\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\" id=\"c-label\">\n                        Font Colour:\n                      </label>\n                      <input\n                        type={\"color\"}\n                        id=\"color\"\n                        onChange={(e) => setColor(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">1. Name:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameLeft(e)}\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameW(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Font:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameFont(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">2. QRCODE:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrLeft(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrWidth(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrHeight(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        3. Faculty Advisor Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        4. Chairperson Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {type === \"org\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}{\" \"}\n                  {type === \"comp\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>{\" \"}\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">7. Positon Won:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"row input-row\">\n                    <div className=\"col-lg-6\"></div>\n                    <div className=\"col-lg-6\">\n                      <button type=\"submit\" className=\"submit-up\">\n                        Upload\n                      </button>\n                    </div>\n                  </div>\n                  {/* <div className={type === \"comp\" ? \"upload-info info3\" : type===\"org\" ? \"upload-info info2\" : \"upload-info\"}> */}\n                  <div className=\"upload-info\">\n                    <span style={{ fontWeight: 800, marginRight: \"10px\" }}>\n                      Note:\n                    </span>\n                    The dimmensions of the certificate are 700px x 500px, please\n                    enter all coordinates in px keeping this height and width in\n                    mind.\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Certificate\\Certificate.tsx",["144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":11,"nodeType":"153","messageId":"154","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":31,"column":6,"nodeType":"157","endLine":31,"endColumn":8,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":16,"column":18,"nodeType":"153","messageId":"154","endLine":16,"endColumn":33},{"ruleId":"151","severity":1,"message":"160","line":4,"column":27,"nodeType":"153","messageId":"154","endLine":4,"endColumn":33},{"ruleId":"151","severity":1,"message":"161","line":7,"column":9,"nodeType":"153","messageId":"154","endLine":7,"endColumn":17},{"ruleId":"151","severity":1,"message":"162","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":9},{"ruleId":"151","severity":1,"message":"163","line":18,"column":11,"nodeType":"153","messageId":"154","endLine":18,"endColumn":18},{"ruleId":"151","severity":1,"message":"159","line":18,"column":20,"nodeType":"153","messageId":"154","endLine":18,"endColumn":35},{"ruleId":"151","severity":1,"message":"164","line":18,"column":37,"nodeType":"153","messageId":"154","endLine":18,"endColumn":53},{"ruleId":"151","severity":1,"message":"165","line":18,"column":55,"nodeType":"153","messageId":"154","endLine":18,"endColumn":69},{"ruleId":"166","severity":1,"message":"167","line":62,"column":67,"nodeType":"168","messageId":"169","endLine":62,"endColumn":69},{"ruleId":"155","severity":1,"message":"170","line":73,"column":6,"nodeType":"157","endLine":73,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":137,"column":58,"nodeType":"168","messageId":"174","endLine":137,"endColumn":59},{"ruleId":"172","severity":1,"message":"173","line":147,"column":58,"nodeType":"168","messageId":"174","endLine":147,"endColumn":59},{"ruleId":"172","severity":1,"message":"173","line":156,"column":59,"nodeType":"168","messageId":"174","endLine":156,"endColumn":60},{"ruleId":"172","severity":1,"message":"173","line":162,"column":58,"nodeType":"168","messageId":"174","endLine":162,"endColumn":59},{"ruleId":"172","severity":1,"message":"173","line":172,"column":58,"nodeType":"168","messageId":"174","endLine":172,"endColumn":59},{"ruleId":"172","severity":1,"message":"173","line":179,"column":59,"nodeType":"168","messageId":"174","endLine":179,"endColumn":60},{"ruleId":"172","severity":1,"message":"173","line":186,"column":58,"nodeType":"168","messageId":"174","endLine":186,"endColumn":59},{"ruleId":"172","severity":1,"message":"173","line":193,"column":62,"nodeType":"168","messageId":"174","endLine":193,"endColumn":63},{"ruleId":"155","severity":1,"message":"175","line":202,"column":6,"nodeType":"157","endLine":202,"endColumn":13,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":288,"column":24,"nodeType":"179","messageId":"180","endLine":288,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":339,"column":66,"nodeType":"168","messageId":"174","endLine":339,"endColumn":67},{"ruleId":"172","severity":1,"message":"173","line":349,"column":66,"nodeType":"168","messageId":"174","endLine":349,"endColumn":67},{"ruleId":"172","severity":1,"message":"173","line":357,"column":67,"nodeType":"168","messageId":"174","endLine":357,"endColumn":68},{"ruleId":"172","severity":1,"message":"173","line":363,"column":66,"nodeType":"168","messageId":"174","endLine":363,"endColumn":67},{"ruleId":"172","severity":1,"message":"173","line":372,"column":66,"nodeType":"168","messageId":"174","endLine":372,"endColumn":67},{"ruleId":"172","severity":1,"message":"173","line":379,"column":67,"nodeType":"168","messageId":"174","endLine":379,"endColumn":68},{"ruleId":"172","severity":1,"message":"173","line":386,"column":66,"nodeType":"168","messageId":"174","endLine":386,"endColumn":67},{"ruleId":"172","severity":1,"message":"173","line":393,"column":70,"nodeType":"168","messageId":"174","endLine":393,"endColumn":71},{"ruleId":"181","severity":1,"message":"182","line":476,"column":13,"nodeType":"183","endLine":481,"endColumn":14},{"ruleId":"166","severity":1,"message":"184","line":507,"column":30,"nodeType":"168","messageId":"169","endLine":507,"endColumn":32},{"ruleId":"166","severity":1,"message":"184","line":530,"column":36,"nodeType":"168","messageId":"169","endLine":530,"endColumn":38},{"ruleId":"166","severity":1,"message":"184","line":548,"column":34,"nodeType":"168","messageId":"169","endLine":548,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":560,"column":23,"nodeType":"183","endLine":560,"endColumn":73},{"ruleId":"181","severity":1,"message":"182","line":571,"column":13,"nodeType":"183","endLine":576,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":604,"column":21,"nodeType":"183","endLine":604,"endColumn":67},{"ruleId":"185","severity":1,"message":"186","line":645,"column":13,"nodeType":"183","endLine":645,"endColumn":56},{"ruleId":"185","severity":1,"message":"186","line":649,"column":11,"nodeType":"183","endLine":649,"endColumn":56},{"ruleId":"185","severity":1,"message":"186","line":653,"column":13,"nodeType":"183","endLine":653,"endColumn":54},{"ruleId":"151","severity":1,"message":"187","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"164","line":18,"column":35,"nodeType":"153","messageId":"154","endLine":18,"endColumn":51},{"ruleId":"151","severity":1,"message":"188","line":25,"column":11,"nodeType":"153","messageId":"154","endLine":25,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":402,"column":13,"nodeType":"183","endLine":402,"endColumn":29},{"ruleId":"151","severity":1,"message":"189","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":25},{"ruleId":"151","severity":1,"message":"160","line":3,"column":27,"nodeType":"153","messageId":"154","endLine":3,"endColumn":33},{"ruleId":"151","severity":1,"message":"190","line":3,"column":35,"nodeType":"153","messageId":"154","endLine":3,"endColumn":47},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'errorMessageLog' is assigned a value but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["194"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'useAuthDispatch' is defined but never used.","'useAuthState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [data]",{"range":"202","text":"203"},"Update the dependencies array to be: [id]",{"range":"204","text":"205"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"206","text":"207"},[842,844],"[data]",[2403,2405],"[id]",[5981,5988],"[certUrl, coordinates, final, type]"]