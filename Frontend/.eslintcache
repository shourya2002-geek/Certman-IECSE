[{"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx":"1","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts":"2","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx":"3","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts":"4","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx":"5","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ResetPassword.tsx":"6","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ForgotPassword.tsx":"7","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Verify/verify.tsx":"8","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx":"9","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Home/Home.tsx":"10","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/signup.tsx":"11","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar2/Navbar2.tsx":"12","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx":"13","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx":"14","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx":"15","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/User_Uploads/index.tsx":"16","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx":"17","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx":"18","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx":"19","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx":"20","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx":"21","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx":"22"},{"size":500,"mtime":1643538019726,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1643538019727,"results":"25","hashOfConfig":"24"},{"size":1305,"mtime":1643538019712,"results":"26","hashOfConfig":"24"},{"size":1121,"mtime":1643538019713,"results":"27","hashOfConfig":"24"},{"size":526,"mtime":1643538019712,"results":"28","hashOfConfig":"24"},{"size":3154,"mtime":1643538019715,"results":"29","hashOfConfig":"24"},{"size":2203,"mtime":1643538019715,"results":"30","hashOfConfig":"24"},{"size":1730,"mtime":1643538019719,"results":"31","hashOfConfig":"24"},{"size":233,"mtime":1643538019713,"results":"32","hashOfConfig":"24"},{"size":810,"mtime":1643538019715,"results":"33","hashOfConfig":"24"},{"size":4896,"mtime":1643538019717,"results":"34","hashOfConfig":"24"},{"size":3391,"mtime":1643538019717,"results":"35","hashOfConfig":"24"},{"size":223,"mtime":1643538019717,"results":"36","hashOfConfig":"24"},{"size":1064,"mtime":1643538019714,"results":"37","hashOfConfig":"24"},{"size":18601,"mtime":1643850143178,"results":"38","hashOfConfig":"24"},{"size":1490,"mtime":1643538019719,"results":"39","hashOfConfig":"24"},{"size":995,"mtime":1643538019715,"results":"40","hashOfConfig":"24"},{"size":32731,"mtime":1643538019719,"results":"41","hashOfConfig":"24"},{"size":3266,"mtime":1643538019716,"results":"42","hashOfConfig":"24"},{"size":1783,"mtime":1643538019713,"results":"43","hashOfConfig":"24"},{"size":971,"mtime":1643538019713,"results":"44","hashOfConfig":"24"},{"size":1671,"mtime":1643538019713,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"n0ashg",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx",[],["97","98"],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ResetPassword.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ForgotPassword.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Verify/verify.tsx",["99","100"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst Verify = (props) => {\n  const current_url = window.location.href;\n  const param_array = current_url.split(\"/\");\n  const id = param_array[4];\n  console.log(id);\n  const url = \"http://localhost:5000\";\n  const data = {\n    id,\n  };\n\n  useEffect(() => {\n    axios\n      .patch(url + \"/api/auth/verifyacc\", data)\n      .then((res: any) =>\n        res.data.status === \"success\"\n          ? (console.log(res.data),\n            setMsg(\"Account Verrified Successfully!\"),\n            setTimeout(function () {\n              window.location.href = \"../login\";\n            }, 2000))\n          : setMsg(res.data.error)\n      )\n      .catch((err) => setMsg(err.message));\n  }, []);\n\n  const [msg, setMsg] = useState<string>(\"\");\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-h verify-msg\">\n          {\" \"}\n          {msg !== \"\" ? <div>{msg}</div> : null}\n        </div>\n\n        {/* <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"Enter new password\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n          </form> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Home/Home.tsx",["101","102"],"import React from \"react\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./Home.css\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nexport default function Home() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"home-box\">\n          <div className=\"c-heading\">CERTMAN</div>\n          <div className=\"c-byline\">An in-house certificate generator</div>\n          {!userDetails.user && (\n            <div className=\"c-more\">\n              Log in to experience a wide range of features.\n            </div>\n          )}\n        </div>\n        {/*\n         */}\n      </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/signup.tsx",["103"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cnfrmpass, setcnfrmPassword] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  var { loading, errorMessageLog, errorMessageSign }: any = useAuthState();\n  const [visible, setVisible] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n\n  const [successMessage, setSuccessMsg] = useState(\"\");\n  const url = \"http://localhost:5000\";\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    console.log(\"in sugnup\");\n    try {\n      let res = await signUpUser(dispatch, {\n        name,\n        email,\n        password,\n        role: \"MC\",\n      });\n      if (res === \"success\") {\n        errorMessageSign = \"\";\n        console.log(\"res is success time for another request\");\n        console.log(email);\n        setSuccessMsg(\"Signed up Successfully\");\n        const data = {\n          email,\n        };\n        console.log(\"Sending verify request\");\n        axios\n          .post(url + \"/api/auth/verify\", data)\n          .then((res: any) =>\n            res.data.status === \"success\"\n              ? setSuccessMsg(\"Please check your mail to verify your account.\")\n              : console.log(res.data)\n          )\n          .catch((err) => console.log(err.message));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n  function toggleVisible2(e) {\n    e.preventDefault();\n    setVisible2(!visible2);\n  }\n\n  return (\n    <>\n      <div>\n        <Navbar2 login={false} signup={true} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessageSign ? (\n                <p className=\"error\">{errorMessageSign}</p>\n              ) : null}\n\n              {successMessage ? (\n                <p className=\"success\">{successMessage}</p>\n              ) : null}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button-2\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible2 ? \"text\" : \"password\"}\n                  placeholder=\"Confirm Password\"\n                  id=\"password\"\n                  value={cnfrmpass}\n                  onChange={(e) => setcnfrmPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button-3\"\n                  onClick={(e) => toggleVisible2(e)}\n                >\n                  {!visible2 ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              {cnfrmpass !== password && (\n                <div className=\"match\">Passwords do not match</div>\n              )}\n              <button\n                className=\"submit-btn\"\n                onClick={handleSignUp}\n                disabled={loading || cnfrmpass !== password}\n              >\n                Sign Up\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar2/Navbar2.tsx",["104","105","106","107","108"],"import React, { useState } from \"react\";\nimport \"./Navbar2.css\";\nimport logo2 from \"../../images/logo2.png\";\nimport s from \"../../images/S.png\";\n\nimport { Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport user from \"../../images/logo22.png\";\n\nexport default function Navbar2(props) {\n  const [toggle, setToggle] = useState(false);\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  const handleLogout = () => {\n    logOut(dispatch);\n    window.location.href = \"/home\";\n  }; //relative to domain  };\n  const { loading, errorMessageLog, errorMessageSign, successMessage }: any =\n    useAuthState();\n\n  return (\n    <div className=\"nav-c\">\n      <img className=\"logo2\" src={logo2} alt=\"logo\"></img>\n      <div className=\"b\">\n        <Link className=\"certman\" to={\"/home\"}>\n          CERTMAN\n        </Link>\n      </div>\n\n      {/* {props.login || props.signup ? (\n        <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n      ) : userDetails.user ? (\n        <div className=\"b2\">\n          <img className=\"s\" src={s} alt=\"logo\"></img>\n          <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n          <div className=\"s-c\">\n            {\" \"}\n            <Link className=\"certman2\" to={\"/dashboard\"}>\n              CERTMAN\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <div>\n           <div className=\"b\">\n          <Link className=\"certman\" to={\"/home\"}>\n            CERTMAN\n          </Link>\n        </div>\n          <img className=\"logo2\" alt=\"logo2\" src={logo2}></img>\n        </div>\n      )} */}\n\n      <div className=\"nav-right\">\n        {userDetails.user ? (\n          <div className=\"right-container\">\n            <button\n              className=\"icon-btn\"\n              onClick={() => {\n                setToggle(!toggle);\n              }}\n            >\n              <img alt=\"icon\" src={user} className=\"user-icon\"></img>\n            </button>\n          </div>\n        ) : (\n          <div>\n            {\" \"}\n            <Link\n              to={\"/login\"}\n              className={props.login ? \"nav-link nav-active\" : \"nav-link\"}\n            >\n              Login\n            </Link>\n            <Link\n              to={\"/signup\"}\n              className={props.signup ? \"nav-active-2 nav-link\" : \"nav-link\"}\n            >\n              Sign up\n            </Link>{\" \"}\n          </div>\n        )}\n      </div>\n      {toggle && (\n        <div className=\"toggle-div\">\n          <div>\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>\n              Your Uploads\n            </Link>\n          </div>\n          <div>\n            <Link to={\"/upload\"} className=\"toggle-item\">\n              Upload a new Template{\" \"}\n            </Link>\n          </div>\n          {userDetails.user.role === \"Board\" && (\n            <div>\n              <Link className=\"toggle-item\" to={\"/generate\"}>\n                Generate Certificates{\" \"}\n              </Link>\n            </div>\n          )}\n          <div>\n            <button className=\"logout-btn\" onClick={() => handleLogout()}>\n              <Link className=\"toggle-item\"> Logout</Link>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/User_Uploads/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx",["142"],"import { useState } from \"react\";\nimport \"./Upload.css\";\nimport axios from \"axios\";\nimport { useAuthState } from \"../../Context\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport qr from \"../../images/qrcode.png\";\nimport sig from \"../../images/sig.png\";\n\nimport up from \"../../images/upload-btn.png\";\n\nexport default function Upload() {\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [qrTop, setqrTop] = useState<number>(0);\n  const [qrLeft, setqrLeft] = useState<number>(0);\n  const [qrW, setqrW] = useState<number>(0);\n  const [qrH, setqrH] = useState<number>(0);\n\n  const [sig1Top, setsig1Top] = useState<number>(0);\n  const [sig1Left, setsig1Left] = useState<number>(0);\n  const [sig1W, setsig1W] = useState<number>(0);\n  const [sig1H, setsig1H] = useState<number>(0);\n\n  const [sig2Top, setsig2Top] = useState<number>(0);\n  const [sig2Left, setsig2Left] = useState<number>(0);\n  const [sig2W, setsig2W] = useState<number>(0);\n  const [sig2H, setsig2H] = useState<number>(0);\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n  const [nameW, setNameW] = useState<number>(0);\n  const [nameFont, setNameFont] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n  const [eventW, setEventW] = useState<number>(0);\n  const [eventFont, setEventFont] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n  const [dateW, setDateW] = useState<number>(0);\n  const [dateFont, setDateFont] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n  const [positionW, setPositionW] = useState<number>(0);\n  const [positionFont, setPositionFont] = useState<number>(0);\n\n  const [alert, setAlert] = useState<boolean>(false);\nconst [c,setC]=useState();\n\n  // const[color,setColor]=useState();\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionqrTop(e) {\n    setqrTop(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionqrLeft(e) {\n    setqrLeft(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrWidth(e) {\n    setqrW(parseInt(e.target.value));\n    const q = document.getElementById(\"qrc\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function qrHeight(e) {\n    setqrH(parseInt(e.target.value));\n\n    const q = document.getElementById(\"qrc\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig1Top(e) {\n    setsig1Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig1Left(e) {\n    setsig1Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Width(e) {\n    setsig1W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig1\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig1Height(e) {\n    setsig1H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig1\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionsig2Top(e) {\n    setsig2Top(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.top = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function positionsig2Left(e) {\n    setsig2Left(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Width(e) {\n    setsig2W(parseInt(e.target.value));\n    const q = document.getElementById(\"sig2\");\n    q.style.width = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n  function sig2Height(e) {\n    setsig2H(parseInt(e.target.value));\n\n    const q = document.getElementById(\"sig2\");\n    q.style.height = e.target.value.toString() + \"px\";\n    q.style.visibility = \"visible\";\n    q.style.zIndex = \"10\";\n  }\n\n  function positionNameTop(e) {\n    setNameTop(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.top = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft(e) {\n    setNameLeft(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.left = e.target.value.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameW(e) {\n    setNameW(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.width = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function NameFont(e) {\n    setNameFont(parseInt(e.target.value));\n    const name = document.getElementById(\"name\");\n    name.style.fontSize = e.target.value.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop(e) {\n    setEventTop(parseInt(e.target.value));\n    const event = document.getElementById(\"event\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"in Event Name held on \";\n  }\n  function positionEventLeft(e) {\n    setEventLeft(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.left = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"in Event Name held on \";\n  }\n  function EventW(e) {\n    setEventW(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.width = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"in Event Name held on \";\n  }\n  function EventFont(e) {\n    setEventFont(parseInt(e.target.value));\n\n    const event = document.getElementById(\"event\");\n    event.style.fontSize = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"in Event Name held on \";\n  }\n\n  function positionEventDateTop(e) {\n    setDateTop(parseInt(e.target.value));\n    const event = document.getElementById(\"e-date\");\n    event.style.top = e.target.value.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft(e) {\n    setDateLeft(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateW(e) {\n    setDateW(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.width = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function EventDateFont(e) {\n    setDateFont(parseInt(e.target.value));\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.fontSize = e.target.value.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n\n  function positionPosTop(e) {\n    setPositionTop(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.top = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft(e) {\n    setPositionLeft(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.left = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionW(e) {\n    setPositionW(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.width = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function PositionFont(e) {\n    setPositionFont(parseInt(e.target.value));\n    const position = document.getElementById(\"position\");\n    position.style.fontSize = e.target.value.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n\n  const coordinates = {\n    name: [nameTop, nameLeft, nameW, nameFont],\n    event: [eventTop, eventLeft, eventW, eventFont],\n    date: [dateTop, dateLeft, dateW, dateFont],\n    position: [positionTop, positionLeft, positionW, positionFont],\n    qr: [qrTop, qrLeft, qrH, qrW],\n    cpSig: [sig1Top, sig1Left, sig1H, sig1W],\n    faSig: [sig2Top, sig2Left, sig2H, sig2W],\n    color:c\n  };\nfunction setColor(value){\nsetC(value);\n  var name=document.getElementById(\"name\");\n  var event=document.getElementById(\"event\");\n  var eDate=document.getElementById(\"e-date\");\n  var position=document.getElementById(\"position\");\n\n  name.style.color=value;\n  event.style.color=value;\n  eDate.style.color=value;\n  position.style.color=value;\n\n\n}\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            // window.alert(\"Certificate Uploaded Successfully\");\n            setAlert(true);\n            setTimeout(function () {\n              window.location.reload();\n            }, 2000);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n\n  console.log(userId);\n  return (\n    <div\n      className={\n        type === \"comp\"\n          ? \"container cont3\"\n          : type === \"org\"\n          ? \"container cont2\"\n          : \"container cont1\"\n      }\n    >\n      {alert && (\n        <div className=\"alert\">\n          Congratulations! Certifcate has been uploaded successfully!!\n        </div>\n      )}\n\n      <Navbar2 />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig1\"></img>\n          <img alt=\"sig1\" src={sig} id=\"sig2\"></img>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            <img src={up} />\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n      </div>\n\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div className=\"up-box\">\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option id=\"op\" value=\"\">\n                Purpose of Generating Certificate\n              </option>\n              <option id=\"op\" value=\"wc\">\n                WC Completion\n              </option>\n              <option id=\"op\" value=\"mc\">\n                MC Completion\n              </option>\n              <option id=\"op\" value=\"org\">\n                Organizing a Competition\n              </option>\n              <option id=\"op\" value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n\n            {type && (\n              <div className=\"type-container\">\n                <div>\n                  <div className=\"enter\">ENTER THE SPECIFICATIONS:</div>\n                  <div>\n                    <div className=\"row type-row\">\n                    <label className=\"type-label\" id=\"c-label\">Font Colour:</label>\n                    <input type={\"color\"} id=\"color\" onChange={(e)=>setColor(e.target.value)}/>\n\n                      </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">1. Name:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionNameLeft(e)}\n                          ></input>\n                        </div>\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameW(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Font:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => NameFont(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">2. QRCODE:</label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrTop(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionqrLeft(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrWidth(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => qrHeight(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        3. Faculty Advisor Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig2Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig2Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        4. Chairperson Signature:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Top:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Top(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label>Left:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => positionsig1Left(e)}\n                          ></input>\n                        </div>\n\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\n                      </div>\n                      <div className=\"row input-row\">\n                        <div className=\"col-lg-6\">\n                          <label>Width:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Width(e)}\n                          ></input>\n                        </div>\n                        <div className=\"col-lg-6\">\n                          <label className=\"\">Height:</label>\n                          <input\n                            className=\"type-input\"\n                            type=\"number\"\n                            onChange={(e) => sig1Height(e)}\n                          ></input>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {type === \"org\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}{\" \"}\n                  {type === \"comp\" && (\n                    <div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">5. Event Name:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventFont(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventW(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">6. Event Date:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionEventDateLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => EventDateFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>{\" \"}\n                      <div className=\"row type-row\">\n                        <label className=\"type-label\">7. Positon Won:</label>\n                        <br />\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Top:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosTop(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Left:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => positionPosLeft(e)}\n                            ></input>\n                          </div>\n                        </div>\n                        <div className=\"row input-row\">\n                          <div className=\"col-lg-6\">\n                            <label>Width:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionW(e)}\n                            ></input>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Font:</label>\n                            <input\n                              className=\"type-input\"\n                              type=\"number\"\n                              onChange={(e) => PositionFont(e)}\n                            ></input>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"row input-row\">\n                    <div className=\"col-lg-6\"></div>\n                    <div className=\"col-lg-6\">\n                      <button type=\"submit\" className=\"submit-up\">\n                        Upload\n                      </button>\n                    </div>\n                  </div>\n                  {/* <div className={type === \"comp\" ? \"upload-info info3\" : type===\"org\" ? \"upload-info info2\" : \"upload-info\"}> */}\n                  <div className=\"upload-info\">\n                    <span style={{ fontWeight: 800, marginRight: \"10px\" }}>\n                      Note:\n                    </span>\n                    The dimmensions of the certificate are 700px x 500px, please\n                    enter all coordinates in px keeping this height and width in\n                    mind.\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx",["143","144","145"],"import React, { useState, useEffect } from \"react\";\n\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\n// import styles from \"./login.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./login.css\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  // const [errorMessage2,setEmsg]=useState(false)\n\n  const [password, setPassword] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useAuthDispatch();\n  var { loading, errorMessageLog, errorMessageSign, successMessage }: any =\n    useAuthState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await loginUser(dispatch, { email, password });\n      let user = localStorage.getItem(\"currentUser\")\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n        : \"\";\n      if (user) {\n        props.history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function toggleVisible(e) {\n    e.preventDefault();\n    setVisible(!visible);\n  }\n\n  return (\n    <>\n      <div>\n        <Navbar2 login={true} signup={false} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n              {errorMessageLog ? (\n                <p className=\"error\">{errorMessageLog}</p>\n              ) : null}\n\n              {successMessage ? (\n                <p className=\"success\">{successMessage}</p>\n              ) : null}\n            </div>\n\n            <form className=\"log-form\">\n              <div>\n                <input\n                  className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div>\n                <input\n                  className=\"form-item\"\n                  type={visible ? \"text\" : \"password\"}\n                  placeholder=\"Enter Password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button\n                  className=\"toggle-button\"\n                  onClick={(e) => toggleVisible(e)}\n                >\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n                </button>\n              </div>\n              <button\n                className=\"submit-btn\"\n                type=\"submit\"\n                onClick={handleLogin}\n                disabled={loading}\n              >\n                Login\n              </button>\n              <div className=\"forgot\">\n                <Link to={\"/forgot\"} className=\"f-link\">\n                  Forgot Password?\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":11,"nodeType":"152","messageId":"153","endLine":6,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":31,"column":6,"nodeType":"156","endLine":31,"endColumn":8,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":4,"column":27,"nodeType":"152","messageId":"153","endLine":4,"endColumn":33},{"ruleId":"150","severity":1,"message":"159","line":7,"column":9,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"160","line":16,"column":18,"nodeType":"152","messageId":"153","endLine":16,"endColumn":33},{"ruleId":"150","severity":1,"message":"161","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":9},{"ruleId":"150","severity":1,"message":"162","line":18,"column":11,"nodeType":"152","messageId":"153","endLine":18,"endColumn":18},{"ruleId":"150","severity":1,"message":"160","line":18,"column":20,"nodeType":"152","messageId":"153","endLine":18,"endColumn":35},{"ruleId":"150","severity":1,"message":"163","line":18,"column":37,"nodeType":"152","messageId":"153","endLine":18,"endColumn":53},{"ruleId":"150","severity":1,"message":"164","line":18,"column":55,"nodeType":"152","messageId":"153","endLine":18,"endColumn":69},{"ruleId":"150","severity":1,"message":"165","line":41,"column":10,"nodeType":"152","messageId":"153","endLine":41,"endColumn":14},{"ruleId":"150","severity":1,"message":"166","line":41,"column":16,"nodeType":"152","messageId":"153","endLine":41,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":62,"column":67,"nodeType":"169","messageId":"170","endLine":62,"endColumn":69},{"ruleId":"154","severity":1,"message":"171","line":73,"column":6,"nodeType":"156","endLine":73,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":128,"column":58,"nodeType":"169","messageId":"175","endLine":128,"endColumn":59},{"ruleId":"173","severity":1,"message":"174","line":138,"column":58,"nodeType":"169","messageId":"175","endLine":138,"endColumn":59},{"ruleId":"173","severity":1,"message":"174","line":147,"column":59,"nodeType":"169","messageId":"175","endLine":147,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":153,"column":58,"nodeType":"169","messageId":"175","endLine":153,"endColumn":59},{"ruleId":"173","severity":1,"message":"174","line":163,"column":58,"nodeType":"169","messageId":"175","endLine":163,"endColumn":59},{"ruleId":"173","severity":1,"message":"174","line":170,"column":59,"nodeType":"169","messageId":"175","endLine":170,"endColumn":60},{"ruleId":"173","severity":1,"message":"174","line":177,"column":58,"nodeType":"169","messageId":"175","endLine":177,"endColumn":59},{"ruleId":"173","severity":1,"message":"174","line":184,"column":62,"nodeType":"169","messageId":"175","endLine":184,"endColumn":63},{"ruleId":"154","severity":1,"message":"176","line":193,"column":6,"nodeType":"156","endLine":193,"endColumn":13,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":276,"column":24,"nodeType":"180","messageId":"181","endLine":276,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":296,"column":60,"nodeType":"169","messageId":"175","endLine":296,"endColumn":61},{"ruleId":"173","severity":1,"message":"174","line":306,"column":60,"nodeType":"169","messageId":"175","endLine":306,"endColumn":61},{"ruleId":"173","severity":1,"message":"174","line":314,"column":61,"nodeType":"169","messageId":"175","endLine":314,"endColumn":62},{"ruleId":"173","severity":1,"message":"174","line":320,"column":60,"nodeType":"169","messageId":"175","endLine":320,"endColumn":61},{"ruleId":"173","severity":1,"message":"174","line":329,"column":60,"nodeType":"169","messageId":"175","endLine":329,"endColumn":61},{"ruleId":"173","severity":1,"message":"174","line":336,"column":61,"nodeType":"169","messageId":"175","endLine":336,"endColumn":62},{"ruleId":"173","severity":1,"message":"174","line":343,"column":60,"nodeType":"169","messageId":"175","endLine":343,"endColumn":61},{"ruleId":"173","severity":1,"message":"174","line":350,"column":64,"nodeType":"169","messageId":"175","endLine":350,"endColumn":65},{"ruleId":"173","severity":1,"message":"174","line":390,"column":58,"nodeType":"169","messageId":"175","endLine":390,"endColumn":59},{"ruleId":"182","severity":1,"message":"183","line":416,"column":13,"nodeType":"184","endLine":421,"endColumn":14},{"ruleId":"167","severity":1,"message":"185","line":447,"column":30,"nodeType":"169","messageId":"170","endLine":447,"endColumn":32},{"ruleId":"167","severity":1,"message":"185","line":470,"column":36,"nodeType":"169","messageId":"170","endLine":470,"endColumn":38},{"ruleId":"167","severity":1,"message":"185","line":488,"column":34,"nodeType":"169","messageId":"170","endLine":488,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":500,"column":23,"nodeType":"184","endLine":500,"endColumn":73},{"ruleId":"182","severity":1,"message":"183","line":511,"column":13,"nodeType":"184","endLine":516,"endColumn":14},{"ruleId":"186","severity":1,"message":"187","line":544,"column":21,"nodeType":"184","endLine":544,"endColumn":67},{"ruleId":"186","severity":1,"message":"187","line":585,"column":13,"nodeType":"184","endLine":585,"endColumn":56},{"ruleId":"186","severity":1,"message":"187","line":589,"column":11,"nodeType":"184","endLine":589,"endColumn":56},{"ruleId":"186","severity":1,"message":"187","line":593,"column":13,"nodeType":"184","endLine":593,"endColumn":54},{"ruleId":"186","severity":1,"message":"187","line":402,"column":13,"nodeType":"184","endLine":402,"endColumn":29},{"ruleId":"150","severity":1,"message":"188","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"163","line":18,"column":35,"nodeType":"152","messageId":"153","endLine":18,"endColumn":51},{"ruleId":"150","severity":1,"message":"189","line":25,"column":11,"nodeType":"152","messageId":"153","endLine":25,"endColumn":14},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'errorMessageLog' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'temp' is assigned a value but never used.","'setTemp' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["193"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["194"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [data]",{"range":"201","text":"202"},"Update the dependencies array to be: [id]",{"range":"203","text":"204"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"205","text":"206"},[812,814],"[data]",[2277,2279],"[id]",[5553,5560],"[certUrl, coordinates, final, type]"]