[{"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx":"1","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts":"2","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx":"3","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts":"4","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx":"5","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ResetPassword.tsx":"6","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ForgotPassword.tsx":"7","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx":"8","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Home/Home.tsx":"9","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar2/Navbar2.tsx":"10","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx":"11","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx":"12","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/index.tsx":"13","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx":"14","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx":"15","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx":"16","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx":"17","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/User_Uploads/index.tsx":"18","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx":"19","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx":"20","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx":"21","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar/index.tsx":"22"},{"size":500,"mtime":1637548494664,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1637548494664,"results":"25","hashOfConfig":"24"},{"size":1178,"mtime":1637548494653,"results":"26","hashOfConfig":"24"},{"size":1045,"mtime":1637548494653,"results":"27","hashOfConfig":"24"},{"size":485,"mtime":1637548494653,"results":"28","hashOfConfig":"24"},{"size":3134,"mtime":1637548494655,"results":"29","hashOfConfig":"24"},{"size":2147,"mtime":1637548494655,"results":"30","hashOfConfig":"24"},{"size":220,"mtime":1637548494654,"results":"31","hashOfConfig":"24"},{"size":641,"mtime":1637548494656,"results":"32","hashOfConfig":"24"},{"size":582,"mtime":1637548494657,"results":"33","hashOfConfig":"24"},{"size":1214,"mtime":1637548494656,"results":"34","hashOfConfig":"24"},{"size":1658,"mtime":1637548494655,"results":"35","hashOfConfig":"24"},{"size":4557,"mtime":1637548494658,"results":"36","hashOfConfig":"24"},{"size":2874,"mtime":1637548494656,"results":"37","hashOfConfig":"24"},{"size":15874,"mtime":1637548494659,"results":"38","hashOfConfig":"24"},{"size":9726,"mtime":1637660951604,"results":"39","hashOfConfig":"24"},{"size":214,"mtime":1637548494658,"results":"40","hashOfConfig":"24"},{"size":1698,"mtime":1637548494659,"results":"41","hashOfConfig":"24"},{"size":942,"mtime":1637548494654,"results":"42","hashOfConfig":"24"},{"size":1811,"mtime":1637548494654,"results":"43","hashOfConfig":"24"},{"size":1562,"mtime":1637548494654,"results":"44","hashOfConfig":"24"},{"size":1739,"mtime":1637548494657,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n0ashg",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ResetPassword.tsx",["103","104"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./Forgot.css\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst ResetPassword: React.FC<Props> = (props) => {\n  const current_url = window.location.href;\n  const param_array = current_url.split(\"/\");\n  const id = param_array[4];\n  const token = param_array[5];\n\n  const url = \"http://localhost:5000\";\n\n  const [pass, setPass] = useState<string>(\"\");\n  const [err, setError] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>(\"\");\n\n  function handleSubmit() {\n    const data = {\n      id,\n      token,\n      pass,\n    };\n\n    axios\n      .patch(url + \"/api/auth/reset\", data)\n      .then(\n        (res: any) =>\n          (res.data.status = \"success\"\n            ? (setError(false),\n              setSuccess(true),\n              setMsg(\"Password Updated Successfully\"))\n            : null)\n      )\n      .catch((err) => console.log(err.message));\n\n    console.log(data);\n  }\n  return (\n    // <div className=\"forgot-container\">\n    //   <div className=\"forgot-box\">\n    //     <div className=\"forgot-header\">Reset Password</div>\n    //     {msg !== \"\" ? (\n    //       <div className={err ? \"failure\" : success ? \"success\" : \"no-class\"}>\n    //         {msg}\n    //       </div>\n    //     ) : null}\n\n    //     <form>\n    //       <input\n    //         type=\"text\"\n    //         className=\"forgot-input\"\n    //         onChange={(e) => setPass(e.target.value)}\n    //         placeholder=\"Enter new password\"\n    //       ></input>\n    //       <button\n    //         type=\"submit\"\n    //         className=\"forgot-submit\"\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           handleSubmit();\n    //         }}\n    //       >\n    //         Submit\n    //       </button>\n    //     </form>\n    //     <div className=\"back-div\">\n    //       <Link to={\"/\"} id=\"back\">\n    //         Back To Login\n    //       </Link>\n    //     </div>\n    //   </div>\n    // </div>\n    <div>\n    <Navbar2 login={false} signup={false} />\n    <div className=\"main-c\">\n      <div className=\"bg-design\"></div>\n      <div className=\"login-box box-2\">\n        <div className=\"login-h\">Reset Password</div>\n        <div>\n          {msg !== \"\" ? (\n            <div\n              className={err ? \"failure\" : success ? \"success\" : \"no-class\"}\n            >\n              {msg}\n            </div>\n          ) : null}\n        </div>\n\n        <form className=\"log-form\">\n          <div>\n            <input\n              className=\"form-item\"\n              type=\"email\"\n            onChange={(e) => setPass(e.target.value)}\n            placeholder=\"Enter new password\"\n    />\n          </div>\n          <button\n            className=\"submit-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              handleSubmit();\n            }}\n          >\n            Submit\n          </button>\n         \n        </form>\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default ResetPassword;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Forgot/ForgotPassword.tsx",["105","106","107"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./Forgot.css\";\nimport { Link } from \"react-router-dom\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\n\ninterface Props {}\n\nconst ForgotPassword: React.FC<Props> = (props) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [err, setError] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>(\"\");\n\n  const url = \"http://localhost:5000\";\n\n  function handleSubmit() {\n    const data = {\n      email,\n    };\n    console.log(data);\n\n    axios\n      .post(url + \"/api/auth/forgot\", data)\n      .then((res: any) =>\n        res.data.status == \"error\"\n          ? (setError(true), setMsg(res.data.error))\n          : res.data.status == \"success\"\n          ? (setError(false),\n            setSuccess(true),\n            setMsg(\"Mail with password reset link has been sent.\"))\n          : null\n      )\n      .catch((err) => console.log(err.message));\n\n    console.log(data);\n  }\n\n  return (\n    <div>\n      <Navbar2 login={false} signup={false} />\n      <div className=\"main-c\">\n        <div className=\"bg-design\"></div>\n        <div className=\"login-box box-2\">\n          <div className=\"login-h\">Forgot Password</div>\n          <div>\n            {msg !== \"\" ? (\n              <div\n                className={err ? \"failure\" : success ? \"success\" : \"no-class\"}\n              >\n                {msg}\n              </div>\n            ) : null}\n          </div>\n\n          <form className=\"log-form\">\n            <div>\n              <input\n                className=\"form-item\"\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your registered email id\"\n              />\n            </div>\n            <button\n              className=\"submit-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Submit\n            </button>\n           \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Home/Home.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar2/Navbar2.tsx",["108"],"import React from 'react';\nimport './Navbar2.css';\nimport logo2 from '../../images/logo2.png';\nimport {Link} from \"react-router-dom\";\n\nexport default function Navbar2(props) {\n    return (\n        <div className=\"nav-c\">\n            \n            <img className=\"logo2\" src={logo2}></img>\n\n            <div className=\"nav-right\">\n            <Link to={\"/login\"} className={props.login?\"nav-link nav-active\":\"nav-link\"}>Login</Link>\n            <Link to={\"/signup\"}  className={props.signup?\"nav-active-2 nav-link\":\"nav-link\"}>Sign up</Link>\n            </div>\n        </div>\n    )\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx",["109","110","111","112","113","114","115"],"import \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport NavBar from \"../Navbar\";\n\nfunction Generate(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  function handleLogout() {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  }\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n<NavBar/>\n      <div className=\"home-main\"></div>\n      <div className=\"home-header\">Choose a template</div>\n\n      {uploadedCerts.map((cert) => (\n        <Link to={\"/single-cert/\" + cert._id}>\n          <img src={cert.certUrl} className=\"home-photo\" />\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nexport default Generate;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx",["116","117","118","119","120","121"],"import \"./dashboard.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../Navbar\";\nfunction Home2(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n\n  const handleLogout = () => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData, {})\n      .then((res) => {\n        console.log(res);\n\n        //post\n        //route??\n      });\n    const modalClose = document.getElementById(\"modalClose\");\n    modalClose.click();\n    window.location.reload();\n  };\n\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n  }\n\n  console.log(userDetails.user.role);\n  return (\n    <div className=\"container\">\n      <NavBar />\n\n      <div className=\"home-header\">Existing Templates</div>\n      {uploadedCerts.map((cert) => (\n        <img src={cert.certUrl} className=\"home-photo\" />\n      ))}\n    </div>\n  );\n}\n\nexport default Home2;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/index.tsx",["122","123"],"import React, { useState } from \"react\";\n\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./signup.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport { AiFillEyeInvisible } from 'react-icons/ai';\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage }:any = useAuthState();\n  const [visible, setVisible] = useState(false);\n  \n  \n  const handleSignUp = async(e) => {\n    e.preventDefault();\n\n    try {\n      let res = await signUpUser(dispatch, { name, email, password, role: 'MC' });\n      if (res == \"success\") {\n        props.history.push(\"./login\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  function toggleVisible(e){\n    e.preventDefault();\n    setVisible(!visible);\n  }\n  return (\n    <>\n      {/* <div className={styles.container}>\n        <div style={{width:200}}>\n          <h1>SignUp Page</h1>\n          <div>\n            {errorMessage ? (\n              <p className={styles.error}>{errorMessage}</p>\n            ) : null}\n          </div>\n          <form>\n            <div className={styles.loginForm}>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"text\">Name</label>\n                <input\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n            </div>\n            <button onClick={handleSignUp} disabled={loading}>\n              Signup\n            </button>\n          </form>\n        </div>\n      </div> */}\n      <div>\n        <Navbar2 login={false} signup={true} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n            {errorMessage ? (\n              <p className=\"error\">{errorMessage}</p>\n            ) : null}\n\n            {/* {successMessage ? (\n              <p className=\"success\">{successMessage}</p>\n            ) : null} */}\n          </div>\n\n            <form className=\"log-form\">\n              <div>\n              <input\n              className=\"form-item\"\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n\n              </div>\n              <div >\n                <input\n                className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div >\n                <input\n                className=\"form-item\"\n                  type={visible?\"text\":\"password\"}\n                  placeholder=\"Enter Password\"\n\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button  className=\"toggle-button-2\" onClick={(e)=>toggleVisible(e)}><AiFillEyeInvisible/></button>\n              </div>\n              <button className=\"submit-btn\" onClick={handleSignUp} disabled={loading}>\n                Sign Up\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx",["124","125","126"],"import React, { useState, useEffect } from \"react\";\n\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./login.module.css\";\nimport Navbar2 from \"../Navbar2/Navbar2\";\nimport \"./login.css\";\nimport { AiFillEyeInvisible } from 'react-icons/ai';\nimport {Link} from 'react-router-dom';\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage, successMessage }: any = useAuthState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await loginUser(dispatch, { email, password });\n      let user = localStorage.getItem(\"currentUser\")\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n        : \"\";\n      if (user) {\n        props.history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\nfunction toggleVisible(e){\n  e.preventDefault();\n  setVisible(!visible);\n}\n  return (\n    <>\n      <div>\n        <Navbar2 login={true} signup={false} />\n        <div className=\"main-c\">\n          <div className=\"bg-design\"></div>\n          <div className=\"login-box\">\n            <div className=\"login-h\">\n              An <span className=\"blue\">in-house</span> certificate generator.\n            </div>\n            <div>\n            {errorMessage ? (\n              <p className=\"error\">{errorMessage}</p>\n            ) : null}\n\n            {successMessage ? (\n              <p className=\"success\">{successMessage}</p>\n            ) : null}\n          </div>\n\n            <form className=\"log-form\">\n              <div >\n                <input\n                className=\"form-item\"\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Enter Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div >\n                <input\n                className=\"form-item\"\n                  type={visible?\"text\":\"password\"}\n                  placeholder=\"Enter Password\"\n\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n                <button  className=\"toggle-button\" onClick={(e)=>toggleVisible(e)}><AiFillEyeInvisible/></button>\n              </div>\n              <button className=\"submit-btn\" type=\"submit\" onClick={handleLogin} disabled={loading}>\n                Login\n              </button>\n              <div className=\"forgot\"><Link to={\"/forgot\"} className=\"f-link\">Forgot Password?</Link></div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState } from \"react\";\nimport NavBar from \"../Navbar\";\nimport \"./Upload.css\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\n\nexport default function Upload() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  let userId = userDetails.user.id;\n  const [cert, setCert] = useState(\"\");\n  const [certId, setCertId] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const [nameTop, setNameTop] = useState<number>(0);\n  const [nameLeft, setNameLeft] = useState<number>(0);\n\n  const [eventTop, setEventTop] = useState<number>(0);\n  const [eventLeft, setEventLeft] = useState<number>(0);\n\n  const [dateTop, setDateTop] = useState<number>(0);\n  const [dateLeft, setDateLeft] = useState<number>(0);\n\n  const [positionTop, setPositionTop] = useState<number>(0);\n  const [positionLeft, setPositionLeft] = useState<number>(0);\n\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n\n    console.log(\"In this\");\n    // @ts-ignore\n    var file = document.getElementById(\"file-inp\").files[0];\n    console.log(file);\n    var reader = new FileReader();\n    console.log(reader);\n    reader.onloadend = function () {\n      document.getElementById(\"set-bg\").style.backgroundImage =\n        \"url(\" + reader.result + \")\";\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n    }\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\n  }\n\n  function upload() {\n    const inp = document.getElementById(\"file-inp\");\n    inp.click();\n  }\n\n  function positionNameTop() {\n    const name = document.getElementById(\"name\");\n    name.style.top = nameTop.toString() + \"px\";\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n  function positionNameLeft() {\n    const name = document.getElementById(\"name\");\n    name.style.left = nameLeft.toString() + \"px\";\n    console.log(nameLeft);\n    name.style.visibility = \"visible\";\n    name.style.zIndex = \"10\";\n    name.innerHTML = \"Person Name\";\n  }\n\n  function positionEventTop() {\n    const event = document.getElementById(\"event\");\n    event.style.top = eventTop.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n  function positionEventLeft() {\n    const event = document.getElementById(\"event\");\n    event.style.left = eventLeft.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"Event Name\";\n  }\n\n  function positionEventDateTop() {\n    const event = document.getElementById(\"e-date\");\n    event.style.top = dateTop.toString() + \"px\";\n    event.style.visibility = \"visible\";\n    event.style.zIndex = \"10\";\n    event.innerHTML = \"01-01-2022\";\n  }\n  function positionEventDateLeft() {\n    const eventDate = document.getElementById(\"e-date\");\n    eventDate.style.left = dateLeft.toString() + \"px\";\n    eventDate.style.visibility = \"visible\";\n    eventDate.style.zIndex = \"10\";\n    eventDate.innerHTML = \"01-01-2022\";\n  }\n  function positionPosTop() {\n    const position = document.getElementById(\"position\");\n    position.style.top = positionTop.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n  function positionPosLeft() {\n    const position = document.getElementById(\"position\");\n    position.style.left = positionLeft.toString() + \"px\";\n    position.style.visibility = \"visible\";\n    position.style.zIndex = \"10\";\n    position.innerHTML = \"1st\";\n  }\n\n  const coordinates = {\n    name: [nameTop, nameLeft],\n    event: [eventTop, eventLeft],\n    date: [dateTop, dateLeft],\n    postion: [positionTop, positionLeft],\n  };\n\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\n      .then(async (res: any) => {\n        console.log(res);\n        console.log(res.data._id);\n\n        setCertId(res.data._id);\n        var certDetailObj = {\n          certId: res.data._id,\n          category: type,\n          userId: userId,\n          coordinates: coordinates,\n        };\n        console.log(\"Hello\");\n        console.log(certDetailObj);\n        await axios\n          .put(\n            \"http://localhost:5000/api/cert/cert-upload-details\",\n            certDetailObj\n          )\n          .then((res) => {\n            console.log(res);\n            window.alert(\"Certificate Uploaded Successfully\");\n            window.location.reload();\n          }).catch((err)=>{\n            console.log(err)\n          });\n      })\n      \n      \n      ;\n  };\n\nconsole.log(userId);\n  return (\n    <div>\n      <NavBar />\n      <div className=\"left-c\">\n        <div className=\"left-box\" id=\"set-bg\">\n          <div id=\"name\">Person Name</div>\n          <div id=\"event\">Event Name</div>\n          <div id=\"e-date\">01/01/21</div>\n          <div id=\"position\">2</div>\n\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\n            Choose a file\n          </button>\n        </div>\n\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\n          Delete Image\n        </button>\n      </div>\n      <div className=\"right-c\">\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              className=\"upload-input\"\n              type=\"file\"\n              id=\"file-inp\"\n              onChange={onFileChange}\n            />\n          </div>\n          <div>\n            <select\n              onChange={(e) => setType(e.target.value)}\n              className=\"up-select\"\n            >\n              <option value=\"\">Select Type of Certificate</option>\n              <option value=\"wc\">WC Completion</option>\n              <option value=\"mc\">MC Completion</option>\n              <option value=\"org\">Organizing a Competition</option>\n              <option value=\"comp\">\n                Participating in or winning a Competition\n              </option>\n            </select>\n            {type && (\n              <div>\n                {(type == \"wc\" || type == \"mc\") && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {type == \"org\" && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventTop(parseInt(e.target.value)),\n                            positionEventTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventLeft(parseInt(e.target.value)),\n                            positionEventLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Date:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateTop(parseInt(e.target.value)),\n                            positionEventDateTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateLeft(parseInt(e.target.value)),\n                            positionEventDateLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}{\" \"}\n                {type == \"comp\" && (\n                  <div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameTop(parseInt(e.target.value)),\n                            positionNameTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setNameLeft(parseInt(e.target.value)),\n                            positionNameLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Name:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventTop(parseInt(e.target.value)),\n                            positionEventTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setEventLeft(parseInt(e.target.value)),\n                            positionEventLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Event Date:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateTop(parseInt(e.target.value)),\n                            positionEventDateTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setDateLeft(parseInt(e.target.value)),\n                            positionEventDateLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>{\" \"}\n                    <div className=\"row type-row\">\n                      <label className=\"type-label\">\n                        Enter Coordinates for Positon Won:\n                      </label>\n                      <br />\n                      <div className=\"row input-row\">\n                        <label>Top:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setPositionTop(parseInt(e.target.value)),\n                            positionPosTop()\n                          )}\n                        ></input>\n                        <label>Left:</label>\n                        <input\n                          className=\"type-input\"\n                          type=\"number\"\n                          onChange={(e) => (\n                            setPositionLeft(parseInt(e.target.value)),\n                            positionPosLeft()\n                          )}\n                        ></input>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"upload-info\">\n                  The height of the certificate is 700px x 500px, please enter\n                  all coordinates in px keeping this height and width in mind.\n                </div>\n                <div>\n                  <button type=\"submit\" className=\"submit-up\">\n                    Upload\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport NavBar from \"../Navbar\";\n\nexport default function SingleImage(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const id = window.location.pathname.split(\"/\")[2];\n\n  const [csv, setCsv] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr, setArr] = useState([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [csvError, setCsvError] = useState(false);\n  const [final, setFinal] = useState(false);\n\n  const canvasRef = useRef(null);\n\n  const handleLogout = () => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  function onFileChange(e) {\n    setCsv(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\" + id)\n      .then((response: any) => {\n        console.log(response);\n        console.log(\"jrr;;;oo\");\n        setCertUrl(response.data.certUrl);\n        setCoordinates(response.data.coordinates);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"This fucker ran\");\n    console.log(id);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      ctx.fillText(\"Person Name\", 280, 300);\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    console.log(arr);\n    setShow(true);\n    console.log(certUrl);\n    function toBuffer(ab) {\n      var buf = Buffer.alloc(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buf.length; ++i) {\n        buf[i] = view[i];\n      }\n      return buf;\n    }\n    for (var i = 0; i < arr.length; i++) {\n      var canvasUrl, canvasBuffer;\n      var user = arr[i];\n      console.log(\"Sending:\", user);\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", user.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n\n        ctx.fillText(user.name, 280, 300);\n        var canvas2 = document.getElementById(\"myCanvas\");\n        // var imageData = ctx.getImageData(0, 0, 700, 500);\n        // canvasUrl = imageData.data.buffer\n        // canvasBuffer=toBuffer(canvasUrl)\n        // console.log(canvasUrl)\n      };\n      var data = {\n        subject,\n        content,\n        user,\n        certUrl,\n        \n      };\n      await axios\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\n        .catch((err) => console.log(err.message));\n    }\n    setShow(false);\n  };\n\n  const onSubmit = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    await axios\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\n      .then((res: any) => {\n        setArr(res.data);\n        const modalClose = document.getElementById(\"modalClose\");\n        modalClose.click();\n      });\n  };\n\n  function download() {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr);\n    arr.map((element) => {\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n\n        ctx.fillText(element.name, 280, 300);\n        var canvas2: any = document.getElementById(\"myCanvas\");\n        var url = canvas2.toDataURL(\"image/png\");\n\n        var link = document.createElement(\"a\");\n        link.download = `${element.name}.png`;\n        link.href = url;\n        link.click();\n      };\n    });\n    const elementCanvas = document.createElement(\"canvas\");\n    elementCanvas.classList.add(\"hide-canvas\");\n\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    canvasObj.width = 700;\n    canvasObj.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      ctx.fillText(\"Person Name\", 280, 300);\n    };\n  }\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <div className=\"row\">\n        <a className=\"modal-open\" href=\"#modal\">\n          {\" \"}\n          <button className=\"home-button\">Upload CSV File</button>\n        </a>\n        <button className=\"home-button\" onClick={download}>\n          Download All\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload CSV File</h3>\n            <div className=\"modal-area\">\n              <div className=\"row\">\n                <form onSubmit={onSubmit} id=\"csvForm\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"upload-input\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"form-group\">\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Subject\"\n                        required\n                        type=\"text\"\n                        onChange={(e) => setSubject(e.target.value)}\n                      ></input>\n                    </div>\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Content For Mail\"\n                        type=\"text\"\n                        onChange={(e) => setContent(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Send Mail\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvas2\"\n          width=\"700\"\n          height=\"200\"\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/User_Uploads/index.tsx",["173","174","175","176","177","178"],"import React, { useState, useEffect } from \"react\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../Navbar\";\nimport \"./user_upload.css\";\nimport axios from \"axios\";\n\nexport default function User_Upload() {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n  const user_id = userDetails.user.id;\n\n  const handleLogout = (props) => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n\n  const user_array = uploadedCerts.filter((cert) => cert.userId === user_id);\n  function handleDelete(id) {\n    axios\n      .delete(\"http://localhost:5000/api/cert/\" + id)\n      .then((res) =>  window.location.reload());\n  }\n  return (\n    <div>\n      <NavBar />\n      <div className=\"user-name\">{userDetails.user.name}</div>\n      <div className=\"user-email\">{userDetails.user.email}</div>\n    <div className=\"map-c\">\n      {user_array.map((cert) => (\n        <div className=\"up-container\">\n          <img src={cert.certUrl} className=\"upload-photo\" />\n          <div>\n            <button\n              className=\"cert-delete\"\n              onClick={(e) => handleDelete(cert._id)}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx",["179","180"],"const ROOT_URL = \"http://localhost:5000\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(loginPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data,\n        status: res.status,\n      });\n\n      return res;\n    }\n\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function signUpUser(dispatch, signUpPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(signUpPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_SIGNUP\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\n      return res.status;\n    }\n\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function logOut(dispatch) {\n  dispatch({ type: \"LOGOUT\" });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx",["181","182","183","184"],"import React, { useState, useReducer } from \"react\";\n\nlet user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n  : \"\";\nlet token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).token\n  : \"\";\n\nexport const initialState = {\n  user: \"\" || JSON.parse(localStorage.getItem(\"currentUser\")),\n  token: \"\" || token,\n  loading: false,\n  errorMessage: null,\n  successMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        user: JSON.parse(localStorage.getItem(\"currentUser\")),\n        successMessage: \"Logged in Successfully\",\n        loading: false,\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        token: \"\",\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    case \"REQUEST_SIGNUP\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...initialState,\n        successMessage: \"Signed up Successfully\",\n        loading: false,\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar/index.tsx",["185","186","187"],"import React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport logo from \"../../images/iecse_logo.svg\";\nimport user from \"../../images/user_icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nexport default function NavBar(props) {\n  const [toggle, setToggle] = useState(false);\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  const handleLogout = () => {\n    logOut(dispatch);\n    window.location.href = '/home';\n    \n    } //relative to domain  };\n\n  return (\n    <>\n      <div className=\"nav-container\">\n        <div className=\"left-container\">\n          <Link to={\"/dashboard\"}>\n            <img src={logo} />\n          </Link>\n          <span className=\"cert-h\">Certman</span>\n        </div>\n        <div className=\"right-container\">\n          <button className=\"icon-btn\" onClick={() => setToggle(!toggle)}>\n            <img src={user} className=\"user-icon\"></img>\n          </button>\n        </div>\n      </div>\n      {toggle && (\n        <div className=\"toggle-div\">\n          <div>\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>Your Uploads</Link>\n          </div>\n          <div>\n            <Link to={\"/upload\"} className=\"toggle-item\">Upload a new Template </Link>\n          </div>\n          {userDetails.user.role == \"Board\" && (\n            <div>\n              <Link className=\"toggle-item\" to={\"/generate\"}>Generate Certificates </Link>\n            </div>\n          )}\n          <div>\n            <button className=\"logout-btn\" onClick={()=>handleLogout()}>\n            <Link className=\"toggle-item\"> Logout</Link>\n            </button>\n          </div>\n        </div>\n      )}{\" \"}\n    </>\n  );\n}\n",{"ruleId":"188","severity":1,"message":"189","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"192","line":4,"column":16,"nodeType":"190","messageId":"191","endLine":4,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":26,"column":25,"nodeType":"195","messageId":"196","endLine":26,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":28,"column":29,"nodeType":"195","messageId":"196","endLine":28,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":10,"column":13,"nodeType":"199","endLine":10,"endColumn":48},{"ruleId":"188","severity":1,"message":"200","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":20},{"ruleId":"188","severity":1,"message":"201","line":10,"column":9,"nodeType":"190","messageId":"191","endLine":10,"endColumn":20},{"ruleId":"188","severity":1,"message":"202","line":11,"column":12,"nodeType":"190","messageId":"191","endLine":11,"endColumn":24},{"ruleId":"188","severity":1,"message":"203","line":16,"column":10,"nodeType":"190","messageId":"191","endLine":16,"endColumn":14},{"ruleId":"188","severity":1,"message":"204","line":16,"column":16,"nodeType":"190","messageId":"191","endLine":16,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":30,"column":6,"nodeType":"207","endLine":30,"endColumn":8,"suggestions":"208"},{"ruleId":"197","severity":1,"message":"198","line":40,"column":11,"nodeType":"199","endLine":40,"endColumn":60},{"ruleId":"188","severity":1,"message":"189","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":14},{"ruleId":"188","severity":1,"message":"209","line":14,"column":9,"nodeType":"190","messageId":"191","endLine":14,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":30,"column":6,"nodeType":"207","endLine":30,"endColumn":8,"suggestions":"210"},{"ruleId":"188","severity":1,"message":"211","line":31,"column":9,"nodeType":"190","messageId":"191","endLine":31,"endColumn":17},{"ruleId":"188","severity":1,"message":"212","line":49,"column":12,"nodeType":"190","messageId":"191","endLine":49,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":60,"column":9,"nodeType":"199","endLine":60,"endColumn":58},{"ruleId":"188","severity":1,"message":"213","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":23,"column":15,"nodeType":"195","messageId":"196","endLine":23,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"213","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"215","line":23,"column":11,"nodeType":"190","messageId":"191","endLine":23,"endColumn":14},{"ruleId":"188","severity":1,"message":"216","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":9},{"ruleId":"188","severity":1,"message":"217","line":6,"column":27,"nodeType":"190","messageId":"191","endLine":6,"endColumn":33},{"ruleId":"188","severity":1,"message":"218","line":10,"column":9,"nodeType":"190","messageId":"191","endLine":10,"endColumn":17},{"ruleId":"188","severity":1,"message":"219","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":206,"column":24,"nodeType":"195","messageId":"196","endLine":206,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":206,"column":40,"nodeType":"195","messageId":"196","endLine":206,"endColumn":42},{"ruleId":"220","severity":1,"message":"221","line":219,"column":65,"nodeType":"222","messageId":"223","endLine":219,"endColumn":66},{"ruleId":"220","severity":1,"message":"221","line":228,"column":66,"nodeType":"222","messageId":"223","endLine":228,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":236,"column":23,"nodeType":"195","messageId":"196","endLine":236,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":249,"column":65,"nodeType":"222","messageId":"223","endLine":249,"endColumn":66},{"ruleId":"220","severity":1,"message":"221","line":258,"column":66,"nodeType":"222","messageId":"223","endLine":258,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":275,"column":66,"nodeType":"222","messageId":"223","endLine":275,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":284,"column":67,"nodeType":"222","messageId":"223","endLine":284,"endColumn":68},{"ruleId":"220","severity":1,"message":"221","line":301,"column":65,"nodeType":"222","messageId":"223","endLine":301,"endColumn":66},{"ruleId":"220","severity":1,"message":"221","line":310,"column":66,"nodeType":"222","messageId":"223","endLine":310,"endColumn":67},{"ruleId":"193","severity":1,"message":"194","line":318,"column":23,"nodeType":"195","messageId":"196","endLine":318,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":331,"column":65,"nodeType":"222","messageId":"223","endLine":331,"endColumn":66},{"ruleId":"220","severity":1,"message":"221","line":340,"column":66,"nodeType":"222","messageId":"223","endLine":340,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":357,"column":66,"nodeType":"222","messageId":"223","endLine":357,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":366,"column":67,"nodeType":"222","messageId":"223","endLine":366,"endColumn":68},{"ruleId":"220","severity":1,"message":"221","line":383,"column":65,"nodeType":"222","messageId":"223","endLine":383,"endColumn":66},{"ruleId":"220","severity":1,"message":"221","line":392,"column":66,"nodeType":"222","messageId":"223","endLine":392,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":409,"column":69,"nodeType":"222","messageId":"223","endLine":409,"endColumn":70},{"ruleId":"220","severity":1,"message":"221","line":418,"column":70,"nodeType":"222","messageId":"223","endLine":418,"endColumn":71},{"ruleId":"188","severity":1,"message":"200","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":4,"column":22,"nodeType":"190","messageId":"191","endLine":4,"endColumn":26},{"ruleId":"188","severity":1,"message":"201","line":10,"column":9,"nodeType":"190","messageId":"191","endLine":10,"endColumn":20},{"ruleId":"188","severity":1,"message":"224","line":20,"column":10,"nodeType":"190","messageId":"191","endLine":20,"endColumn":21},{"ruleId":"188","severity":1,"message":"225","line":21,"column":10,"nodeType":"190","messageId":"191","endLine":21,"endColumn":14},{"ruleId":"188","severity":1,"message":"226","line":21,"column":16,"nodeType":"190","messageId":"191","endLine":21,"endColumn":23},{"ruleId":"188","severity":1,"message":"227","line":24,"column":10,"nodeType":"190","messageId":"191","endLine":24,"endColumn":18},{"ruleId":"188","severity":1,"message":"209","line":29,"column":9,"nodeType":"190","messageId":"191","endLine":29,"endColumn":21},{"ruleId":"205","severity":1,"message":"228","line":51,"column":6,"nodeType":"207","endLine":51,"endColumn":8,"suggestions":"229"},{"ruleId":"205","severity":1,"message":"230","line":75,"column":6,"nodeType":"207","endLine":75,"endColumn":13,"suggestions":"231"},{"ruleId":"193","severity":1,"message":"194","line":78,"column":13,"nodeType":"195","messageId":"196","endLine":78,"endColumn":15},{"ruleId":"188","severity":1,"message":"232","line":89,"column":14,"nodeType":"190","messageId":"191","endLine":89,"endColumn":22},{"ruleId":"188","severity":1,"message":"233","line":98,"column":11,"nodeType":"190","messageId":"191","endLine":98,"endColumn":20},{"ruleId":"188","severity":1,"message":"234","line":98,"column":22,"nodeType":"190","messageId":"191","endLine":98,"endColumn":34},{"ruleId":"235","severity":1,"message":"236","line":112,"column":27,"nodeType":"237","messageId":"238","endLine":126,"endColumn":8},{"ruleId":"188","severity":1,"message":"239","line":121,"column":13,"nodeType":"190","messageId":"191","endLine":121,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":136,"column":46,"nodeType":"222","messageId":"223","endLine":136,"endColumn":47},{"ruleId":"193","severity":1,"message":"194","line":143,"column":13,"nodeType":"195","messageId":"196","endLine":143,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":162,"column":13,"nodeType":"195","messageId":"196","endLine":162,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":168,"column":23,"nodeType":"242","messageId":"243","endLine":168,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":238,"column":13,"nodeType":"199","endLine":243,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":270,"column":13,"nodeType":"199","endLine":275,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"203","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":14},{"ruleId":"188","severity":1,"message":"204","line":12,"column":16,"nodeType":"190","messageId":"191","endLine":12,"endColumn":23},{"ruleId":"188","severity":1,"message":"209","line":16,"column":9,"nodeType":"190","messageId":"191","endLine":16,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":32,"column":6,"nodeType":"207","endLine":32,"endColumn":8,"suggestions":"246"},{"ruleId":"197","severity":1,"message":"198","line":48,"column":11,"nodeType":"199","endLine":48,"endColumn":62},{"ruleId":"193","severity":1,"message":"194","line":18,"column":20,"nodeType":"195","messageId":"196","endLine":18,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":53,"column":20,"nodeType":"195","messageId":"196","endLine":53,"endColumn":22},{"ruleId":"188","severity":1,"message":"247","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"248","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"249","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"250","line":3,"column":5,"nodeType":"190","messageId":"191","endLine":3,"endColumn":9},{"ruleId":"197","severity":1,"message":"198","line":23,"column":13,"nodeType":"199","endLine":23,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":29,"column":13,"nodeType":"199","endLine":29,"endColumn":51},{"ruleId":"193","severity":1,"message":"194","line":41,"column":34,"nodeType":"195","messageId":"196","endLine":41,"endColumn":36},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'handleLogout' is defined but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["251"],"'handleLogout' is assigned a value but never used.",["252"],"'onSubmit' is assigned a value but never used.","'onFileChange' is defined but never used.","'styles' is defined but never used.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'$' is defined but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'certId' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'coordinates' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'certUrl' and 'id'. Either include them or remove the dependency array.",["254"],"'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'background', 'user'.","FunctionExpression","unsafeRefs","'canvas2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["255"],"'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.",{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"256","fix":"263"},"Update the dependencies array to be: [uploadedCerts]",{"range":"264","text":"265"},{"range":"266","text":"265"},"Update the dependencies array to be: [id]",{"range":"267","text":"268"},"Update the dependencies array to be: [certUrl, final, id]",{"range":"269","text":"270"},{"range":"271","text":"265"},[841,843],"[uploadedCerts]",[819,821],[1527,1529],"[id]",[2131,2138],"[certUrl, final, id]",[882,884]]