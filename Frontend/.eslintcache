[{"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx":"1","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx":"3","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts":"4","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx":"5","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx":"6","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx":"7","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx":"8","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx":"9","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx":"10","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx":"11","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx":"12","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx":"13","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx":"14","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx":"15","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx":"16","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx":"17","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx":"18","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx":"19","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx":"20","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx":"21","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx":"22"},{"size":517,"mtime":1643871276637,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1643871276638,"results":"25","hashOfConfig":"24"},{"size":1355,"mtime":1643871276607,"results":"26","hashOfConfig":"24"},{"size":1181,"mtime":1643871276608,"results":"27","hashOfConfig":"24"},{"size":549,"mtime":1643871276607,"results":"28","hashOfConfig":"24"},{"size":3273,"mtime":1643871276612,"results":"29","hashOfConfig":"24"},{"size":1799,"mtime":1643871276624,"results":"30","hashOfConfig":"24"},{"size":2289,"mtime":1643871276612,"results":"31","hashOfConfig":"24"},{"size":244,"mtime":1643871276610,"results":"32","hashOfConfig":"24"},{"size":5054,"mtime":1643871276619,"results":"33","hashOfConfig":"24"},{"size":839,"mtime":1643871276614,"results":"34","hashOfConfig":"24"},{"size":3511,"mtime":1643871276617,"results":"35","hashOfConfig":"24"},{"size":1106,"mtime":1643871276611,"results":"36","hashOfConfig":"24"},{"size":21294,"mtime":1643899711971,"results":"37","hashOfConfig":"24"},{"size":235,"mtime":1643871276618,"results":"38","hashOfConfig":"24"},{"size":3376,"mtime":1643871276615,"results":"39","hashOfConfig":"24"},{"size":1033,"mtime":1643871276613,"results":"40","hashOfConfig":"24"},{"size":1543,"mtime":1643871276623,"results":"41","hashOfConfig":"24"},{"size":33597,"mtime":1643871276623,"results":"42","hashOfConfig":"24"},{"size":1852,"mtime":1643871276609,"results":"43","hashOfConfig":"24"},{"size":1006,"mtime":1643871276609,"results":"44","hashOfConfig":"24"},{"size":1741,"mtime":1643871276610,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"f3ftkz",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\index.tsx",[],["97","98"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\App.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Config\\routes.ts",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Components\\AppRoute.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ResetPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Verify\\verify.tsx",["99","100"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\n\r\ninterface Props {}\r\n\r\nconst Verify = (props) => {\r\n  const current_url = window.location.href;\r\n  const param_array = current_url.split(\"/\");\r\n  const id = param_array[4];\r\n  console.log(id);\r\n  const url = \"http://localhost:5000\";\r\n  const data = {\r\n    id,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .patch(url + \"/api/auth/verifyacc\", data)\r\n      .then((res: any) =>\r\n        res.data.status === \"success\"\r\n          ? (console.log(res.data),\r\n            setMsg(\"Account Verrified Successfully!\"),\r\n            setTimeout(function () {\r\n              window.location.href = \"../login\";\r\n            }, 2000))\r\n          : setMsg(res.data.error)\r\n      )\r\n      .catch((err) => setMsg(err.message));\r\n  }, []);\r\n\r\n  const [msg, setMsg] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"login-h verify-msg\">\r\n          {\" \"}\r\n          {msg !== \"\" ? <div>{msg}</div> : null}\r\n        </div>\r\n\r\n        {/* <form className=\"log-form\">\r\n            <div>\r\n              <input\r\n                className=\"form-item\"\r\n                type=\"email\"\r\n                onChange={(e) => setPass(e.target.value)}\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"submit-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Forgot\\ForgotPassword.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SignUp\\signup.tsx",["101"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cnfrmpass, setcnfrmPassword] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign }: any = useAuthState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const [successMessage, setSuccessMsg] = useState(\"\");\r\n  const url = \"http://localhost:5000\";\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"in sugnup\");\r\n    try {\r\n      let res = await signUpUser(dispatch, {\r\n        name,\r\n        email,\r\n        password,\r\n        role: \"MC\",\r\n      });\r\n      if (res === \"success\") {\r\n        errorMessageSign = \"\";\r\n        console.log(\"res is success time for another request\");\r\n        console.log(email);\r\n        setSuccessMsg(\"Signed up Successfully\");\r\n        const data = {\r\n          email,\r\n        };\r\n        console.log(\"Sending verify request\");\r\n        axios\r\n          .post(url + \"/api/auth/verify\", data)\r\n          .then((res: any) =>\r\n            res.data.status === \"success\"\r\n              ? setSuccessMsg(\"Please check your mail to verify your account.\")\r\n              : console.log(res.data)\r\n          )\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n  function toggleVisible2(e) {\r\n    e.preventDefault();\r\n    setVisible2(!visible2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={false} signup={true} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageSign ? (\r\n                <p className=\"error\">{errorMessageSign}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"text\"\r\n                  id=\"text\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-2\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible2 ? \"text\" : \"password\"}\r\n                  placeholder=\"Confirm Password\"\r\n                  id=\"password\"\r\n                  value={cnfrmpass}\r\n                  onChange={(e) => setcnfrmPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button-3\"\r\n                  onClick={(e) => toggleVisible2(e)}\r\n                >\r\n                  {!visible2 ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              {cnfrmpass !== password && (\r\n                <div className=\"match\">Passwords do not match</div>\r\n              )}\r\n              <button\r\n                className=\"submit-btn\"\r\n                onClick={handleSignUp}\r\n                disabled={loading || cnfrmpass !== password}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Home\\Home.tsx",["102","103"],"import React from \"react\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./Home.css\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\n\r\nexport default function Home() {\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 login={false} signup={false} />\r\n      <div className=\"main-c\">\r\n        <div className=\"bg-design\"></div>\r\n        <div className=\"home-box\">\r\n          <div className=\"c-heading\">CERTMAN</div>\r\n          <div className=\"c-byline\">An in-house certificate generator</div>\r\n          {!userDetails.user && (\r\n            <div className=\"c-more\">\r\n              Log in to experience a wide range of features.\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/*\r\n         */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Navbar2\\Navbar2.tsx",["104","105","106","107","108"],"import React, { useState } from \"react\";\r\nimport \"./Navbar2.css\";\r\nimport logo2 from \"../../images/logo2.png\";\r\nimport s from \"../../images/S.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\r\nimport user from \"../../images/logo22.png\";\r\n\r\nexport default function Navbar2(props) {\r\n  const [toggle, setToggle] = useState(false);\r\n  const dispatch = useAuthDispatch();\r\n  const userDetails = useAuthState();\r\n  const handleLogout = () => {\r\n    logOut(dispatch);\r\n    window.location.href = \"/home\";\r\n  }; //relative to domain  };\r\n  const { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  return (\r\n    <div className=\"nav-c\">\r\n      <img className=\"logo2\" src={logo2} alt=\"logo\"></img>\r\n      <div className=\"b\">\r\n        <Link className=\"certman\" to={\"/home\"}>\r\n          CERTMAN\r\n        </Link>\r\n      </div>\r\n\r\n      {/* {props.login || props.signup ? (\r\n        <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n      ) : userDetails.user ? (\r\n        <div className=\"b2\">\r\n          <img className=\"s\" src={s} alt=\"logo\"></img>\r\n          <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <div className=\"s-c\">\r\n            {\" \"}\r\n            <Link className=\"certman2\" to={\"/dashboard\"}>\r\n              CERTMAN\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n           <div className=\"b\">\r\n          <Link className=\"certman\" to={\"/home\"}>\r\n            CERTMAN\r\n          </Link>\r\n        </div>\r\n          <img className=\"logo2\" alt=\"logo2\" src={logo2}></img>\r\n        </div>\r\n      )} */}\r\n\r\n      <div className=\"nav-right\">\r\n        {userDetails.user ? (\r\n          <div className=\"right-container\">\r\n            <button\r\n              className=\"icon-btn\"\r\n              onClick={() => {\r\n                setToggle(!toggle);\r\n              }}\r\n            >\r\n              <img alt=\"icon\" src={user} className=\"user-icon\"></img>\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {\" \"}\r\n            <Link\r\n              to={\"/login\"}\r\n              className={props.login ? \"nav-link nav-active\" : \"nav-link\"}\r\n            >\r\n              Login\r\n            </Link>\r\n            <Link\r\n              to={\"/signup\"}\r\n              className={props.signup ? \"nav-active-2 nav-link\" : \"nav-link\"}\r\n            >\r\n              Sign up\r\n            </Link>{\" \"}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {toggle && (\r\n        <div className=\"toggle-div\">\r\n          <div>\r\n            <Link className=\"toggle-item\" to={\"/user_upload\"}>\r\n              Your Uploads\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link to={\"/upload\"} className=\"toggle-item\">\r\n              Upload a new Template{\" \"}\r\n            </Link>\r\n          </div>\r\n          {userDetails.user.role === \"Board\" && (\r\n            <div>\r\n              <Link className=\"toggle-item\" to={\"/generate\"}>\r\n                Generate Certificates{\" \"}\r\n              </Link>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <button className=\"logout-btn\" onClick={() => handleLogout()}>\r\n              <Link className=\"toggle-item\"> Logout</Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\SingleCert\\index.tsx",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\NotFound\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Login\\index.tsx",["139","140","141"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\r\n// import styles from \"./login.module.css\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport \"./login.css\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  // const [errorMessage2,setEmsg]=useState(false)\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const dispatch = useAuthDispatch();\r\n  var { loading, errorMessageLog, errorMessageSign, successMessage }: any =\r\n    useAuthState();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await loginUser(dispatch, { email, password });\r\n      let user = localStorage.getItem(\"currentUser\")\r\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\r\n        : \"\";\r\n      if (user) {\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  function toggleVisible(e) {\r\n    e.preventDefault();\r\n    setVisible(!visible);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar2 login={true} signup={false} />\r\n        <div className=\"main-c\">\r\n          <div className=\"bg-design\"></div>\r\n          <div className=\"login-box\">\r\n            <div className=\"login-h\">\r\n              An <span className=\"blue\">in-house</span> certificate generator.\r\n            </div>\r\n            <div>\r\n              {errorMessageLog ? (\r\n                <p className=\"error\">{errorMessageLog}</p>\r\n              ) : null}\r\n\r\n              {successMessage ? (\r\n                <p className=\"success\">{successMessage}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <form className=\"log-form\">\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className=\"form-item\"\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  placeholder=\"Enter Password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  className=\"toggle-button\"\r\n                  onClick={(e) => toggleVisible(e)}\r\n                >\r\n                  {!visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n                </button>\r\n              </div>\r\n              <button\r\n                className=\"submit-btn\"\r\n                type=\"submit\"\r\n                onClick={handleLogin}\r\n                disabled={loading}\r\n              >\r\n                Login\r\n              </button>\r\n              <div className=\"forgot\">\r\n                <Link to={\"/forgot\"} className=\"f-link\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Generate\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\User_Uploads\\index.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Pages\\Upload\\index.tsx",["142"],"import { useState } from \"react\";\r\nimport \"./Upload.css\";\r\nimport axios from \"axios\";\r\nimport { useAuthState } from \"../../Context\";\r\nimport Navbar2 from \"../Navbar2/Navbar2\";\r\nimport qr from \"../../images/qrcode.png\";\r\nimport sig from \"../../images/sig.png\";\r\n\r\nimport up from \"../../images/upload-btn.png\";\r\n\r\nexport default function Upload() {\r\n  const userDetails = useAuthState();\r\n\r\n  let userId = userDetails.user.id;\r\n  const [cert, setCert] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const [qrTop, setqrTop] = useState<number>(0);\r\n  const [qrLeft, setqrLeft] = useState<number>(0);\r\n  const [qrW, setqrW] = useState<number>(0);\r\n  const [qrH, setqrH] = useState<number>(0);\r\n\r\n  const [sig1Top, setsig1Top] = useState<number>(0);\r\n  const [sig1Left, setsig1Left] = useState<number>(0);\r\n  const [sig1W, setsig1W] = useState<number>(0);\r\n  const [sig1H, setsig1H] = useState<number>(0);\r\n\r\n  const [sig2Top, setsig2Top] = useState<number>(0);\r\n  const [sig2Left, setsig2Left] = useState<number>(0);\r\n  const [sig2W, setsig2W] = useState<number>(0);\r\n  const [sig2H, setsig2H] = useState<number>(0);\r\n\r\n  const [nameTop, setNameTop] = useState<number>(0);\r\n  const [nameLeft, setNameLeft] = useState<number>(0);\r\n  const [nameW, setNameW] = useState<number>(0);\r\n  const [nameFont, setNameFont] = useState<number>(0);\r\n\r\n  const [eventTop, setEventTop] = useState<number>(0);\r\n  const [eventLeft, setEventLeft] = useState<number>(0);\r\n  const [eventW, setEventW] = useState<number>(0);\r\n  const [eventFont, setEventFont] = useState<number>(0);\r\n\r\n  const [dateTop, setDateTop] = useState<number>(0);\r\n  const [dateLeft, setDateLeft] = useState<number>(0);\r\n  const [dateW, setDateW] = useState<number>(0);\r\n  const [dateFont, setDateFont] = useState<number>(0);\r\n\r\n  const [positionTop, setPositionTop] = useState<number>(0);\r\n  const [positionLeft, setPositionLeft] = useState<number>(0);\r\n  const [positionW, setPositionW] = useState<number>(0);\r\n  const [positionFont, setPositionFont] = useState<number>(0);\r\n\r\n  const [alert, setAlert] = useState<boolean>(false);\r\nconst [c,setC]=useState();\r\n\r\n  // const[color,setColor]=useState();\r\n  function onFileChange(e) {\r\n    setCert(e.target.files[0]);\r\n\r\n    console.log(\"In this\");\r\n    // @ts-ignore\r\n    var file = document.getElementById(\"file-inp\").files[0];\r\n    console.log(file);\r\n    var reader = new FileReader();\r\n    console.log(reader);\r\n    reader.onloadend = function () {\r\n      document.getElementById(\"set-bg\").style.backgroundImage =\r\n        \"url(\" + reader.result + \")\";\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n    }\r\n    document.getElementById(\"up-btn\").style.visibility = \"hidden\";\r\n  }\r\n\r\n  function upload() {\r\n    const inp = document.getElementById(\"file-inp\");\r\n    inp.click();\r\n  }\r\n\r\n  function positionqrTop(e) {\r\n    setqrTop(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionqrLeft(e) {\r\n    setqrLeft(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function qrWidth(e) {\r\n    setqrW(parseInt(e.target.value));\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function qrHeight(e) {\r\n    setqrH(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"qrc\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionsig1Top(e) {\r\n    setsig1Top(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionsig1Left(e) {\r\n    setsig1Left(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig1Width(e) {\r\n    setsig1W(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig1Height(e) {\r\n    setsig1H(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"sig1\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionsig2Top(e) {\r\n    setsig2Top(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.top = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function positionsig2Left(e) {\r\n    setsig2Left(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig2Width(e) {\r\n    setsig2W(parseInt(e.target.value));\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.width = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n  function sig2Height(e) {\r\n    setsig2H(parseInt(e.target.value));\r\n\r\n    const q = document.getElementById(\"sig2\");\r\n    q.style.height = e.target.value.toString() + \"px\";\r\n    q.style.visibility = \"visible\";\r\n    q.style.zIndex = \"10\";\r\n  }\r\n\r\n  function positionNameTop(e) {\r\n    setNameTop(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.top = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function positionNameLeft(e) {\r\n    setNameLeft(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.left = e.target.value.toString() + \"px\";\r\n    console.log(nameLeft);\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function NameW(e) {\r\n    setNameW(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.width = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n  function NameFont(e) {\r\n    setNameFont(parseInt(e.target.value));\r\n    const name = document.getElementById(\"name\");\r\n    name.style.fontSize = e.target.value.toString() + \"px\";\r\n    name.style.visibility = \"visible\";\r\n    name.style.zIndex = \"10\";\r\n    name.innerHTML = \"Person Name\";\r\n  }\r\n\r\n  function positionEventTop(e) {\r\n    setEventTop(parseInt(e.target.value));\r\n    const event = document.getElementById(\"event\");\r\n    event.style.top = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"in Event Name held on \";\r\n  }\r\n  function positionEventLeft(e) {\r\n    setEventLeft(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.left = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"in Event Name held on \";\r\n  }\r\n  function EventW(e) {\r\n    setEventW(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.width = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"in Event Name held on \";\r\n  }\r\n  function EventFont(e) {\r\n    setEventFont(parseInt(e.target.value));\r\n\r\n    const event = document.getElementById(\"event\");\r\n    event.style.fontSize = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"in Event Name held on \";\r\n  }\r\n\r\n  function positionEventDateTop(e) {\r\n    setDateTop(parseInt(e.target.value));\r\n    const event = document.getElementById(\"e-date\");\r\n    event.style.top = e.target.value.toString() + \"px\";\r\n    event.style.visibility = \"visible\";\r\n    event.style.zIndex = \"10\";\r\n    event.innerHTML = \"01-01-2022\";\r\n  }\r\n  function positionEventDateLeft(e) {\r\n    setDateLeft(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.left = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n  function EventDateW(e) {\r\n    setDateW(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.width = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n  function EventDateFont(e) {\r\n    setDateFont(parseInt(e.target.value));\r\n    const eventDate = document.getElementById(\"e-date\");\r\n    eventDate.style.fontSize = e.target.value.toString() + \"px\";\r\n    eventDate.style.visibility = \"visible\";\r\n    eventDate.style.zIndex = \"10\";\r\n    eventDate.innerHTML = \"01-01-2022\";\r\n  }\r\n\r\n  function positionPosTop(e) {\r\n    setPositionTop(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.top = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function positionPosLeft(e) {\r\n    setPositionLeft(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.left = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function PositionW(e) {\r\n    setPositionW(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.width = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n  function PositionFont(e) {\r\n    setPositionFont(parseInt(e.target.value));\r\n    const position = document.getElementById(\"position\");\r\n    position.style.fontSize = e.target.value.toString() + \"px\";\r\n    position.style.visibility = \"visible\";\r\n    position.style.zIndex = \"10\";\r\n    position.innerHTML = \"1st\";\r\n  }\r\n\r\n  const coordinates = {\r\n    name: [nameTop, nameLeft, nameW, nameFont],\r\n    event: [eventTop, eventLeft, eventW, eventFont],\r\n    date: [dateTop, dateLeft, dateW, dateFont],\r\n    position: [positionTop, positionLeft, positionW, positionFont],\r\n    qr: [qrTop, qrLeft, qrH, qrW],\r\n    cpSig: [sig1Top, sig1Left, sig1H, sig1W],\r\n    faSig: [sig2Top, sig2Left, sig2H, sig2W],\r\n    color:c\r\n  };\r\nfunction setColor(value){\r\nsetC(value);\r\n  var name=document.getElementById(\"name\");\r\n  var event=document.getElementById(\"event\");\r\n  var eDate=document.getElementById(\"e-date\");\r\n  var position=document.getElementById(\"position\");\r\n\r\n  name.style.color=value;\r\n  event.style.color=value;\r\n  eDate.style.color=value;\r\n  position.style.color=value;\r\n\r\n\r\n}\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"certUrl\", cert);\r\n    console.log(formData);\r\n    await axios\r\n      .post(\"http://localhost:5000/api/cert/cert-upload\", formData)\r\n      .then(async (res: any) => {\r\n        console.log(res);\r\n        console.log(res.data._id);\r\n\r\n        var certDetailObj = {\r\n          certId: res.data._id,\r\n          category: type,\r\n          userId: userId,\r\n          coordinates: coordinates,\r\n        };\r\n        console.log(\"Hello\");\r\n        console.log(certDetailObj);\r\n        await axios\r\n          .put(\r\n            \"http://localhost:5000/api/cert/cert-upload-details\",\r\n            certDetailObj\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            // window.alert(\"Certificate Uploaded Successfully\");\r\n            setAlert(true);\r\n            setTimeout(function () {\r\n              window.location.reload();\r\n            }, 2000);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n  };\r\n\r\n  console.log(userId);\r\n  return (\r\n    <div\r\n      className={\r\n        type === \"comp\"\r\n          ? \"container cont3\"\r\n          : type === \"org\"\r\n          ? \"container cont2\"\r\n          : \"container cont1\"\r\n      }\r\n    >\r\n      {alert && (\r\n        <div className=\"alert\">\r\n          Congratulations! Certifcate has been uploaded successfully!!\r\n        </div>\r\n      )}\r\n\r\n      <Navbar2 />\r\n      <div className=\"left-c\">\r\n        <div className=\"left-box\" id=\"set-bg\">\r\n          <div id=\"name\">Person Name</div>\r\n          <div id=\"event\">Event Name</div>\r\n          <div id=\"e-date\">01/01/21</div>\r\n          <div id=\"position\">2</div>\r\n          <img alt=\"qr\" src={qr} id=\"qrc\"></img>\r\n          <img alt=\"sig1\" src={sig} id=\"sig1\"></img>\r\n          <img alt=\"sig1\" src={sig} id=\"sig2\"></img>\r\n\r\n          <button className=\"up-btn\" id=\"up-btn\" onClick={upload}>\r\n            <img src={up} />\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"delete-up\" onClick={() => window.location.reload()}>\r\n          Delete Image\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"right-c\">\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            <input\r\n              className=\"upload-input\"\r\n              type=\"file\"\r\n              id=\"file-inp\"\r\n              onChange={onFileChange}\r\n            />\r\n          </div>\r\n          <div className=\"up-box\">\r\n            <select\r\n              onChange={(e) => setType(e.target.value)}\r\n              className=\"up-select\"\r\n            >\r\n              <option id=\"op\" value=\"\">\r\n                Purpose of Generating Certificate\r\n              </option>\r\n              <option id=\"op\" value=\"wc\">\r\n                WC Completion\r\n              </option>\r\n              <option id=\"op\" value=\"mc\">\r\n                MC Completion\r\n              </option>\r\n              <option id=\"op\" value=\"org\">\r\n                Organizing a Competition\r\n              </option>\r\n              <option id=\"op\" value=\"comp\">\r\n                Participating in or winning a Competition\r\n              </option>\r\n            </select>\r\n\r\n            {type && (\r\n              <div className=\"type-container\">\r\n                <div>\r\n                  <div className=\"enter\">ENTER THE SPECIFICATIONS:</div>\r\n                  <div>\r\n                    <div className=\"row type-row\">\r\n                    <label className=\"type-label\" id=\"c-label\">Font Colour:</label>\r\n                    <input type={\"color\"} id=\"color\" onChange={(e)=>setColor(e.target.value)}/>\r\n\r\n                      </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">1. Name:</label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionNameTop(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionNameLeft(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => NameW(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Font:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => NameFont(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">2. QRCODE:</label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionqrTop(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionqrLeft(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => qrWidth(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => qrHeight(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        3. Faculty Advisor Signature:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig2Top(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig2Left(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig2Width(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig2Height(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row type-row\">\r\n                      <label className=\"type-label\">\r\n                        4. Chairperson Signature:\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Top:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig1Top(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Left:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => positionsig1Left(e)}\r\n                          ></input>\r\n                        </div>\r\n\r\n                        {/* <div className=\"row input-row\" id=\"qr-row\"> */}\r\n                      </div>\r\n                      <div className=\"row input-row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <label>Width:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig1Width(e)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <label className=\"\">Height:</label>\r\n                          <input\r\n                            className=\"type-input\"\r\n                            type=\"number\"\r\n                            onChange={(e) => sig1Height(e)}\r\n                          ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {type === \"org\" && (\r\n                    <div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">5. Event Name:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">6. Event Date:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}{\" \"}\r\n                  {type === \"comp\" && (\r\n                    <div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">5. Event Name:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventW(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">6. Event Date:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionEventDateLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => EventDateFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>{\" \"}\r\n                      <div className=\"row type-row\">\r\n                        <label className=\"type-label\">7. Positon Won:</label>\r\n                        <br />\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Top:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionPosTop(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Left:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => positionPosLeft(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row input-row\">\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Width:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => PositionW(e)}\r\n                            ></input>\r\n                          </div>\r\n                          <div className=\"col-lg-6\">\r\n                            <label>Font:</label>\r\n                            <input\r\n                              className=\"type-input\"\r\n                              type=\"number\"\r\n                              onChange={(e) => PositionFont(e)}\r\n                            ></input>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"row input-row\">\r\n                    <div className=\"col-lg-6\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                      <button type=\"submit\" className=\"submit-up\">\r\n                        Upload\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className={type === \"comp\" ? \"upload-info info3\" : type===\"org\" ? \"upload-info info2\" : \"upload-info\"}> */}\r\n                  <div className=\"upload-info\">\r\n                    <span style={{ fontWeight: 800, marginRight: \"10px\" }}>\r\n                      Note:\r\n                    </span>\r\n                    The dimmensions of the certificate are 700px x 500px, please\r\n                    enter all coordinates in px keeping this height and width in\r\n                    mind.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\actions.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\context.tsx",[],"C:\\Users\\surya\\Desktop\\Temp\\Certman\\Frontend\\src\\Context\\reducer.tsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":11,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":31,"column":6,"nodeType":"153","endLine":31,"endColumn":8,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"155","line":16,"column":18,"nodeType":"149","messageId":"150","endLine":16,"endColumn":33},{"ruleId":"147","severity":1,"message":"156","line":4,"column":27,"nodeType":"149","messageId":"150","endLine":4,"endColumn":33},{"ruleId":"147","severity":1,"message":"157","line":7,"column":9,"nodeType":"149","messageId":"150","endLine":7,"endColumn":17},{"ruleId":"147","severity":1,"message":"158","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":9},{"ruleId":"147","severity":1,"message":"159","line":18,"column":11,"nodeType":"149","messageId":"150","endLine":18,"endColumn":18},{"ruleId":"147","severity":1,"message":"155","line":18,"column":20,"nodeType":"149","messageId":"150","endLine":18,"endColumn":35},{"ruleId":"147","severity":1,"message":"160","line":18,"column":37,"nodeType":"149","messageId":"150","endLine":18,"endColumn":53},{"ruleId":"147","severity":1,"message":"161","line":18,"column":55,"nodeType":"149","messageId":"150","endLine":18,"endColumn":69},{"ruleId":"162","severity":1,"message":"163","line":62,"column":67,"nodeType":"164","messageId":"165","endLine":62,"endColumn":69},{"ruleId":"151","severity":1,"message":"166","line":73,"column":6,"nodeType":"153","endLine":73,"endColumn":8,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":137,"column":58,"nodeType":"164","messageId":"170","endLine":137,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":147,"column":58,"nodeType":"164","messageId":"170","endLine":147,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":156,"column":59,"nodeType":"164","messageId":"170","endLine":156,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":162,"column":58,"nodeType":"164","messageId":"170","endLine":162,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":172,"column":58,"nodeType":"164","messageId":"170","endLine":172,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":179,"column":59,"nodeType":"164","messageId":"170","endLine":179,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":186,"column":58,"nodeType":"164","messageId":"170","endLine":186,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":193,"column":62,"nodeType":"164","messageId":"170","endLine":193,"endColumn":63},{"ruleId":"151","severity":1,"message":"171","line":202,"column":6,"nodeType":"153","endLine":202,"endColumn":13,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":289,"column":24,"nodeType":"175","messageId":"176","endLine":289,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":340,"column":66,"nodeType":"164","messageId":"170","endLine":340,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":350,"column":66,"nodeType":"164","messageId":"170","endLine":350,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":358,"column":67,"nodeType":"164","messageId":"170","endLine":358,"endColumn":68},{"ruleId":"168","severity":1,"message":"169","line":364,"column":66,"nodeType":"164","messageId":"170","endLine":364,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":373,"column":66,"nodeType":"164","messageId":"170","endLine":373,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":380,"column":67,"nodeType":"164","messageId":"170","endLine":380,"endColumn":68},{"ruleId":"168","severity":1,"message":"169","line":387,"column":66,"nodeType":"164","messageId":"170","endLine":387,"endColumn":67},{"ruleId":"168","severity":1,"message":"169","line":394,"column":70,"nodeType":"164","messageId":"170","endLine":394,"endColumn":71},{"ruleId":"177","severity":1,"message":"178","line":479,"column":13,"nodeType":"179","endLine":484,"endColumn":14},{"ruleId":"162","severity":1,"message":"180","line":510,"column":30,"nodeType":"164","messageId":"165","endLine":510,"endColumn":32},{"ruleId":"162","severity":1,"message":"180","line":533,"column":36,"nodeType":"164","messageId":"165","endLine":533,"endColumn":38},{"ruleId":"162","severity":1,"message":"180","line":551,"column":34,"nodeType":"164","messageId":"165","endLine":551,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":563,"column":23,"nodeType":"179","endLine":563,"endColumn":73},{"ruleId":"177","severity":1,"message":"178","line":574,"column":13,"nodeType":"179","endLine":579,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":607,"column":21,"nodeType":"179","endLine":607,"endColumn":67},{"ruleId":"181","severity":1,"message":"182","line":648,"column":13,"nodeType":"179","endLine":648,"endColumn":56},{"ruleId":"181","severity":1,"message":"182","line":652,"column":11,"nodeType":"179","endLine":652,"endColumn":56},{"ruleId":"181","severity":1,"message":"182","line":656,"column":13,"nodeType":"179","endLine":656,"endColumn":54},{"ruleId":"147","severity":1,"message":"183","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"160","line":18,"column":35,"nodeType":"149","messageId":"150","endLine":18,"endColumn":51},{"ruleId":"147","severity":1,"message":"184","line":25,"column":11,"nodeType":"149","messageId":"150","endLine":25,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":402,"column":13,"nodeType":"179","endLine":402,"endColumn":29},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'errorMessageLog' is assigned a value but never used.","'logOut' is defined but never used.","'dispatch' is assigned a value but never used.","'s' is defined but never used.","'loading' is assigned a value but never used.","'errorMessageSign' is assigned a value but never used.","'successMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["188"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'certUrl', 'coordinates', and 'type'. Either include them or remove the dependency array.",["189"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [data]",{"range":"196","text":"197"},"Update the dependencies array to be: [id]",{"range":"198","text":"199"},"Update the dependencies array to be: [certUrl, coordinates, final, type]",{"range":"200","text":"201"},[842,844],"[data]",[2403,2405],"[id]",[5981,5988],"[certUrl, coordinates, final, type]"]