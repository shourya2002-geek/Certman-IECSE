[{"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx":"1","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts":"2","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx":"3","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts":"4","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx":"5","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx":"6","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx":"7","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx":"8","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx":"9","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx":"10","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx":"11","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/index.tsx":"12","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx":"13","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx":"14","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx":"15","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx":"16","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar/index.tsx":"17"},{"size":500,"mtime":1637298401235,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1637298401235,"results":"20","hashOfConfig":"19"},{"size":2707,"mtime":1637298401228,"results":"21","hashOfConfig":"19"},{"size":817,"mtime":1637298401228,"results":"22","hashOfConfig":"19"},{"size":485,"mtime":1637298401228,"results":"23","hashOfConfig":"19"},{"size":220,"mtime":1637298401229,"results":"24","hashOfConfig":"19"},{"size":942,"mtime":1637298401229,"results":"25","hashOfConfig":"19"},{"size":1811,"mtime":1637298401228,"results":"26","hashOfConfig":"19"},{"size":1458,"mtime":1637298401230,"results":"27","hashOfConfig":"19"},{"size":2191,"mtime":1637303692664,"results":"28","hashOfConfig":"19"},{"size":3212,"mtime":1637298401229,"results":"29","hashOfConfig":"19"},{"size":2331,"mtime":1637298401231,"results":"30","hashOfConfig":"19"},{"size":15483,"mtime":1637332735514,"results":"31","hashOfConfig":"19"},{"size":9947,"mtime":1637298401231,"results":"32","hashOfConfig":"19"},{"size":214,"mtime":1637298401231,"results":"33","hashOfConfig":"19"},{"size":1562,"mtime":1637298401229,"results":"34","hashOfConfig":"19"},{"size":1703,"mtime":1637298401230,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"n0ashg",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/index.tsx",[],["80","81"],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/reportWebVitals.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/App.tsx",["82"],"// import \"./App.css\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Redirect,\n// } from \"react-router-dom\";\n// import { useCookies } from \"react-cookie\";\n// import Home from \"./components/Home/Home\";\n// import Login from \"./components/Login/Login\";\n// import ForgotPassword from \"./components/Forgot/ForgotPassword\";\n// import ResetPassword from \"./components/Forgot/ResetPassword\";\n// import Generate from \"./components/Generate/Generate\";\n// import SingleImage from \"./components/SingleImage/SingleImage\";\n\n// function App() {\n//   const [cookie, setCookie, removeCookie] = useCookies<any>([\"user\"]);\n//   return (\n//     <div className=\"App\">\n//       <Router>\n//         <Switch>\n//           <Route\n//             path=\"/\"\n//             exact\n//             component={() => <Login cookie={cookie} setCookie={setCookie} />}\n//           />\n\n//           <Route\n//             path=\"/reset/:id/:token\"\n//             exact\n//             component={() => <ResetPassword />}\n//           />\n\n//           <Route path=\"/forgot\" exact component={() => <ForgotPassword />} />\n\n//           <Route\n//             path=\"/home\"\n//             render={() =>\n//               cookie.user ? (\n//                 <Home cookie={cookie} removeCookie={removeCookie} />\n//               ) : (\n//                 <Redirect to=\"/\" />\n//               )\n//             }\n//           />\n//           {cookie.user ? (\n//             <Route\n//               path=\"/generate\"\n//               exact\n//               component={() => (\n//                 <Generate cookie={cookie} removeCookie={removeCookie} />\n//               )}\n//             />\n//           ) : (\n//             <Redirect to=\"/\" />\n//           )}\n//           <Route\n//             path=\"/single-image/:_id\"\n//             exact\n//             component={() => <SingleImage />}\n//           />\n//         </Switch>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport routes from \"./Config/routes\";\nimport { AuthProvider } from \"./Context\";\nimport AppRoute from \"./Components/AppRoute\";\n\nfunction App() { \n  return (\n\t<div className=\"App\">\n\n      <AuthProvider>\n        <Router>\n          <Switch>\n            {routes.map((route) => {\n              return (\n                <AppRoute\n                  key={route.path}\n                  path={route.path}\n                  component={route.component}\n                  isPrivate={route.isPrivate}\n                />\n              );\n            })}\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Config/routes.ts",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Components/AppRoute.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/context.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/actions.tsx",["83","84"],"const ROOT_URL = \"http://localhost:5000\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(loginPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/login`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data,\n        status: res.status,\n      });\n\n      return res;\n    }\n\n    dispatch({ type: \"LOGIN_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function signUpUser(dispatch, signUpPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(signUpPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_SIGNUP\" });\n    let response = await fetch(`${ROOT_URL}/api/auth/signup`, requestOptions);\n    let res = await response.json();\n\n    console.log(res.data);\n    console.log(res.status);\n\n    if (res.status == \"success\") {\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\n      return res.status;\n    }\n\n    dispatch({ type: \"SIGNUP_ERROR\", error: res.error });\n    console.log(res.error);\n    return;\n  } catch (error) {\n    dispatch({ type: \"SIGNUP_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function logOut(dispatch) {\n  dispatch({ type: \"LOGOUT\" });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Generate/index.tsx",["85","86","87","88","89","90"],"import \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nfunction Generate(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  function handleLogout() {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  }\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"home-top\">\n        <Link to={\"/dashboard\"}>\n          {\" \"}\n          <button className=\"home-button-2\">Back To Home</button>\n        </Link>\n        <button onClick={() => handleLogout()} className=\"logout-button\">\n          Logout\n        </button>\n      </div>\n      <div className=\"home-main\"></div>\n      <div className=\"home-header\">Choose a template</div>\n\n      {uploadedCerts.map((cert) => (\n        <Link to={\"/single-cert/\" + cert._id}>\n          <img src={cert.certUrl} className=\"home-photo\" />\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nexport default Generate;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Login/index.tsx",["91","92"],"import React, { useState, useEffect } from \"react\";\n\nimport { loginUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./login.module.css\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage, successMessage }:any = useAuthState();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await loginUser(dispatch, { email, password });\n      let user = localStorage.getItem(\"currentUser\")\n        ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n        : \"\";\n      if (user) {\n        props.history.push(\"/dashboard\");\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div style={{width:200}}>\n          <h1>Login Page</h1>\n          <div>\n            {errorMessage ? (\n              <p className={styles.error}>{errorMessage}</p>\n            ) : null}\n\n            {successMessage ? (\n              <p className={styles.success}>{successMessage}</p>\n            ) : null}\n          </div>\n          <form>\n            <div className={styles.loginForm}>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n            </div>\n            <button onClick={handleLogin} disabled={loading}>\n              login\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Dashboard/index.tsx",["93","94","95","96","97"],"import \"./dashboard.css\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\nimport {Link} from 'react-router-dom';\nimport NavBar from \"../Navbar\";\nfunction Home2(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const [cert, setCert] = useState(\"\");\n  const [uploadedCerts, setUploadedCerts] = useState([]);\n\n  const handleLogout = () => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\")\n      .then((res) => {\n        console.log(res);\n        setUploadedCerts(res.data);\n        console.log(uploadedCerts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }, []);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"certUrl\", cert);\n    console.log(formData);\n    await axios\n      .post(   \"http://localhost:5000/api/cert/cert-upload\", formData, {})\n      .then((res) => {\n        console.log(res);\n\n        //post\n        //route??\n        \n      });\n    const modalClose = document.getElementById(\"modalClose\");\n    modalClose.click();\n    window.location.reload();\n  };\n\n  function onFileChange(e) {\n    setCert(e.target.files[0]);\n  }\n\n  console.log(userDetails.user.role);\n  return (\n    <div className=\"container\">\n      <NavBar/>\n      {/* <div className=\"home-top\">\n        <button onClick={() => handleLogout()} className=\"logout-button\">\n          Logout\n        </button>\n      </div> */}\n      <div className=\"home-main\">\n        <a className=\"modal-open\" href=\"#modal\">\n          {\" \"}\n          <button className=\"home-button\">Upload a new Template</button>\n        </a>\n        {userDetails.user.role == \"Board\" && (\n          <Link to={\"/generate\"}>\n          <button className=\"home-button\">Generate Certificates</button>\n          </Link>\n        )}\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload A New Template</h3>\n            <div className=\"modal-area\">\n              <div className=\"row\">\n                <form onSubmit={onSubmit}>\n                  <div className=\"form-group\">\n                  <input\n                      className=\"upload-input\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-header\">Existing Templates</div>\n      {uploadedCerts.map((cert) => (\n        <img src={cert.certUrl} className=\"home-photo\" />\n      ))}\n    </div>\n  );\n}\n\nexport default Home2;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SignUp/index.tsx",["98"],"import React, { useState } from \"react\";\n\nimport { signUpUser, useAuthState, useAuthDispatch } from \"../../Context\";\nimport styles from \"./signup.module.css\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage }:any = useAuthState();\n\n  const handleSignUp = async(e) => {\n    e.preventDefault();\n\n    try {\n      let res = await signUpUser(dispatch, { name, email, password, role: 'MC' });\n      if (res == \"success\") {\n        props.history.push(\"./login\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return (\n    <>\n      <div className={styles.container}>\n        <div style={{width:200}}>\n          <h1>SignUp Page</h1>\n          <div>\n            {errorMessage ? (\n              <p className={styles.error}>{errorMessage}</p>\n            ) : null}\n          </div>\n          <form>\n            <div className={styles.loginForm}>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"text\">Name</label>\n                <input\n                  type=\"text\"\n                  id=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n              <div className={styles.loginFormItem}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={loading}\n                />\n              </div>\n            </div>\n            <button onClick={handleSignUp} disabled={loading}>\n              Signup\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Upload/index.tsx",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/SingleCert/index.tsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nexport default function SingleImage(props) {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const id = window.location.pathname.split('/')[2];\n\n  const [csv, setCsv] = useState(\"\");\n  const [certUrl, setCertUrl] = useState(\"\");\n  const [arr, setArr] = useState([]);\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [show, setShow] = useState(false);\n  const [emailCount, setEmailCount] = useState(0);\n  const [csvError, setCsvError] = useState(false);\n  const [final, setFinal] = useState(false);\n\n  const canvasRef = useRef(null);\n\n  const handleLogout = () => {\n    logOut(dispatch);\n    props.history.push(\"/login\");\n  };\n\n  function onFileChange(e) {\n    setCsv(e.target.files[0]);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/cert/\" + id)\n      .then((response:any) => {\n        console.log(response);\n        console.log(\"jrr;;;oo\");\n        setCertUrl(response.data.certUrl);\n        setCoordinates(response.data.coordinates);\n        setFinal(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"This fucker ran\");\n    console.log(id)\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = 700;\n    canvas.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      ctx.fillText(\"Person Name\", 280, 300);\n    };\n  }, [final]);\n\n  const emailHandler = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    console.log(\"hello\");\n\n    console.log(arr);\n    setShow(true);\n    console.log(certUrl);\n    function toBuffer(ab) {\n      var buf = Buffer.alloc(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buf.length; ++i) {\n        buf[i] = view[i];\n      }\n      return buf;\n    }\n    for (var i = 0; i < arr.length; i++) {\n      var canvasUrl, canvasBuffer;\n      var user = arr[i];\n      console.log(\"Sending:\", user);\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", user.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n\n        ctx.fillText(user.name, 280, 300);\n        var canvas2 = document.getElementById(\"myCanvas\");\n        // var imageData = ctx.getImageData(0, 0, 700, 500);\n        // canvasUrl = imageData.data.buffer\n        // canvasBuffer=toBuffer(canvasUrl)\n        // console.log(canvasUrl)\n      };\n      var data = {\n        subject,\n        content,\n        user,\n        certUrl,\n      };\n      await axios\n        .post(\"http://localhost:5000/api/sendmail/cert/\", data)\n        .then((res) => (console.log(res.data), setEmailCount((c) => c + 1)))\n        .catch((err) => console.log(err.message));\n    }\n    setShow(false);\n  };\n\n  const onSubmit = async (e) => {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"csv\", csv);\n\n    await axios\n      .post(\"http://localhost:5000/api/csv/csv-upload\", formData, {})\n      .then((res:any) => {\n        setArr(res.data);\n        const modalClose = document.getElementById(\"modalClose\");\n        modalClose.click();\n      });\n  };\n\n  function download() {\n    if (csv == \"\") {\n      setCsvError(true);\n      alert(\"No csv uploaded!\");\n      return;\n    }\n    console.log(arr);\n    arr.map((element) => {\n      const elementCanvas = document.createElement(\"canvas\");\n      elementCanvas.setAttribute(\"ref\", element.name);\n      const canvasObj = canvasRef.current;\n      const ctx = canvasObj.getContext(\"2d\");\n      canvasObj.width = 700;\n      canvasObj.height = 500;\n\n      var background = new Image();\n      background.setAttribute(\"crossOrigin\", \"anonymous\");\n      background.src = certUrl;\n\n      background.onload = function () {\n        ctx.drawImage(background, 0, 0, 700, 500);\n\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        ctx.fillStyle = \"black\";\n\n        ctx.fillText(element.name, 280, 300);\n        var canvas2:any = document.getElementById(\"myCanvas\");\n        var url = canvas2.toDataURL(\"image/png\");\n\n        var link = document.createElement(\"a\");\n        link.download = `${element.name}.png`;\n        link.href = url;\n        link.click();\n      };\n    });\n    const elementCanvas = document.createElement(\"canvas\");\n    elementCanvas.classList.add(\"hide-canvas\");\n\n    elementCanvas.setAttribute(\"ref\", \"canvasRef\");\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    canvasObj.width = 700;\n    canvasObj.height = 500;\n\n    var background = new Image();\n    background.setAttribute(\"crossOrigin\", \"anonymous\");\n    background.src = certUrl;\n\n    background.onload = function () {\n      ctx.drawImage(background, 0, 0, 700, 500);\n\n      ctx.font = \"20px Arial\";\n      ctx.textAlign = \"left\";\n      ctx.textBaseline = \"top\";\n      ctx.fillStyle = \"black\";\n\n      ctx.fillText(\"Person Name\", 280, 300);\n    };\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"home-top\">\n        <Link to={\"/home\"}>\n          {\" \"}\n          <button className=\"home-button-2\">Back To Home</button>\n        </Link>\n\n        <button onClick={() => handleLogout()} className=\"logout-button\">\n          Logout\n        </button>\n      </div>\n\n      <div className=\"row\">\n        <a className=\"modal-open\" href=\"#modal\">\n          {\" \"}\n          <button className=\"home-button\">Upload CSV File</button>\n        </a>\n        <button className=\"home-button\" onClick={download}>\n          Download All\n        </button>\n        <a className=\"modal-open\" href=\"#modal2\">\n          <button className=\"home-button\">Mail Certifcates</button>\n        </a>\n        <div className=\"modal\" id=\"modal\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Upload CSV File</h3>\n            <div className=\"modal-area\">\n              <div className=\"row\">\n                <form onSubmit={onSubmit} id=\"csvForm\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"upload-input\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal\" id=\"modal2\">\n          <div className=\"modal-content\">\n            <a\n              href=\"#\"\n              className=\"modal-close\"\n              id=\"modalClose\"\n              title=\"Close Modal\"\n            >\n              X\n            </a>\n            <h3 className=\"modal-title\">Mail Certificates</h3>\n            <div className=\"modal-area\">\n              {show ? (\n                <div className=\"count\">\n                  Sending mails... <br />\n                  Sent {emailCount}/{arr.length} mails\n                </div>\n              ) : null}\n              <div className=\"row\">\n                <form onSubmit={emailHandler}>\n                  <div className=\"form-group\">\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Subject\"\n                        required\n                        type=\"text\"\n                        onChange={(e) => setSubject(e.target.value)}\n                      ></input>\n                    </div>\n                    <div>\n                      <input\n                        className=\"mail-input\"\n                        placeholder=\"Enter Content For Mail\"\n                        type=\"text\"\n                        onChange={(e) => setContent(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button className=\"upload-button\" type=\"submit\">\n                      Send Mail\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"canvas-container\">\n        <canvas\n          ref={canvasRef}\n          id=\"myCanvas\"\n          className=\"cnvas2\"\n          width=\"700\"\n          height=\"200\"\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/NotFound/index.tsx",[],"/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Context/reducer.tsx",["140","141","142","143"],"import React, { useState, useReducer } from \"react\";\n\nlet user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).name\n  : \"\";\nlet token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).token\n  : \"\";\n\nexport const initialState = {\n  user: \"\" || JSON.parse(localStorage.getItem(\"currentUser\")),\n  token: \"\" || token,\n  loading: false,\n  errorMessage: null,\n  successMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        user: JSON.parse(localStorage.getItem(\"currentUser\")),\n        successMessage: \"Logged in Successfully\",\n        loading: false,\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        token: \"\",\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    case \"REQUEST_SIGNUP\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...initialState,\n        successMessage: \"Signed up Successfully\",\n        loading: false,\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","/Users/ashutosh/Desktop/ContextAPIPractice/Certman/Frontend/src/Pages/Navbar/index.tsx",["144","145","146"],"import React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport logo from \"../../images/iecse_logo.svg\";\nimport user from \"../../images/user_icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { useAuthDispatch, logOut, useAuthState } from \"../../Context\";\n\nexport default function NavBar(props) {\n  const [toggle, setToggle] = useState(false);\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n  const handleLogout = () => {\n    logOut(dispatch);\n    window.location.href = '/login';\n    \n    } //relative to domain  };\n\n  return (\n    <>\n      <div className=\"nav-container\">\n        <div className=\"left-container\">\n          <Link to={\"/dashboard\"}>\n            <img src={logo} />\n          </Link>\n          <span className=\"cert-h\">Certman</span>\n        </div>\n        <div className=\"right-container\">\n          <button className=\"icon-btn\" onClick={() => setToggle(!toggle)}>\n            <img src={user} className=\"user-icon\"></img>\n          </button>\n        </div>\n      </div>\n      {toggle && (\n        <div className=\"toggle-div\">\n          <div>\n            <Link className=\"toggle-item\">Your Uploads</Link>\n          </div>\n          <div>\n            <Link to={\"/upload\"} className=\"toggle-item\">Upload a new Template </Link>\n          </div>\n          {userDetails.user.role == \"Board\" && (\n            <div>\n              <Link className=\"toggle-item\">Generate Certificates </Link>\n            </div>\n          )}\n          <div>\n            <button className=\"logout-btn\" onClick={()=>handleLogout()}>\n            <Link className=\"toggle-item\"> Logout</Link>\n            </button>\n          </div>\n        </div>\n      )}{\" \"}\n    </>\n  );\n}\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":70,"column":35,"nodeType":"153","messageId":"154","endLine":70,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":18,"column":20,"nodeType":"157","messageId":"158","endLine":18,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":53,"column":20,"nodeType":"157","messageId":"158","endLine":53,"endColumn":22},{"ruleId":"151","severity":1,"message":"159","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"160","line":9,"column":9,"nodeType":"153","messageId":"154","endLine":9,"endColumn":20},{"ruleId":"151","severity":1,"message":"161","line":15,"column":10,"nodeType":"153","messageId":"154","endLine":15,"endColumn":14},{"ruleId":"151","severity":1,"message":"162","line":15,"column":16,"nodeType":"153","messageId":"154","endLine":15,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":29,"column":6,"nodeType":"165","endLine":29,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":47,"column":11,"nodeType":"169","endLine":47,"endColumn":60},{"ruleId":"151","severity":1,"message":"170","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"171","line":17,"column":11,"nodeType":"153","messageId":"154","endLine":17,"endColumn":14},{"ruleId":"151","severity":1,"message":"172","line":14,"column":9,"nodeType":"153","messageId":"154","endLine":14,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":30,"column":6,"nodeType":"165","endLine":30,"endColumn":8,"suggestions":"173"},{"ruleId":"155","severity":1,"message":"156","line":68,"column":32,"nodeType":"157","messageId":"158","endLine":68,"endColumn":34},{"ruleId":"174","severity":1,"message":"175","line":75,"column":13,"nodeType":"169","endLine":80,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":107,"column":9,"nodeType":"169","endLine":107,"endColumn":58},{"ruleId":"155","severity":1,"message":"156","line":19,"column":15,"nodeType":"157","messageId":"158","endLine":19,"endColumn":17},{"ruleId":"151","severity":1,"message":"176","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":193,"column":24,"nodeType":"157","messageId":"158","endLine":193,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":193,"column":40,"nodeType":"157","messageId":"158","endLine":193,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":206,"column":65,"nodeType":"179","messageId":"180","endLine":206,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":215,"column":66,"nodeType":"179","messageId":"180","endLine":215,"endColumn":67},{"ruleId":"155","severity":1,"message":"156","line":223,"column":23,"nodeType":"157","messageId":"158","endLine":223,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":236,"column":65,"nodeType":"179","messageId":"180","endLine":236,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":245,"column":66,"nodeType":"179","messageId":"180","endLine":245,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":262,"column":66,"nodeType":"179","messageId":"180","endLine":262,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":271,"column":67,"nodeType":"179","messageId":"180","endLine":271,"endColumn":68},{"ruleId":"177","severity":1,"message":"178","line":288,"column":65,"nodeType":"179","messageId":"180","endLine":288,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":297,"column":66,"nodeType":"179","messageId":"180","endLine":297,"endColumn":67},{"ruleId":"155","severity":1,"message":"156","line":305,"column":23,"nodeType":"157","messageId":"158","endLine":305,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":318,"column":65,"nodeType":"179","messageId":"180","endLine":318,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":327,"column":66,"nodeType":"179","messageId":"180","endLine":327,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":344,"column":66,"nodeType":"179","messageId":"180","endLine":344,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":353,"column":67,"nodeType":"179","messageId":"180","endLine":353,"endColumn":68},{"ruleId":"177","severity":1,"message":"178","line":370,"column":65,"nodeType":"179","messageId":"180","endLine":370,"endColumn":66},{"ruleId":"177","severity":1,"message":"178","line":379,"column":66,"nodeType":"179","messageId":"180","endLine":379,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":396,"column":69,"nodeType":"179","messageId":"180","endLine":396,"endColumn":70},{"ruleId":"177","severity":1,"message":"178","line":405,"column":70,"nodeType":"179","messageId":"180","endLine":405,"endColumn":71},{"ruleId":"151","severity":1,"message":"159","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"160","line":9,"column":9,"nodeType":"153","messageId":"154","endLine":9,"endColumn":20},{"ruleId":"151","severity":1,"message":"181","line":19,"column":10,"nodeType":"153","messageId":"154","endLine":19,"endColumn":21},{"ruleId":"151","severity":1,"message":"182","line":20,"column":10,"nodeType":"153","messageId":"154","endLine":20,"endColumn":14},{"ruleId":"151","severity":1,"message":"183","line":20,"column":16,"nodeType":"153","messageId":"154","endLine":20,"endColumn":23},{"ruleId":"151","severity":1,"message":"184","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":18},{"ruleId":"163","severity":1,"message":"185","line":50,"column":6,"nodeType":"165","endLine":50,"endColumn":8,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"187","line":74,"column":6,"nodeType":"165","endLine":74,"endColumn":13,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"156","line":77,"column":13,"nodeType":"157","messageId":"158","endLine":77,"endColumn":15},{"ruleId":"151","severity":1,"message":"189","line":88,"column":14,"nodeType":"153","messageId":"154","endLine":88,"endColumn":22},{"ruleId":"151","severity":1,"message":"190","line":97,"column":11,"nodeType":"153","messageId":"154","endLine":97,"endColumn":20},{"ruleId":"151","severity":1,"message":"191","line":97,"column":22,"nodeType":"153","messageId":"154","endLine":97,"endColumn":34},{"ruleId":"192","severity":1,"message":"193","line":111,"column":27,"nodeType":"194","messageId":"195","endLine":125,"endColumn":8},{"ruleId":"151","severity":1,"message":"196","line":120,"column":13,"nodeType":"153","messageId":"154","endLine":120,"endColumn":20},{"ruleId":"177","severity":1,"message":"178","line":134,"column":46,"nodeType":"179","messageId":"180","endLine":134,"endColumn":47},{"ruleId":"155","severity":1,"message":"156","line":141,"column":13,"nodeType":"157","messageId":"158","endLine":141,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":160,"column":13,"nodeType":"157","messageId":"158","endLine":160,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":166,"column":23,"nodeType":"199","messageId":"200","endLine":166,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":246,"column":13,"nodeType":"169","endLine":251,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":278,"column":13,"nodeType":"169","endLine":283,"endColumn":14},{"ruleId":"151","severity":1,"message":"201","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"202","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"203","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":37},{"ruleId":"151","severity":1,"message":"204","line":3,"column":5,"nodeType":"153","messageId":"154","endLine":3,"endColumn":9},{"ruleId":"167","severity":1,"message":"168","line":23,"column":13,"nodeType":"169","endLine":23,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":29,"column":13,"nodeType":"169","endLine":29,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":41,"column":34,"nodeType":"157","messageId":"158","endLine":41,"endColumn":36},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'userDetails' is assigned a value but never used.","'cert' is assigned a value but never used.","'setCert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadedCerts'. Either include it or remove the dependency array.","ArrayExpression",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'res' is assigned a value but never used.","'handleLogout' is assigned a value but never used.",["208"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'$' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'coordinates' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'csvError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'certUrl' and 'id'. Either include them or remove the dependency array.",["210"],"'toBuffer' is defined but never used.","'canvasUrl' is defined but never used.","'canvasBuffer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'background', 'user'.","FunctionExpression","unsafeRefs","'canvas2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [uploadedCerts]",{"range":"218","text":"219"},{"range":"220","text":"219"},"Update the dependencies array to be: [id]",{"range":"221","text":"222"},"Update the dependencies array to be: [certUrl, final, id]",{"range":"223","text":"224"},[809,811],"[uploadedCerts]",[817,819],[1494,1496],"[id]",[2097,2104],"[certUrl, final, id]"]